(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_symfony_stimulus-bridge_dist_index_js-node_modules_bootstrap_dist_js_boo-8442a4"],{

/***/ "./node_modules/@hotwired/stimulus/dist/stimulus.js":
/*!**********************************************************!*\
  !*** ./node_modules/@hotwired/stimulus/dist/stimulus.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Application": () => (/* binding */ Application),
/* harmony export */   "AttributeObserver": () => (/* binding */ AttributeObserver),
/* harmony export */   "Context": () => (/* binding */ Context),
/* harmony export */   "Controller": () => (/* binding */ Controller),
/* harmony export */   "ElementObserver": () => (/* binding */ ElementObserver),
/* harmony export */   "IndexedMultimap": () => (/* binding */ IndexedMultimap),
/* harmony export */   "Multimap": () => (/* binding */ Multimap),
/* harmony export */   "StringMapObserver": () => (/* binding */ StringMapObserver),
/* harmony export */   "TokenListObserver": () => (/* binding */ TokenListObserver),
/* harmony export */   "ValueListObserver": () => (/* binding */ ValueListObserver),
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "defaultSchema": () => (/* binding */ defaultSchema),
/* harmony export */   "del": () => (/* binding */ del),
/* harmony export */   "fetch": () => (/* binding */ fetch),
/* harmony export */   "prune": () => (/* binding */ prune)
/* harmony export */ });
/*
Stimulus 3.0.1
Copyright Â© 2021 Basecamp, LLC
 */
class EventListener {
    constructor(eventTarget, eventName, eventOptions) {
        this.eventTarget = eventTarget;
        this.eventName = eventName;
        this.eventOptions = eventOptions;
        this.unorderedBindings = new Set();
    }
    connect() {
        this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);
    }
    disconnect() {
        this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);
    }
    bindingConnected(binding) {
        this.unorderedBindings.add(binding);
    }
    bindingDisconnected(binding) {
        this.unorderedBindings.delete(binding);
    }
    handleEvent(event) {
        const extendedEvent = extendEvent(event);
        for (const binding of this.bindings) {
            if (extendedEvent.immediatePropagationStopped) {
                break;
            }
            else {
                binding.handleEvent(extendedEvent);
            }
        }
    }
    get bindings() {
        return Array.from(this.unorderedBindings).sort((left, right) => {
            const leftIndex = left.index, rightIndex = right.index;
            return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;
        });
    }
}
function extendEvent(event) {
    if ("immediatePropagationStopped" in event) {
        return event;
    }
    else {
        const { stopImmediatePropagation } = event;
        return Object.assign(event, {
            immediatePropagationStopped: false,
            stopImmediatePropagation() {
                this.immediatePropagationStopped = true;
                stopImmediatePropagation.call(this);
            }
        });
    }
}

class Dispatcher {
    constructor(application) {
        this.application = application;
        this.eventListenerMaps = new Map;
        this.started = false;
    }
    start() {
        if (!this.started) {
            this.started = true;
            this.eventListeners.forEach(eventListener => eventListener.connect());
        }
    }
    stop() {
        if (this.started) {
            this.started = false;
            this.eventListeners.forEach(eventListener => eventListener.disconnect());
        }
    }
    get eventListeners() {
        return Array.from(this.eventListenerMaps.values())
            .reduce((listeners, map) => listeners.concat(Array.from(map.values())), []);
    }
    bindingConnected(binding) {
        this.fetchEventListenerForBinding(binding).bindingConnected(binding);
    }
    bindingDisconnected(binding) {
        this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);
    }
    handleError(error, message, detail = {}) {
        this.application.handleError(error, `Error ${message}`, detail);
    }
    fetchEventListenerForBinding(binding) {
        const { eventTarget, eventName, eventOptions } = binding;
        return this.fetchEventListener(eventTarget, eventName, eventOptions);
    }
    fetchEventListener(eventTarget, eventName, eventOptions) {
        const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);
        const cacheKey = this.cacheKey(eventName, eventOptions);
        let eventListener = eventListenerMap.get(cacheKey);
        if (!eventListener) {
            eventListener = this.createEventListener(eventTarget, eventName, eventOptions);
            eventListenerMap.set(cacheKey, eventListener);
        }
        return eventListener;
    }
    createEventListener(eventTarget, eventName, eventOptions) {
        const eventListener = new EventListener(eventTarget, eventName, eventOptions);
        if (this.started) {
            eventListener.connect();
        }
        return eventListener;
    }
    fetchEventListenerMapForEventTarget(eventTarget) {
        let eventListenerMap = this.eventListenerMaps.get(eventTarget);
        if (!eventListenerMap) {
            eventListenerMap = new Map;
            this.eventListenerMaps.set(eventTarget, eventListenerMap);
        }
        return eventListenerMap;
    }
    cacheKey(eventName, eventOptions) {
        const parts = [eventName];
        Object.keys(eventOptions).sort().forEach(key => {
            parts.push(`${eventOptions[key] ? "" : "!"}${key}`);
        });
        return parts.join(":");
    }
}

const descriptorPattern = /^((.+?)(@(window|document))?->)?(.+?)(#([^:]+?))(:(.+))?$/;
function parseActionDescriptorString(descriptorString) {
    const source = descriptorString.trim();
    const matches = source.match(descriptorPattern) || [];
    return {
        eventTarget: parseEventTarget(matches[4]),
        eventName: matches[2],
        eventOptions: matches[9] ? parseEventOptions(matches[9]) : {},
        identifier: matches[5],
        methodName: matches[7]
    };
}
function parseEventTarget(eventTargetName) {
    if (eventTargetName == "window") {
        return window;
    }
    else if (eventTargetName == "document") {
        return document;
    }
}
function parseEventOptions(eventOptions) {
    return eventOptions.split(":").reduce((options, token) => Object.assign(options, { [token.replace(/^!/, "")]: !/^!/.test(token) }), {});
}
function stringifyEventTarget(eventTarget) {
    if (eventTarget == window) {
        return "window";
    }
    else if (eventTarget == document) {
        return "document";
    }
}

function camelize(value) {
    return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase());
}
function capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
}
function dasherize(value) {
    return value.replace(/([A-Z])/g, (_, char) => `-${char.toLowerCase()}`);
}
function tokenize(value) {
    return value.match(/[^\s]+/g) || [];
}

class Action {
    constructor(element, index, descriptor) {
        this.element = element;
        this.index = index;
        this.eventTarget = descriptor.eventTarget || element;
        this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error("missing event name");
        this.eventOptions = descriptor.eventOptions || {};
        this.identifier = descriptor.identifier || error("missing identifier");
        this.methodName = descriptor.methodName || error("missing method name");
    }
    static forToken(token) {
        return new this(token.element, token.index, parseActionDescriptorString(token.content));
    }
    toString() {
        const eventNameSuffix = this.eventTargetName ? `@${this.eventTargetName}` : "";
        return `${this.eventName}${eventNameSuffix}->${this.identifier}#${this.methodName}`;
    }
    get params() {
        if (this.eventTarget instanceof Element) {
            return this.getParamsFromEventTargetAttributes(this.eventTarget);
        }
        else {
            return {};
        }
    }
    getParamsFromEventTargetAttributes(eventTarget) {
        const params = {};
        const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`);
        const attributes = Array.from(eventTarget.attributes);
        attributes.forEach(({ name, value }) => {
            const match = name.match(pattern);
            const key = match && match[1];
            if (key) {
                Object.assign(params, { [camelize(key)]: typecast(value) });
            }
        });
        return params;
    }
    get eventTargetName() {
        return stringifyEventTarget(this.eventTarget);
    }
}
const defaultEventNames = {
    "a": e => "click",
    "button": e => "click",
    "form": e => "submit",
    "details": e => "toggle",
    "input": e => e.getAttribute("type") == "submit" ? "click" : "input",
    "select": e => "change",
    "textarea": e => "input"
};
function getDefaultEventNameForElement(element) {
    const tagName = element.tagName.toLowerCase();
    if (tagName in defaultEventNames) {
        return defaultEventNames[tagName](element);
    }
}
function error(message) {
    throw new Error(message);
}
function typecast(value) {
    try {
        return JSON.parse(value);
    }
    catch (o_O) {
        return value;
    }
}

class Binding {
    constructor(context, action) {
        this.context = context;
        this.action = action;
    }
    get index() {
        return this.action.index;
    }
    get eventTarget() {
        return this.action.eventTarget;
    }
    get eventOptions() {
        return this.action.eventOptions;
    }
    get identifier() {
        return this.context.identifier;
    }
    handleEvent(event) {
        if (this.willBeInvokedByEvent(event)) {
            this.invokeWithEvent(event);
        }
    }
    get eventName() {
        return this.action.eventName;
    }
    get method() {
        const method = this.controller[this.methodName];
        if (typeof method == "function") {
            return method;
        }
        throw new Error(`Action "${this.action}" references undefined method "${this.methodName}"`);
    }
    invokeWithEvent(event) {
        const { target, currentTarget } = event;
        try {
            const { params } = this.action;
            const actionEvent = Object.assign(event, { params });
            this.method.call(this.controller, actionEvent);
            this.context.logDebugActivity(this.methodName, { event, target, currentTarget, action: this.methodName });
        }
        catch (error) {
            const { identifier, controller, element, index } = this;
            const detail = { identifier, controller, element, index, event };
            this.context.handleError(error, `invoking action "${this.action}"`, detail);
        }
    }
    willBeInvokedByEvent(event) {
        const eventTarget = event.target;
        if (this.element === eventTarget) {
            return true;
        }
        else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {
            return this.scope.containsElement(eventTarget);
        }
        else {
            return this.scope.containsElement(this.action.element);
        }
    }
    get controller() {
        return this.context.controller;
    }
    get methodName() {
        return this.action.methodName;
    }
    get element() {
        return this.scope.element;
    }
    get scope() {
        return this.context.scope;
    }
}

class ElementObserver {
    constructor(element, delegate) {
        this.mutationObserverInit = { attributes: true, childList: true, subtree: true };
        this.element = element;
        this.started = false;
        this.delegate = delegate;
        this.elements = new Set;
        this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));
    }
    start() {
        if (!this.started) {
            this.started = true;
            this.mutationObserver.observe(this.element, this.mutationObserverInit);
            this.refresh();
        }
    }
    pause(callback) {
        if (this.started) {
            this.mutationObserver.disconnect();
            this.started = false;
        }
        callback();
        if (!this.started) {
            this.mutationObserver.observe(this.element, this.mutationObserverInit);
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            this.mutationObserver.takeRecords();
            this.mutationObserver.disconnect();
            this.started = false;
        }
    }
    refresh() {
        if (this.started) {
            const matches = new Set(this.matchElementsInTree());
            for (const element of Array.from(this.elements)) {
                if (!matches.has(element)) {
                    this.removeElement(element);
                }
            }
            for (const element of Array.from(matches)) {
                this.addElement(element);
            }
        }
    }
    processMutations(mutations) {
        if (this.started) {
            for (const mutation of mutations) {
                this.processMutation(mutation);
            }
        }
    }
    processMutation(mutation) {
        if (mutation.type == "attributes") {
            this.processAttributeChange(mutation.target, mutation.attributeName);
        }
        else if (mutation.type == "childList") {
            this.processRemovedNodes(mutation.removedNodes);
            this.processAddedNodes(mutation.addedNodes);
        }
    }
    processAttributeChange(node, attributeName) {
        const element = node;
        if (this.elements.has(element)) {
            if (this.delegate.elementAttributeChanged && this.matchElement(element)) {
                this.delegate.elementAttributeChanged(element, attributeName);
            }
            else {
                this.removeElement(element);
            }
        }
        else if (this.matchElement(element)) {
            this.addElement(element);
        }
    }
    processRemovedNodes(nodes) {
        for (const node of Array.from(nodes)) {
            const element = this.elementFromNode(node);
            if (element) {
                this.processTree(element, this.removeElement);
            }
        }
    }
    processAddedNodes(nodes) {
        for (const node of Array.from(nodes)) {
            const element = this.elementFromNode(node);
            if (element && this.elementIsActive(element)) {
                this.processTree(element, this.addElement);
            }
        }
    }
    matchElement(element) {
        return this.delegate.matchElement(element);
    }
    matchElementsInTree(tree = this.element) {
        return this.delegate.matchElementsInTree(tree);
    }
    processTree(tree, processor) {
        for (const element of this.matchElementsInTree(tree)) {
            processor.call(this, element);
        }
    }
    elementFromNode(node) {
        if (node.nodeType == Node.ELEMENT_NODE) {
            return node;
        }
    }
    elementIsActive(element) {
        if (element.isConnected != this.element.isConnected) {
            return false;
        }
        else {
            return this.element.contains(element);
        }
    }
    addElement(element) {
        if (!this.elements.has(element)) {
            if (this.elementIsActive(element)) {
                this.elements.add(element);
                if (this.delegate.elementMatched) {
                    this.delegate.elementMatched(element);
                }
            }
        }
    }
    removeElement(element) {
        if (this.elements.has(element)) {
            this.elements.delete(element);
            if (this.delegate.elementUnmatched) {
                this.delegate.elementUnmatched(element);
            }
        }
    }
}

class AttributeObserver {
    constructor(element, attributeName, delegate) {
        this.attributeName = attributeName;
        this.delegate = delegate;
        this.elementObserver = new ElementObserver(element, this);
    }
    get element() {
        return this.elementObserver.element;
    }
    get selector() {
        return `[${this.attributeName}]`;
    }
    start() {
        this.elementObserver.start();
    }
    pause(callback) {
        this.elementObserver.pause(callback);
    }
    stop() {
        this.elementObserver.stop();
    }
    refresh() {
        this.elementObserver.refresh();
    }
    get started() {
        return this.elementObserver.started;
    }
    matchElement(element) {
        return element.hasAttribute(this.attributeName);
    }
    matchElementsInTree(tree) {
        const match = this.matchElement(tree) ? [tree] : [];
        const matches = Array.from(tree.querySelectorAll(this.selector));
        return match.concat(matches);
    }
    elementMatched(element) {
        if (this.delegate.elementMatchedAttribute) {
            this.delegate.elementMatchedAttribute(element, this.attributeName);
        }
    }
    elementUnmatched(element) {
        if (this.delegate.elementUnmatchedAttribute) {
            this.delegate.elementUnmatchedAttribute(element, this.attributeName);
        }
    }
    elementAttributeChanged(element, attributeName) {
        if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {
            this.delegate.elementAttributeValueChanged(element, attributeName);
        }
    }
}

class StringMapObserver {
    constructor(element, delegate) {
        this.element = element;
        this.delegate = delegate;
        this.started = false;
        this.stringMap = new Map;
        this.mutationObserver = new MutationObserver(mutations => this.processMutations(mutations));
    }
    start() {
        if (!this.started) {
            this.started = true;
            this.mutationObserver.observe(this.element, { attributes: true, attributeOldValue: true });
            this.refresh();
        }
    }
    stop() {
        if (this.started) {
            this.mutationObserver.takeRecords();
            this.mutationObserver.disconnect();
            this.started = false;
        }
    }
    refresh() {
        if (this.started) {
            for (const attributeName of this.knownAttributeNames) {
                this.refreshAttribute(attributeName, null);
            }
        }
    }
    processMutations(mutations) {
        if (this.started) {
            for (const mutation of mutations) {
                this.processMutation(mutation);
            }
        }
    }
    processMutation(mutation) {
        const attributeName = mutation.attributeName;
        if (attributeName) {
            this.refreshAttribute(attributeName, mutation.oldValue);
        }
    }
    refreshAttribute(attributeName, oldValue) {
        const key = this.delegate.getStringMapKeyForAttribute(attributeName);
        if (key != null) {
            if (!this.stringMap.has(attributeName)) {
                this.stringMapKeyAdded(key, attributeName);
            }
            const value = this.element.getAttribute(attributeName);
            if (this.stringMap.get(attributeName) != value) {
                this.stringMapValueChanged(value, key, oldValue);
            }
            if (value == null) {
                const oldValue = this.stringMap.get(attributeName);
                this.stringMap.delete(attributeName);
                if (oldValue)
                    this.stringMapKeyRemoved(key, attributeName, oldValue);
            }
            else {
                this.stringMap.set(attributeName, value);
            }
        }
    }
    stringMapKeyAdded(key, attributeName) {
        if (this.delegate.stringMapKeyAdded) {
            this.delegate.stringMapKeyAdded(key, attributeName);
        }
    }
    stringMapValueChanged(value, key, oldValue) {
        if (this.delegate.stringMapValueChanged) {
            this.delegate.stringMapValueChanged(value, key, oldValue);
        }
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
        if (this.delegate.stringMapKeyRemoved) {
            this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);
        }
    }
    get knownAttributeNames() {
        return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));
    }
    get currentAttributeNames() {
        return Array.from(this.element.attributes).map(attribute => attribute.name);
    }
    get recordedAttributeNames() {
        return Array.from(this.stringMap.keys());
    }
}

function add(map, key, value) {
    fetch(map, key).add(value);
}
function del(map, key, value) {
    fetch(map, key).delete(value);
    prune(map, key);
}
function fetch(map, key) {
    let values = map.get(key);
    if (!values) {
        values = new Set();
        map.set(key, values);
    }
    return values;
}
function prune(map, key) {
    const values = map.get(key);
    if (values != null && values.size == 0) {
        map.delete(key);
    }
}

class Multimap {
    constructor() {
        this.valuesByKey = new Map();
    }
    get keys() {
        return Array.from(this.valuesByKey.keys());
    }
    get values() {
        const sets = Array.from(this.valuesByKey.values());
        return sets.reduce((values, set) => values.concat(Array.from(set)), []);
    }
    get size() {
        const sets = Array.from(this.valuesByKey.values());
        return sets.reduce((size, set) => size + set.size, 0);
    }
    add(key, value) {
        add(this.valuesByKey, key, value);
    }
    delete(key, value) {
        del(this.valuesByKey, key, value);
    }
    has(key, value) {
        const values = this.valuesByKey.get(key);
        return values != null && values.has(value);
    }
    hasKey(key) {
        return this.valuesByKey.has(key);
    }
    hasValue(value) {
        const sets = Array.from(this.valuesByKey.values());
        return sets.some(set => set.has(value));
    }
    getValuesForKey(key) {
        const values = this.valuesByKey.get(key);
        return values ? Array.from(values) : [];
    }
    getKeysForValue(value) {
        return Array.from(this.valuesByKey)
            .filter(([key, values]) => values.has(value))
            .map(([key, values]) => key);
    }
}

class IndexedMultimap extends Multimap {
    constructor() {
        super();
        this.keysByValue = new Map;
    }
    get values() {
        return Array.from(this.keysByValue.keys());
    }
    add(key, value) {
        super.add(key, value);
        add(this.keysByValue, value, key);
    }
    delete(key, value) {
        super.delete(key, value);
        del(this.keysByValue, value, key);
    }
    hasValue(value) {
        return this.keysByValue.has(value);
    }
    getKeysForValue(value) {
        const set = this.keysByValue.get(value);
        return set ? Array.from(set) : [];
    }
}

class TokenListObserver {
    constructor(element, attributeName, delegate) {
        this.attributeObserver = new AttributeObserver(element, attributeName, this);
        this.delegate = delegate;
        this.tokensByElement = new Multimap;
    }
    get started() {
        return this.attributeObserver.started;
    }
    start() {
        this.attributeObserver.start();
    }
    pause(callback) {
        this.attributeObserver.pause(callback);
    }
    stop() {
        this.attributeObserver.stop();
    }
    refresh() {
        this.attributeObserver.refresh();
    }
    get element() {
        return this.attributeObserver.element;
    }
    get attributeName() {
        return this.attributeObserver.attributeName;
    }
    elementMatchedAttribute(element) {
        this.tokensMatched(this.readTokensForElement(element));
    }
    elementAttributeValueChanged(element) {
        const [unmatchedTokens, matchedTokens] = this.refreshTokensForElement(element);
        this.tokensUnmatched(unmatchedTokens);
        this.tokensMatched(matchedTokens);
    }
    elementUnmatchedAttribute(element) {
        this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));
    }
    tokensMatched(tokens) {
        tokens.forEach(token => this.tokenMatched(token));
    }
    tokensUnmatched(tokens) {
        tokens.forEach(token => this.tokenUnmatched(token));
    }
    tokenMatched(token) {
        this.delegate.tokenMatched(token);
        this.tokensByElement.add(token.element, token);
    }
    tokenUnmatched(token) {
        this.delegate.tokenUnmatched(token);
        this.tokensByElement.delete(token.element, token);
    }
    refreshTokensForElement(element) {
        const previousTokens = this.tokensByElement.getValuesForKey(element);
        const currentTokens = this.readTokensForElement(element);
        const firstDifferingIndex = zip(previousTokens, currentTokens)
            .findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken));
        if (firstDifferingIndex == -1) {
            return [[], []];
        }
        else {
            return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];
        }
    }
    readTokensForElement(element) {
        const attributeName = this.attributeName;
        const tokenString = element.getAttribute(attributeName) || "";
        return parseTokenString(tokenString, element, attributeName);
    }
}
function parseTokenString(tokenString, element, attributeName) {
    return tokenString.trim().split(/\s+/).filter(content => content.length)
        .map((content, index) => ({ element, attributeName, content, index }));
}
function zip(left, right) {
    const length = Math.max(left.length, right.length);
    return Array.from({ length }, (_, index) => [left[index], right[index]]);
}
function tokensAreEqual(left, right) {
    return left && right && left.index == right.index && left.content == right.content;
}

class ValueListObserver {
    constructor(element, attributeName, delegate) {
        this.tokenListObserver = new TokenListObserver(element, attributeName, this);
        this.delegate = delegate;
        this.parseResultsByToken = new WeakMap;
        this.valuesByTokenByElement = new WeakMap;
    }
    get started() {
        return this.tokenListObserver.started;
    }
    start() {
        this.tokenListObserver.start();
    }
    stop() {
        this.tokenListObserver.stop();
    }
    refresh() {
        this.tokenListObserver.refresh();
    }
    get element() {
        return this.tokenListObserver.element;
    }
    get attributeName() {
        return this.tokenListObserver.attributeName;
    }
    tokenMatched(token) {
        const { element } = token;
        const { value } = this.fetchParseResultForToken(token);
        if (value) {
            this.fetchValuesByTokenForElement(element).set(token, value);
            this.delegate.elementMatchedValue(element, value);
        }
    }
    tokenUnmatched(token) {
        const { element } = token;
        const { value } = this.fetchParseResultForToken(token);
        if (value) {
            this.fetchValuesByTokenForElement(element).delete(token);
            this.delegate.elementUnmatchedValue(element, value);
        }
    }
    fetchParseResultForToken(token) {
        let parseResult = this.parseResultsByToken.get(token);
        if (!parseResult) {
            parseResult = this.parseToken(token);
            this.parseResultsByToken.set(token, parseResult);
        }
        return parseResult;
    }
    fetchValuesByTokenForElement(element) {
        let valuesByToken = this.valuesByTokenByElement.get(element);
        if (!valuesByToken) {
            valuesByToken = new Map;
            this.valuesByTokenByElement.set(element, valuesByToken);
        }
        return valuesByToken;
    }
    parseToken(token) {
        try {
            const value = this.delegate.parseValueForToken(token);
            return { value };
        }
        catch (error) {
            return { error };
        }
    }
}

class BindingObserver {
    constructor(context, delegate) {
        this.context = context;
        this.delegate = delegate;
        this.bindingsByAction = new Map;
    }
    start() {
        if (!this.valueListObserver) {
            this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);
            this.valueListObserver.start();
        }
    }
    stop() {
        if (this.valueListObserver) {
            this.valueListObserver.stop();
            delete this.valueListObserver;
            this.disconnectAllActions();
        }
    }
    get element() {
        return this.context.element;
    }
    get identifier() {
        return this.context.identifier;
    }
    get actionAttribute() {
        return this.schema.actionAttribute;
    }
    get schema() {
        return this.context.schema;
    }
    get bindings() {
        return Array.from(this.bindingsByAction.values());
    }
    connectAction(action) {
        const binding = new Binding(this.context, action);
        this.bindingsByAction.set(action, binding);
        this.delegate.bindingConnected(binding);
    }
    disconnectAction(action) {
        const binding = this.bindingsByAction.get(action);
        if (binding) {
            this.bindingsByAction.delete(action);
            this.delegate.bindingDisconnected(binding);
        }
    }
    disconnectAllActions() {
        this.bindings.forEach(binding => this.delegate.bindingDisconnected(binding));
        this.bindingsByAction.clear();
    }
    parseValueForToken(token) {
        const action = Action.forToken(token);
        if (action.identifier == this.identifier) {
            return action;
        }
    }
    elementMatchedValue(element, action) {
        this.connectAction(action);
    }
    elementUnmatchedValue(element, action) {
        this.disconnectAction(action);
    }
}

class ValueObserver {
    constructor(context, receiver) {
        this.context = context;
        this.receiver = receiver;
        this.stringMapObserver = new StringMapObserver(this.element, this);
        this.valueDescriptorMap = this.controller.valueDescriptorMap;
        this.invokeChangedCallbacksForDefaultValues();
    }
    start() {
        this.stringMapObserver.start();
    }
    stop() {
        this.stringMapObserver.stop();
    }
    get element() {
        return this.context.element;
    }
    get controller() {
        return this.context.controller;
    }
    getStringMapKeyForAttribute(attributeName) {
        if (attributeName in this.valueDescriptorMap) {
            return this.valueDescriptorMap[attributeName].name;
        }
    }
    stringMapKeyAdded(key, attributeName) {
        const descriptor = this.valueDescriptorMap[attributeName];
        if (!this.hasValue(key)) {
            this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));
        }
    }
    stringMapValueChanged(value, name, oldValue) {
        const descriptor = this.valueDescriptorNameMap[name];
        if (value === null)
            return;
        if (oldValue === null) {
            oldValue = descriptor.writer(descriptor.defaultValue);
        }
        this.invokeChangedCallback(name, value, oldValue);
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
        const descriptor = this.valueDescriptorNameMap[key];
        if (this.hasValue(key)) {
            this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);
        }
        else {
            this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);
        }
    }
    invokeChangedCallbacksForDefaultValues() {
        for (const { key, name, defaultValue, writer } of this.valueDescriptors) {
            if (defaultValue != undefined && !this.controller.data.has(key)) {
                this.invokeChangedCallback(name, writer(defaultValue), undefined);
            }
        }
    }
    invokeChangedCallback(name, rawValue, rawOldValue) {
        const changedMethodName = `${name}Changed`;
        const changedMethod = this.receiver[changedMethodName];
        if (typeof changedMethod == "function") {
            const descriptor = this.valueDescriptorNameMap[name];
            const value = descriptor.reader(rawValue);
            let oldValue = rawOldValue;
            if (rawOldValue) {
                oldValue = descriptor.reader(rawOldValue);
            }
            changedMethod.call(this.receiver, value, oldValue);
        }
    }
    get valueDescriptors() {
        const { valueDescriptorMap } = this;
        return Object.keys(valueDescriptorMap).map(key => valueDescriptorMap[key]);
    }
    get valueDescriptorNameMap() {
        const descriptors = {};
        Object.keys(this.valueDescriptorMap).forEach(key => {
            const descriptor = this.valueDescriptorMap[key];
            descriptors[descriptor.name] = descriptor;
        });
        return descriptors;
    }
    hasValue(attributeName) {
        const descriptor = this.valueDescriptorNameMap[attributeName];
        const hasMethodName = `has${capitalize(descriptor.name)}`;
        return this.receiver[hasMethodName];
    }
}

class TargetObserver {
    constructor(context, delegate) {
        this.context = context;
        this.delegate = delegate;
        this.targetsByName = new Multimap;
    }
    start() {
        if (!this.tokenListObserver) {
            this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);
            this.tokenListObserver.start();
        }
    }
    stop() {
        if (this.tokenListObserver) {
            this.disconnectAllTargets();
            this.tokenListObserver.stop();
            delete this.tokenListObserver;
        }
    }
    tokenMatched({ element, content: name }) {
        if (this.scope.containsElement(element)) {
            this.connectTarget(element, name);
        }
    }
    tokenUnmatched({ element, content: name }) {
        this.disconnectTarget(element, name);
    }
    connectTarget(element, name) {
        var _a;
        if (!this.targetsByName.has(name, element)) {
            this.targetsByName.add(name, element);
            (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetConnected(element, name));
        }
    }
    disconnectTarget(element, name) {
        var _a;
        if (this.targetsByName.has(name, element)) {
            this.targetsByName.delete(name, element);
            (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetDisconnected(element, name));
        }
    }
    disconnectAllTargets() {
        for (const name of this.targetsByName.keys) {
            for (const element of this.targetsByName.getValuesForKey(name)) {
                this.disconnectTarget(element, name);
            }
        }
    }
    get attributeName() {
        return `data-${this.context.identifier}-target`;
    }
    get element() {
        return this.context.element;
    }
    get scope() {
        return this.context.scope;
    }
}

class Context {
    constructor(module, scope) {
        this.logDebugActivity = (functionName, detail = {}) => {
            const { identifier, controller, element } = this;
            detail = Object.assign({ identifier, controller, element }, detail);
            this.application.logDebugActivity(this.identifier, functionName, detail);
        };
        this.module = module;
        this.scope = scope;
        this.controller = new module.controllerConstructor(this);
        this.bindingObserver = new BindingObserver(this, this.dispatcher);
        this.valueObserver = new ValueObserver(this, this.controller);
        this.targetObserver = new TargetObserver(this, this);
        try {
            this.controller.initialize();
            this.logDebugActivity("initialize");
        }
        catch (error) {
            this.handleError(error, "initializing controller");
        }
    }
    connect() {
        this.bindingObserver.start();
        this.valueObserver.start();
        this.targetObserver.start();
        try {
            this.controller.connect();
            this.logDebugActivity("connect");
        }
        catch (error) {
            this.handleError(error, "connecting controller");
        }
    }
    disconnect() {
        try {
            this.controller.disconnect();
            this.logDebugActivity("disconnect");
        }
        catch (error) {
            this.handleError(error, "disconnecting controller");
        }
        this.targetObserver.stop();
        this.valueObserver.stop();
        this.bindingObserver.stop();
    }
    get application() {
        return this.module.application;
    }
    get identifier() {
        return this.module.identifier;
    }
    get schema() {
        return this.application.schema;
    }
    get dispatcher() {
        return this.application.dispatcher;
    }
    get element() {
        return this.scope.element;
    }
    get parentElement() {
        return this.element.parentElement;
    }
    handleError(error, message, detail = {}) {
        const { identifier, controller, element } = this;
        detail = Object.assign({ identifier, controller, element }, detail);
        this.application.handleError(error, `Error ${message}`, detail);
    }
    targetConnected(element, name) {
        this.invokeControllerMethod(`${name}TargetConnected`, element);
    }
    targetDisconnected(element, name) {
        this.invokeControllerMethod(`${name}TargetDisconnected`, element);
    }
    invokeControllerMethod(methodName, ...args) {
        const controller = this.controller;
        if (typeof controller[methodName] == "function") {
            controller[methodName](...args);
        }
    }
}

function readInheritableStaticArrayValues(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return Array.from(ancestors.reduce((values, constructor) => {
        getOwnStaticArrayValues(constructor, propertyName).forEach(name => values.add(name));
        return values;
    }, new Set));
}
function readInheritableStaticObjectPairs(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return ancestors.reduce((pairs, constructor) => {
        pairs.push(...getOwnStaticObjectPairs(constructor, propertyName));
        return pairs;
    }, []);
}
function getAncestorsForConstructor(constructor) {
    const ancestors = [];
    while (constructor) {
        ancestors.push(constructor);
        constructor = Object.getPrototypeOf(constructor);
    }
    return ancestors.reverse();
}
function getOwnStaticArrayValues(constructor, propertyName) {
    const definition = constructor[propertyName];
    return Array.isArray(definition) ? definition : [];
}
function getOwnStaticObjectPairs(constructor, propertyName) {
    const definition = constructor[propertyName];
    return definition ? Object.keys(definition).map(key => [key, definition[key]]) : [];
}

function bless(constructor) {
    return shadow(constructor, getBlessedProperties(constructor));
}
function shadow(constructor, properties) {
    const shadowConstructor = extend(constructor);
    const shadowProperties = getShadowProperties(constructor.prototype, properties);
    Object.defineProperties(shadowConstructor.prototype, shadowProperties);
    return shadowConstructor;
}
function getBlessedProperties(constructor) {
    const blessings = readInheritableStaticArrayValues(constructor, "blessings");
    return blessings.reduce((blessedProperties, blessing) => {
        const properties = blessing(constructor);
        for (const key in properties) {
            const descriptor = blessedProperties[key] || {};
            blessedProperties[key] = Object.assign(descriptor, properties[key]);
        }
        return blessedProperties;
    }, {});
}
function getShadowProperties(prototype, properties) {
    return getOwnKeys(properties).reduce((shadowProperties, key) => {
        const descriptor = getShadowedDescriptor(prototype, properties, key);
        if (descriptor) {
            Object.assign(shadowProperties, { [key]: descriptor });
        }
        return shadowProperties;
    }, {});
}
function getShadowedDescriptor(prototype, properties, key) {
    const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);
    const shadowedByValue = shadowingDescriptor && "value" in shadowingDescriptor;
    if (!shadowedByValue) {
        const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;
        if (shadowingDescriptor) {
            descriptor.get = shadowingDescriptor.get || descriptor.get;
            descriptor.set = shadowingDescriptor.set || descriptor.set;
        }
        return descriptor;
    }
}
const getOwnKeys = (() => {
    if (typeof Object.getOwnPropertySymbols == "function") {
        return (object) => [
            ...Object.getOwnPropertyNames(object),
            ...Object.getOwnPropertySymbols(object)
        ];
    }
    else {
        return Object.getOwnPropertyNames;
    }
})();
const extend = (() => {
    function extendWithReflect(constructor) {
        function extended() {
            return Reflect.construct(constructor, arguments, new.target);
        }
        extended.prototype = Object.create(constructor.prototype, {
            constructor: { value: extended }
        });
        Reflect.setPrototypeOf(extended, constructor);
        return extended;
    }
    function testReflectExtension() {
        const a = function () { this.a.call(this); };
        const b = extendWithReflect(a);
        b.prototype.a = function () { };
        return new b;
    }
    try {
        testReflectExtension();
        return extendWithReflect;
    }
    catch (error) {
        return (constructor) => class extended extends constructor {
        };
    }
})();

function blessDefinition(definition) {
    return {
        identifier: definition.identifier,
        controllerConstructor: bless(definition.controllerConstructor)
    };
}

class Module {
    constructor(application, definition) {
        this.application = application;
        this.definition = blessDefinition(definition);
        this.contextsByScope = new WeakMap;
        this.connectedContexts = new Set;
    }
    get identifier() {
        return this.definition.identifier;
    }
    get controllerConstructor() {
        return this.definition.controllerConstructor;
    }
    get contexts() {
        return Array.from(this.connectedContexts);
    }
    connectContextForScope(scope) {
        const context = this.fetchContextForScope(scope);
        this.connectedContexts.add(context);
        context.connect();
    }
    disconnectContextForScope(scope) {
        const context = this.contextsByScope.get(scope);
        if (context) {
            this.connectedContexts.delete(context);
            context.disconnect();
        }
    }
    fetchContextForScope(scope) {
        let context = this.contextsByScope.get(scope);
        if (!context) {
            context = new Context(this, scope);
            this.contextsByScope.set(scope, context);
        }
        return context;
    }
}

class ClassMap {
    constructor(scope) {
        this.scope = scope;
    }
    has(name) {
        return this.data.has(this.getDataKey(name));
    }
    get(name) {
        return this.getAll(name)[0];
    }
    getAll(name) {
        const tokenString = this.data.get(this.getDataKey(name)) || "";
        return tokenize(tokenString);
    }
    getAttributeName(name) {
        return this.data.getAttributeNameForKey(this.getDataKey(name));
    }
    getDataKey(name) {
        return `${name}-class`;
    }
    get data() {
        return this.scope.data;
    }
}

class DataMap {
    constructor(scope) {
        this.scope = scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get(key) {
        const name = this.getAttributeNameForKey(key);
        return this.element.getAttribute(name);
    }
    set(key, value) {
        const name = this.getAttributeNameForKey(key);
        this.element.setAttribute(name, value);
        return this.get(key);
    }
    has(key) {
        const name = this.getAttributeNameForKey(key);
        return this.element.hasAttribute(name);
    }
    delete(key) {
        if (this.has(key)) {
            const name = this.getAttributeNameForKey(key);
            this.element.removeAttribute(name);
            return true;
        }
        else {
            return false;
        }
    }
    getAttributeNameForKey(key) {
        return `data-${this.identifier}-${dasherize(key)}`;
    }
}

class Guide {
    constructor(logger) {
        this.warnedKeysByObject = new WeakMap;
        this.logger = logger;
    }
    warn(object, key, message) {
        let warnedKeys = this.warnedKeysByObject.get(object);
        if (!warnedKeys) {
            warnedKeys = new Set;
            this.warnedKeysByObject.set(object, warnedKeys);
        }
        if (!warnedKeys.has(key)) {
            warnedKeys.add(key);
            this.logger.warn(message, object);
        }
    }
}

function attributeValueContainsToken(attributeName, token) {
    return `[${attributeName}~="${token}"]`;
}

class TargetSet {
    constructor(scope) {
        this.scope = scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get schema() {
        return this.scope.schema;
    }
    has(targetName) {
        return this.find(targetName) != null;
    }
    find(...targetNames) {
        return targetNames.reduce((target, targetName) => target
            || this.findTarget(targetName)
            || this.findLegacyTarget(targetName), undefined);
    }
    findAll(...targetNames) {
        return targetNames.reduce((targets, targetName) => [
            ...targets,
            ...this.findAllTargets(targetName),
            ...this.findAllLegacyTargets(targetName)
        ], []);
    }
    findTarget(targetName) {
        const selector = this.getSelectorForTargetName(targetName);
        return this.scope.findElement(selector);
    }
    findAllTargets(targetName) {
        const selector = this.getSelectorForTargetName(targetName);
        return this.scope.findAllElements(selector);
    }
    getSelectorForTargetName(targetName) {
        const attributeName = this.schema.targetAttributeForScope(this.identifier);
        return attributeValueContainsToken(attributeName, targetName);
    }
    findLegacyTarget(targetName) {
        const selector = this.getLegacySelectorForTargetName(targetName);
        return this.deprecate(this.scope.findElement(selector), targetName);
    }
    findAllLegacyTargets(targetName) {
        const selector = this.getLegacySelectorForTargetName(targetName);
        return this.scope.findAllElements(selector).map(element => this.deprecate(element, targetName));
    }
    getLegacySelectorForTargetName(targetName) {
        const targetDescriptor = `${this.identifier}.${targetName}`;
        return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);
    }
    deprecate(element, targetName) {
        if (element) {
            const { identifier } = this;
            const attributeName = this.schema.targetAttribute;
            const revisedAttributeName = this.schema.targetAttributeForScope(identifier);
            this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}="${identifier}.${targetName}" with ${revisedAttributeName}="${targetName}". ` +
                `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);
        }
        return element;
    }
    get guide() {
        return this.scope.guide;
    }
}

class Scope {
    constructor(schema, element, identifier, logger) {
        this.targets = new TargetSet(this);
        this.classes = new ClassMap(this);
        this.data = new DataMap(this);
        this.containsElement = (element) => {
            return element.closest(this.controllerSelector) === this.element;
        };
        this.schema = schema;
        this.element = element;
        this.identifier = identifier;
        this.guide = new Guide(logger);
    }
    findElement(selector) {
        return this.element.matches(selector)
            ? this.element
            : this.queryElements(selector).find(this.containsElement);
    }
    findAllElements(selector) {
        return [
            ...this.element.matches(selector) ? [this.element] : [],
            ...this.queryElements(selector).filter(this.containsElement)
        ];
    }
    queryElements(selector) {
        return Array.from(this.element.querySelectorAll(selector));
    }
    get controllerSelector() {
        return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);
    }
}

class ScopeObserver {
    constructor(element, schema, delegate) {
        this.element = element;
        this.schema = schema;
        this.delegate = delegate;
        this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);
        this.scopesByIdentifierByElement = new WeakMap;
        this.scopeReferenceCounts = new WeakMap;
    }
    start() {
        this.valueListObserver.start();
    }
    stop() {
        this.valueListObserver.stop();
    }
    get controllerAttribute() {
        return this.schema.controllerAttribute;
    }
    parseValueForToken(token) {
        const { element, content: identifier } = token;
        const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);
        let scope = scopesByIdentifier.get(identifier);
        if (!scope) {
            scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);
            scopesByIdentifier.set(identifier, scope);
        }
        return scope;
    }
    elementMatchedValue(element, value) {
        const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;
        this.scopeReferenceCounts.set(value, referenceCount);
        if (referenceCount == 1) {
            this.delegate.scopeConnected(value);
        }
    }
    elementUnmatchedValue(element, value) {
        const referenceCount = this.scopeReferenceCounts.get(value);
        if (referenceCount) {
            this.scopeReferenceCounts.set(value, referenceCount - 1);
            if (referenceCount == 1) {
                this.delegate.scopeDisconnected(value);
            }
        }
    }
    fetchScopesByIdentifierForElement(element) {
        let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);
        if (!scopesByIdentifier) {
            scopesByIdentifier = new Map;
            this.scopesByIdentifierByElement.set(element, scopesByIdentifier);
        }
        return scopesByIdentifier;
    }
}

class Router {
    constructor(application) {
        this.application = application;
        this.scopeObserver = new ScopeObserver(this.element, this.schema, this);
        this.scopesByIdentifier = new Multimap;
        this.modulesByIdentifier = new Map;
    }
    get element() {
        return this.application.element;
    }
    get schema() {
        return this.application.schema;
    }
    get logger() {
        return this.application.logger;
    }
    get controllerAttribute() {
        return this.schema.controllerAttribute;
    }
    get modules() {
        return Array.from(this.modulesByIdentifier.values());
    }
    get contexts() {
        return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), []);
    }
    start() {
        this.scopeObserver.start();
    }
    stop() {
        this.scopeObserver.stop();
    }
    loadDefinition(definition) {
        this.unloadIdentifier(definition.identifier);
        const module = new Module(this.application, definition);
        this.connectModule(module);
    }
    unloadIdentifier(identifier) {
        const module = this.modulesByIdentifier.get(identifier);
        if (module) {
            this.disconnectModule(module);
        }
    }
    getContextForElementAndIdentifier(element, identifier) {
        const module = this.modulesByIdentifier.get(identifier);
        if (module) {
            return module.contexts.find(context => context.element == element);
        }
    }
    handleError(error, message, detail) {
        this.application.handleError(error, message, detail);
    }
    createScopeForElementAndIdentifier(element, identifier) {
        return new Scope(this.schema, element, identifier, this.logger);
    }
    scopeConnected(scope) {
        this.scopesByIdentifier.add(scope.identifier, scope);
        const module = this.modulesByIdentifier.get(scope.identifier);
        if (module) {
            module.connectContextForScope(scope);
        }
    }
    scopeDisconnected(scope) {
        this.scopesByIdentifier.delete(scope.identifier, scope);
        const module = this.modulesByIdentifier.get(scope.identifier);
        if (module) {
            module.disconnectContextForScope(scope);
        }
    }
    connectModule(module) {
        this.modulesByIdentifier.set(module.identifier, module);
        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
        scopes.forEach(scope => module.connectContextForScope(scope));
    }
    disconnectModule(module) {
        this.modulesByIdentifier.delete(module.identifier);
        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
        scopes.forEach(scope => module.disconnectContextForScope(scope));
    }
}

const defaultSchema = {
    controllerAttribute: "data-controller",
    actionAttribute: "data-action",
    targetAttribute: "data-target",
    targetAttributeForScope: identifier => `data-${identifier}-target`
};

class Application {
    constructor(element = document.documentElement, schema = defaultSchema) {
        this.logger = console;
        this.debug = false;
        this.logDebugActivity = (identifier, functionName, detail = {}) => {
            if (this.debug) {
                this.logFormattedMessage(identifier, functionName, detail);
            }
        };
        this.element = element;
        this.schema = schema;
        this.dispatcher = new Dispatcher(this);
        this.router = new Router(this);
    }
    static start(element, schema) {
        const application = new Application(element, schema);
        application.start();
        return application;
    }
    async start() {
        await domReady();
        this.logDebugActivity("application", "starting");
        this.dispatcher.start();
        this.router.start();
        this.logDebugActivity("application", "start");
    }
    stop() {
        this.logDebugActivity("application", "stopping");
        this.dispatcher.stop();
        this.router.stop();
        this.logDebugActivity("application", "stop");
    }
    register(identifier, controllerConstructor) {
        if (controllerConstructor.shouldLoad) {
            this.load({ identifier, controllerConstructor });
        }
    }
    load(head, ...rest) {
        const definitions = Array.isArray(head) ? head : [head, ...rest];
        definitions.forEach(definition => this.router.loadDefinition(definition));
    }
    unload(head, ...rest) {
        const identifiers = Array.isArray(head) ? head : [head, ...rest];
        identifiers.forEach(identifier => this.router.unloadIdentifier(identifier));
    }
    get controllers() {
        return this.router.contexts.map(context => context.controller);
    }
    getControllerForElementAndIdentifier(element, identifier) {
        const context = this.router.getContextForElementAndIdentifier(element, identifier);
        return context ? context.controller : null;
    }
    handleError(error, message, detail) {
        var _a;
        this.logger.error(`%s\n\n%o\n\n%o`, message, error, detail);
        (_a = window.onerror) === null || _a === void 0 ? void 0 : _a.call(window, message, "", 0, 0, error);
    }
    logFormattedMessage(identifier, functionName, detail = {}) {
        detail = Object.assign({ application: this }, detail);
        this.logger.groupCollapsed(`${identifier} #${functionName}`);
        this.logger.log("details:", Object.assign({}, detail));
        this.logger.groupEnd();
    }
}
function domReady() {
    return new Promise(resolve => {
        if (document.readyState == "loading") {
            document.addEventListener("DOMContentLoaded", () => resolve());
        }
        else {
            resolve();
        }
    });
}

function ClassPropertiesBlessing(constructor) {
    const classes = readInheritableStaticArrayValues(constructor, "classes");
    return classes.reduce((properties, classDefinition) => {
        return Object.assign(properties, propertiesForClassDefinition(classDefinition));
    }, {});
}
function propertiesForClassDefinition(key) {
    return {
        [`${key}Class`]: {
            get() {
                const { classes } = this;
                if (classes.has(key)) {
                    return classes.get(key);
                }
                else {
                    const attribute = classes.getAttributeName(key);
                    throw new Error(`Missing attribute "${attribute}"`);
                }
            }
        },
        [`${key}Classes`]: {
            get() {
                return this.classes.getAll(key);
            }
        },
        [`has${capitalize(key)}Class`]: {
            get() {
                return this.classes.has(key);
            }
        }
    };
}

function TargetPropertiesBlessing(constructor) {
    const targets = readInheritableStaticArrayValues(constructor, "targets");
    return targets.reduce((properties, targetDefinition) => {
        return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));
    }, {});
}
function propertiesForTargetDefinition(name) {
    return {
        [`${name}Target`]: {
            get() {
                const target = this.targets.find(name);
                if (target) {
                    return target;
                }
                else {
                    throw new Error(`Missing target element "${name}" for "${this.identifier}" controller`);
                }
            }
        },
        [`${name}Targets`]: {
            get() {
                return this.targets.findAll(name);
            }
        },
        [`has${capitalize(name)}Target`]: {
            get() {
                return this.targets.has(name);
            }
        }
    };
}

function ValuePropertiesBlessing(constructor) {
    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, "values");
    const propertyDescriptorMap = {
        valueDescriptorMap: {
            get() {
                return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {
                    const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair);
                    const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);
                    return Object.assign(result, { [attributeName]: valueDescriptor });
                }, {});
            }
        }
    };
    return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {
        return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));
    }, propertyDescriptorMap);
}
function propertiesForValueDefinitionPair(valueDefinitionPair) {
    const definition = parseValueDefinitionPair(valueDefinitionPair);
    const { key, name, reader: read, writer: write } = definition;
    return {
        [name]: {
            get() {
                const value = this.data.get(key);
                if (value !== null) {
                    return read(value);
                }
                else {
                    return definition.defaultValue;
                }
            },
            set(value) {
                if (value === undefined) {
                    this.data.delete(key);
                }
                else {
                    this.data.set(key, write(value));
                }
            }
        },
        [`has${capitalize(name)}`]: {
            get() {
                return this.data.has(key) || definition.hasCustomDefaultValue;
            }
        }
    };
}
function parseValueDefinitionPair([token, typeDefinition]) {
    return valueDescriptorForTokenAndTypeDefinition(token, typeDefinition);
}
function parseValueTypeConstant(constant) {
    switch (constant) {
        case Array: return "array";
        case Boolean: return "boolean";
        case Number: return "number";
        case Object: return "object";
        case String: return "string";
    }
}
function parseValueTypeDefault(defaultValue) {
    switch (typeof defaultValue) {
        case "boolean": return "boolean";
        case "number": return "number";
        case "string": return "string";
    }
    if (Array.isArray(defaultValue))
        return "array";
    if (Object.prototype.toString.call(defaultValue) === "[object Object]")
        return "object";
}
function parseValueTypeObject(typeObject) {
    const typeFromObject = parseValueTypeConstant(typeObject.type);
    if (typeFromObject) {
        const defaultValueType = parseValueTypeDefault(typeObject.default);
        if (typeFromObject !== defaultValueType) {
            throw new Error(`Type "${typeFromObject}" must match the type of the default value. Given default value: "${typeObject.default}" as "${defaultValueType}"`);
        }
        return typeFromObject;
    }
}
function parseValueTypeDefinition(typeDefinition) {
    const typeFromObject = parseValueTypeObject(typeDefinition);
    const typeFromDefaultValue = parseValueTypeDefault(typeDefinition);
    const typeFromConstant = parseValueTypeConstant(typeDefinition);
    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;
    if (type)
        return type;
    throw new Error(`Unknown value type "${typeDefinition}"`);
}
function defaultValueForDefinition(typeDefinition) {
    const constant = parseValueTypeConstant(typeDefinition);
    if (constant)
        return defaultValuesByType[constant];
    const defaultValue = typeDefinition.default;
    if (defaultValue !== undefined)
        return defaultValue;
    return typeDefinition;
}
function valueDescriptorForTokenAndTypeDefinition(token, typeDefinition) {
    const key = `${dasherize(token)}-value`;
    const type = parseValueTypeDefinition(typeDefinition);
    return {
        type,
        key,
        name: camelize(key),
        get defaultValue() { return defaultValueForDefinition(typeDefinition); },
        get hasCustomDefaultValue() { return parseValueTypeDefault(typeDefinition) !== undefined; },
        reader: readers[type],
        writer: writers[type] || writers.default
    };
}
const defaultValuesByType = {
    get array() { return []; },
    boolean: false,
    number: 0,
    get object() { return {}; },
    string: ""
};
const readers = {
    array(value) {
        const array = JSON.parse(value);
        if (!Array.isArray(array)) {
            throw new TypeError("Expected array");
        }
        return array;
    },
    boolean(value) {
        return !(value == "0" || value == "false");
    },
    number(value) {
        return Number(value);
    },
    object(value) {
        const object = JSON.parse(value);
        if (object === null || typeof object != "object" || Array.isArray(object)) {
            throw new TypeError("Expected object");
        }
        return object;
    },
    string(value) {
        return value;
    }
};
const writers = {
    default: writeString,
    array: writeJSON,
    object: writeJSON
};
function writeJSON(value) {
    return JSON.stringify(value);
}
function writeString(value) {
    return `${value}`;
}

class Controller {
    constructor(context) {
        this.context = context;
    }
    static get shouldLoad() {
        return true;
    }
    get application() {
        return this.context.application;
    }
    get scope() {
        return this.context.scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get targets() {
        return this.scope.targets;
    }
    get classes() {
        return this.scope.classes;
    }
    get data() {
        return this.scope.data;
    }
    initialize() {
    }
    connect() {
    }
    disconnect() {
    }
    dispatch(eventName, { target = this.element, detail = {}, prefix = this.identifier, bubbles = true, cancelable = true } = {}) {
        const type = prefix ? `${prefix}:${eventName}` : eventName;
        const event = new CustomEvent(type, { detail, bubbles, cancelable });
        target.dispatchEvent(event);
        return event;
    }
}
Controller.blessings = [ClassPropertiesBlessing, TargetPropertiesBlessing, ValuePropertiesBlessing];
Controller.targets = [];
Controller.values = {};




/***/ }),

/***/ "./node_modules/@popperjs/core/lib/createPopper.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/createPopper.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "popperGenerator": () => (/* binding */ popperGenerator),
/* harmony export */   "createPopper": () => (/* binding */ createPopper),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_13__["default"])
/* harmony export */ });
/* harmony import */ var _dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dom-utils/getCompositeRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-utils/listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dom-utils/getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/orderModifiers.js */ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js");
/* harmony import */ var _utils_debounce_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/debounce.js */ "./node_modules/@popperjs/core/lib/utils/debounce.js");
/* harmony import */ var _utils_validateModifiers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/validateModifiers.js */ "./node_modules/@popperjs/core/lib/utils/validateModifiers.js");
/* harmony import */ var _utils_uniqueBy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/uniqueBy.js */ "./node_modules/@popperjs/core/lib/utils/uniqueBy.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/mergeByName.js */ "./node_modules/@popperjs/core/lib/utils/mergeByName.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@popperjs/core/lib/enums.js");














var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: (0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(reference) ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference) : reference.contextElement ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference.contextElement) : [],
          popper: (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = (0,_utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__["default"])([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (true) {
          var modifiers = (0,_utils_uniqueBy_js__WEBPACK_IMPORTED_MODULE_4__["default"])([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          (0,_utils_validateModifiers_js__WEBPACK_IMPORTED_MODULE_5__["default"])(modifiers);

          if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.options.placement) === _enums_js__WEBPACK_IMPORTED_MODULE_7__.auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = (0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_8__["default"])(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update â it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (true) {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: (0,_dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_9__["default"])(reference, (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__["default"])(popper), state.options.strategy === 'fixed'),
          popper: (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_11__["default"])(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (true) {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update â it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: (0,_utils_debounce_js__WEBPACK_IMPORTED_MODULE_12__["default"])(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (true) {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/contains.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/contains.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ contains)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBoundingClientRect)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");


function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
    // Fallback to 1 in case both values are `0`

    if (offsetWidth > 0) {
      scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(rect.width) / offsetWidth || 1;
    }

    if (offsetHeight > 0) {
      scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(rect.height) / offsetHeight || 1;
    }
  }

  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getClippingRect)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getViewportRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js");
/* harmony import */ var _getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getDocumentRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js");
/* harmony import */ var _listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
/* harmony import */ var _getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");















function getInnerBoundingClientRect(element) {
  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === _enums_js__WEBPACK_IMPORTED_MODULE_1__.viewport ? (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element)) : (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent) : (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = (0,_listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__["default"])((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_8__["default"])(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__["default"])(element).position) >= 0;
  var clipperElement = canEscapeClipping && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isHTMLElement)(element) ? (0,_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element) : element;

  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) && (0,_contains_js__WEBPACK_IMPORTED_MODULE_11__["default"])(clippingParent, clipperElement) && (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_12__["default"])(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.top, accRect.top);
    accRect.right = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.right, accRect.right);
    accRect.bottom = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.bottom, accRect.bottom);
    accRect.left = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getCompositeRect)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getNodeScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");









function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.width) / element.offsetWidth || 1;
  var scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);
  var offsetParentIsScaled = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);
  var documentElement = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(offsetParent);
  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(documentElement)) {
      scroll = (0,_getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__["default"])(offsetParent);
    }

    if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent)) {
      offsets = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__["default"])(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getComputedStyle)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

function getComputedStyle(element) {
  return (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element).getComputedStyle(element);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDocumentElement)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return (((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDocumentRect)
/* harmony export */ });
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var winScroll = (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element);
  var y = -winScroll.scrollTop;

  if ((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__["default"])(body || html).direction === 'rtl') {
    x += (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getHTMLElementScroll)
/* harmony export */ });
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getLayoutRect)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getNodeName)
/* harmony export */ });
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getNodeScroll)
/* harmony export */ });
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getHTMLElementScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js");




function getNodeScroll(node) {
  if (node === (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node) || !(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node)) {
    return (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node);
  } else {
    return (0,_getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node);
  }
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOffsetParent)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _isTableElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isTableElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");







function getTrueOffsetParent(element) {
  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
  (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = (0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);

  while ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(currentNode) && ['html', 'body'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(currentNode)) < 0) {
    var css = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && (0,_isTableElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(offsetParent) && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent) === 'html' || (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent) === 'body' && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getParentNode)
/* harmony export */ });
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");



function getParentNode(element) {
  if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element) // fallback

  );
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getScrollParent)
/* harmony export */ });
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node) && (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node)) {
    return node;
  }

  return getScrollParent((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node));
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getViewportRect)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");



function getViewportRect(element) {
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element),
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js":
/*!****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindow)
/* harmony export */ });
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindowScroll)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

function getWindowScroll(node) {
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindowScrollBarX)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)).left + (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element).scrollLeft;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isElement": () => (/* binding */ isElement),
/* harmony export */   "isHTMLElement": () => (/* binding */ isHTMLElement),
/* harmony export */   "isShadowRoot": () => (/* binding */ isShadowRoot)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");


function isElement(node) {
  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isScrollParent)
/* harmony export */ });
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isTableElement)
/* harmony export */ });
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element)) >= 0;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js":
/*!************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ listScrollParents)
/* harmony export */ });
/* harmony import */ var _getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = (0,_getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(target)));
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/enums.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/enums.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "top": () => (/* binding */ top),
/* harmony export */   "bottom": () => (/* binding */ bottom),
/* harmony export */   "right": () => (/* binding */ right),
/* harmony export */   "left": () => (/* binding */ left),
/* harmony export */   "auto": () => (/* binding */ auto),
/* harmony export */   "basePlacements": () => (/* binding */ basePlacements),
/* harmony export */   "start": () => (/* binding */ start),
/* harmony export */   "end": () => (/* binding */ end),
/* harmony export */   "clippingParents": () => (/* binding */ clippingParents),
/* harmony export */   "viewport": () => (/* binding */ viewport),
/* harmony export */   "popper": () => (/* binding */ popper),
/* harmony export */   "reference": () => (/* binding */ reference),
/* harmony export */   "variationPlacements": () => (/* binding */ variationPlacements),
/* harmony export */   "placements": () => (/* binding */ placements),
/* harmony export */   "beforeRead": () => (/* binding */ beforeRead),
/* harmony export */   "read": () => (/* binding */ read),
/* harmony export */   "afterRead": () => (/* binding */ afterRead),
/* harmony export */   "beforeMain": () => (/* binding */ beforeMain),
/* harmony export */   "main": () => (/* binding */ main),
/* harmony export */   "afterMain": () => (/* binding */ afterMain),
/* harmony export */   "beforeWrite": () => (/* binding */ beforeWrite),
/* harmony export */   "write": () => (/* binding */ write),
/* harmony export */   "afterWrite": () => (/* binding */ afterWrite),
/* harmony export */   "modifierPhases": () => (/* binding */ modifierPhases)
/* harmony export */ });
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "afterMain": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterMain),
/* harmony export */   "afterRead": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterRead),
/* harmony export */   "afterWrite": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterWrite),
/* harmony export */   "auto": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.auto),
/* harmony export */   "basePlacements": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements),
/* harmony export */   "beforeMain": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeMain),
/* harmony export */   "beforeRead": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeRead),
/* harmony export */   "beforeWrite": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeWrite),
/* harmony export */   "bottom": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom),
/* harmony export */   "clippingParents": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents),
/* harmony export */   "end": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.end),
/* harmony export */   "left": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.left),
/* harmony export */   "main": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.main),
/* harmony export */   "modifierPhases": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases),
/* harmony export */   "placements": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements),
/* harmony export */   "popper": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper),
/* harmony export */   "read": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.read),
/* harmony export */   "reference": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference),
/* harmony export */   "right": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.right),
/* harmony export */   "start": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.start),
/* harmony export */   "top": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.top),
/* harmony export */   "variationPlacements": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements),
/* harmony export */   "viewport": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport),
/* harmony export */   "write": () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.write),
/* harmony export */   "applyStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.applyStyles),
/* harmony export */   "arrow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.arrow),
/* harmony export */   "computeStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.computeStyles),
/* harmony export */   "eventListeners": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.eventListeners),
/* harmony export */   "flip": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.flip),
/* harmony export */   "hide": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.hide),
/* harmony export */   "offset": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.offset),
/* harmony export */   "popperOffsets": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.popperOffsets),
/* harmony export */   "preventOverflow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.preventOverflow),
/* harmony export */   "popperGenerator": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.popperGenerator),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "createPopperBase": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.createPopper),
/* harmony export */   "createPopper": () => (/* reexport safe */ _popper_js__WEBPACK_IMPORTED_MODULE_4__.createPopper),
/* harmony export */   "createPopperLite": () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__.createPopper)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _popper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./popper.js */ "./node_modules/@popperjs/core/lib/popper.js");
/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom-utils/getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect,
  requires: ['computeStyles']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/arrow.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/arrow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
/* harmony import */ var _utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
/* harmony import */ var _utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");









 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return (0,_utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(typeof padding !== 'number' ? padding : (0,_utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_2__.basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(state.placement);
  var axis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(basePlacement);
  var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_2__.left, _enums_js__WEBPACK_IMPORTED_MODULE_2__.right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrowElement);
  var minProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.top : _enums_js__WEBPACK_IMPORTED_MODULE_2__.left;
  var maxProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_2__.right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_7__.within)(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (true) {
    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_8__.isHTMLElement)(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!(0,_dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_9__["default"])(state.elements.popper, arrowElement)) {
    if (true) {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mapToStyles": () => (/* binding */ mapToStyles),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(x * dpr) / dpr || 0,
    y: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.left;
  var sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;
  var win = window;

  if (adaptive) {
    var offsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__["default"])(popper)) {
      offsetParent = (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(popper);

      if ((0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__["default"])(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.right) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
      sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom;
      var offsetY = isFixed && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
      sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.right;
      var offsetX = isFixed && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (true) {
    var transitionProperty = (0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__["default"])(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.placement),
    variation: (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__["default"])(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/flip.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/flip.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getOppositePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getOppositeVariationPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/computeAutoPlacement.js */ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto) {
    return [];
  }

  var oppositePlacement = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(placement);
  return [(0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement), oppositePlacement, (0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto ? (0,_utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);

    var isStartVariation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.start;
    var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.top, _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.right : _enums_js__WEBPACK_IMPORTED_MODULE_1__.left : isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
    }

    var altVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases â research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/hide.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/hide.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom, _enums_js__WEBPACK_IMPORTED_MODULE_0__.left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applyStyles": () => (/* reexport safe */ _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "arrow": () => (/* reexport safe */ _arrow_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "computeStyles": () => (/* reexport safe */ _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "eventListeners": () => (/* reexport safe */ _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "flip": () => (/* reexport safe */ _flip_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "hide": () => (/* reexport safe */ _hide_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "offset": () => (/* reexport safe */ _offset_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "popperOffsets": () => (/* reexport safe */ _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "preventOverflow": () => (/* reexport safe */ _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__["default"])
/* harmony export */ });
/* harmony import */ var _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
/* harmony import */ var _arrow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
/* harmony import */ var _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
/* harmony import */ var _hide_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
/* harmony import */ var _offset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
/* harmony import */ var _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");










/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/offset.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/offset.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "distanceAndSkiddingToXY": () => (/* binding */ distanceAndSkiddingToXY),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");

 // eslint-disable-next-line import/no-unused-modules

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);
  var invertDistance = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = _enums_js__WEBPACK_IMPORTED_MODULE_1__.placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = (0,_utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getAltAxis.js */ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js");
/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");












function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state.placement);
  var variation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement);
  var altAxis = (0,_utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__["default"])(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;
    var altSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0,_utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__["default"])();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__["default"])(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.min)(min, tetherMin) : min, offset, tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.max)(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;

    var _altSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [_enums_js__WEBPACK_IMPORTED_MODULE_5__.top, _enums_js__WEBPACK_IMPORTED_MODULE_5__.left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper-lite.js":
/*!********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper-lite.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPopper": () => (/* binding */ createPopper),
/* harmony export */   "popperGenerator": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator),
/* harmony export */   "defaultModifiers": () => (/* binding */ defaultModifiers),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_5__["default"])
/* harmony export */ });
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");





var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"]];
var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper.js":
/*!***************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPopper": () => (/* binding */ createPopper),
/* harmony export */   "popperGenerator": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator),
/* harmony export */   "defaultModifiers": () => (/* binding */ defaultModifiers),
/* harmony export */   "detectOverflow": () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   "createPopperLite": () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__.createPopper),
/* harmony export */   "applyStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.applyStyles),
/* harmony export */   "arrow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.arrow),
/* harmony export */   "computeStyles": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.computeStyles),
/* harmony export */   "eventListeners": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.eventListeners),
/* harmony export */   "flip": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.flip),
/* harmony export */   "hide": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.hide),
/* harmony export */   "offset": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.offset),
/* harmony export */   "popperOffsets": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.popperOffsets),
/* harmony export */   "preventOverflow": () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.preventOverflow)
/* harmony export */ });
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
/* harmony import */ var _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modifiers/offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
/* harmony import */ var _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modifiers/flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
/* harmony import */ var _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modifiers/preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");
/* harmony import */ var _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modifiers/arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
/* harmony import */ var _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modifiers/hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");
/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");










var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"], _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__["default"], _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__["default"], _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"], _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__["default"], _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__["default"]];
var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator)({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computeAutoPlacement)
/* harmony export */ });
/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements : _options$allowedAutoP;
  var variation = (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement);
  var placements = variation ? flipVariations ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements : _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements.filter(function (placement) {
    return (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) === variation;
  }) : _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if (true) {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = (0,_detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[(0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeOffsets.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computeOffsets)
/* harmony export */ });
/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? (0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) : null;
  var variation = placement ? (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? (0,_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/debounce.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/debounce.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ debounce)
/* harmony export */ });
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/detectOverflow.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ detectOverflow)
/* harmony export */ });
/* harmony import */ var _dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getClippingRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js");
/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");
/* harmony import */ var _rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
/* harmony import */ var _expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = (0,_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(typeof padding !== 'number' ? padding : (0,_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements));
  var altContext = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference : _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = (0,_dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(element) ? element : element.contextElement || (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = (0,_dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.elements.reference);
  var popperOffsets = (0,_computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"])({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = (0,_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__["default"])(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ expandToHashMap)
/* harmony export */ });
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/format.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/format.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ format)
/* harmony export */ });
function format(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getAltAxis.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getAltAxis)
/* harmony export */ });
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBasePlacement)
/* harmony export */ });

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getFreshSideObject)
/* harmony export */ });
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getMainAxisFromPlacement)
/* harmony export */ });
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOppositePlacement)
/* harmony export */ });
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOppositeVariationPlacement)
/* harmony export */ });
var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getVariation.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getVariation.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getVariation)
/* harmony export */ });
function getVariation(placement) {
  return placement.split('-')[1];
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/math.js":
/*!*******************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/math.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "max": () => (/* binding */ max),
/* harmony export */   "min": () => (/* binding */ min),
/* harmony export */   "round": () => (/* binding */ round)
/* harmony export */ });
var max = Math.max;
var min = Math.min;
var round = Math.round;

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergeByName.js":
/*!**************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergeByName.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergeByName)
/* harmony export */ });
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergePaddingObject)
/* harmony export */ });
/* harmony import */ var _getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");

function mergePaddingObject(paddingObject) {
  return Object.assign({}, (0,_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(), paddingObject);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/orderModifiers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ orderModifiers)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rectToClientRect)
/* harmony export */ });
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/uniqueBy.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/uniqueBy.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ uniqueBy)
/* harmony export */ });
function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/validateModifiers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/validateModifiers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ validateModifiers)
/* harmony export */ });
/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./format.js */ "./node_modules/@popperjs/core/lib/utils/format.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");


var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    [].concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`
    .filter(function (value, index, self) {
      return self.indexOf(value) === index;
    }).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

          break;

        case 'phase':
          if (_enums_js__WEBPACK_IMPORTED_MODULE_1__.modifierPhases.indexOf(modifier.phase) < 0) {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + _enums_js__WEBPACK_IMPORTED_MODULE_1__.modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (modifier.effect != null && typeof modifier.effect !== 'function') {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (modifier.requires != null && !Array.isArray(modifier.requires)) {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error((0,_format_js__WEBPACK_IMPORTED_MODULE_0__["default"])(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/within.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/within.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "within": () => (/* binding */ within),
/* harmony export */   "withinMaxClamp": () => (/* binding */ withinMaxClamp)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");

function within(min, value, max) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(min, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "startStimulusApp": () => (/* binding */ startStimulusApp)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var _webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpack/loader!@symfony/stimulus-bridge/controllers.json */ "./node_modules/@symfony/stimulus-bridge/dist/webpack/loader.js!./assets/controllers.json");



/*
Stimulus Webpack Helpers 1.0.0
Copyright Â© 2021 Basecamp, LLC
 */
function definitionsFromContext(context) {
    return context.keys()
        .map((key) => definitionForModuleWithContextAndKey(context, key))
        .filter((value) => value);
}
function definitionForModuleWithContextAndKey(context, key) {
    const identifier = identifierForContextKey(key);
    if (identifier) {
        return definitionForModuleAndIdentifier(context(key), identifier);
    }
}
function definitionForModuleAndIdentifier(module, identifier) {
    const controllerConstructor = module.default;
    if (typeof controllerConstructor == "function") {
        return { identifier, controllerConstructor };
    }
}
function identifierForContextKey(key) {
    const logicalName = (key.match(/^(?:\.\/)?(.+)(?:[_-]controller\..+?)$/) || [])[1];
    if (logicalName) {
        return logicalName.replace(/_/g, "-").replace(/\//g, "--");
    }
}

function startStimulusApp(context) {
    const application = _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Application.start();
    if (context) {
        application.load(definitionsFromContext(context));
    }
    for (const controllerName in _webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__["default"]) {
        if (!_webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__["default"].hasOwnProperty(controllerName)) {
            continue;
        }
        _webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__["default"][controllerName].then((module) => {
            application.register(controllerName, module.default);
        });
    }
    return application;
}




/***/ }),

/***/ "./node_modules/bootstrap/dist/js/bootstrap.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/bootstrap/dist/js/bootstrap.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Alert": () => (/* binding */ Alert),
/* harmony export */   "Button": () => (/* binding */ Button),
/* harmony export */   "Carousel": () => (/* binding */ Carousel),
/* harmony export */   "Collapse": () => (/* binding */ Collapse),
/* harmony export */   "Dropdown": () => (/* binding */ Dropdown),
/* harmony export */   "Modal": () => (/* binding */ Modal),
/* harmony export */   "Offcanvas": () => (/* binding */ Offcanvas),
/* harmony export */   "Popover": () => (/* binding */ Popover),
/* harmony export */   "ScrollSpy": () => (/* binding */ ScrollSpy),
/* harmony export */   "Tab": () => (/* binding */ Tab),
/* harmony export */   "Toast": () => (/* binding */ Toast),
/* harmony export */   "Tooltip": () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/index.js");
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
/*!
  * Bootstrap v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */


/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/index.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const MAX_UID = 1000000;
const MILLISECONDS_MULTIPLIER = 1000;
const TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

const toType = obj => {
  if (obj === null || obj === undefined) {
    return `${obj}`;
  }

  return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
};
/**
 * --------------------------------------------------------------------------
 * Public Util Api
 * --------------------------------------------------------------------------
 */


const getUID = prefix => {
  do {
    prefix += Math.floor(Math.random() * MAX_UID);
  } while (document.getElementById(prefix));

  return prefix;
};

const getSelector = element => {
  let selector = element.getAttribute('data-bs-target');

  if (!selector || selector === '#') {
    let hrefAttr = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,
    // so everything starting with `#` or `.`. If a "real" URL is used as the selector,
    // `document.querySelector` will rightfully complain it is invalid.
    // See https://github.com/twbs/bootstrap/issues/32273

    if (!hrefAttr || !hrefAttr.includes('#') && !hrefAttr.startsWith('.')) {
      return null;
    } // Just in case some CMS puts out a full URL with the anchor appended


    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {
      hrefAttr = `#${hrefAttr.split('#')[1]}`;
    }

    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;
  }

  return selector;
};

const getSelectorFromElement = element => {
  const selector = getSelector(element);

  if (selector) {
    return document.querySelector(selector) ? selector : null;
  }

  return null;
};

const getElementFromSelector = element => {
  const selector = getSelector(element);
  return selector ? document.querySelector(selector) : null;
};

const getTransitionDurationFromElement = element => {
  if (!element) {
    return 0;
  } // Get transition-duration of the element


  let {
    transitionDuration,
    transitionDelay
  } = window.getComputedStyle(element);
  const floatTransitionDuration = Number.parseFloat(transitionDuration);
  const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

  if (!floatTransitionDuration && !floatTransitionDelay) {
    return 0;
  } // If multiple durations are defined, take the first


  transitionDuration = transitionDuration.split(',')[0];
  transitionDelay = transitionDelay.split(',')[0];
  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
};

const triggerTransitionEnd = element => {
  element.dispatchEvent(new Event(TRANSITION_END));
};

const isElement = obj => {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (typeof obj.jquery !== 'undefined') {
    obj = obj[0];
  }

  return typeof obj.nodeType !== 'undefined';
};

const getElement = obj => {
  if (isElement(obj)) {
    // it's a jQuery object or a node element
    return obj.jquery ? obj[0] : obj;
  }

  if (typeof obj === 'string' && obj.length > 0) {
    return document.querySelector(obj);
  }

  return null;
};

const typeCheckConfig = (componentName, config, configTypes) => {
  Object.keys(configTypes).forEach(property => {
    const expectedTypes = configTypes[property];
    const value = config[property];
    const valueType = value && isElement(value) ? 'element' : toType(value);

    if (!new RegExp(expectedTypes).test(valueType)) {
      throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);
    }
  });
};

const isVisible = element => {
  if (!isElement(element) || element.getClientRects().length === 0) {
    return false;
  }

  return getComputedStyle(element).getPropertyValue('visibility') === 'visible';
};

const isDisabled = element => {
  if (!element || element.nodeType !== Node.ELEMENT_NODE) {
    return true;
  }

  if (element.classList.contains('disabled')) {
    return true;
  }

  if (typeof element.disabled !== 'undefined') {
    return element.disabled;
  }

  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';
};

const findShadowRoot = element => {
  if (!document.documentElement.attachShadow) {
    return null;
  } // Can find the shadow root otherwise it'll return the document


  if (typeof element.getRootNode === 'function') {
    const root = element.getRootNode();
    return root instanceof ShadowRoot ? root : null;
  }

  if (element instanceof ShadowRoot) {
    return element;
  } // when we don't find a shadow root


  if (!element.parentNode) {
    return null;
  }

  return findShadowRoot(element.parentNode);
};

const noop = () => {};
/**
 * Trick to restart an element's animation
 *
 * @param {HTMLElement} element
 * @return void
 *
 * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation
 */


const reflow = element => {
  // eslint-disable-next-line no-unused-expressions
  element.offsetHeight;
};

const getjQuery = () => {
  const {
    jQuery
  } = window;

  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {
    return jQuery;
  }

  return null;
};

const DOMContentLoadedCallbacks = [];

const onDOMContentLoaded = callback => {
  if (document.readyState === 'loading') {
    // add listener on the first call when the document is in loading state
    if (!DOMContentLoadedCallbacks.length) {
      document.addEventListener('DOMContentLoaded', () => {
        DOMContentLoadedCallbacks.forEach(callback => callback());
      });
    }

    DOMContentLoadedCallbacks.push(callback);
  } else {
    callback();
  }
};

const isRTL = () => document.documentElement.dir === 'rtl';

const defineJQueryPlugin = plugin => {
  onDOMContentLoaded(() => {
    const $ = getjQuery();
    /* istanbul ignore if */

    if ($) {
      const name = plugin.NAME;
      const JQUERY_NO_CONFLICT = $.fn[name];
      $.fn[name] = plugin.jQueryInterface;
      $.fn[name].Constructor = plugin;

      $.fn[name].noConflict = () => {
        $.fn[name] = JQUERY_NO_CONFLICT;
        return plugin.jQueryInterface;
      };
    }
  });
};

const execute = callback => {
  if (typeof callback === 'function') {
    callback();
  }
};

const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {
  if (!waitForTransition) {
    execute(callback);
    return;
  }

  const durationPadding = 5;
  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;
  let called = false;

  const handler = ({
    target
  }) => {
    if (target !== transitionElement) {
      return;
    }

    called = true;
    transitionElement.removeEventListener(TRANSITION_END, handler);
    execute(callback);
  };

  transitionElement.addEventListener(TRANSITION_END, handler);
  setTimeout(() => {
    if (!called) {
      triggerTransitionEnd(transitionElement);
    }
  }, emulatedDuration);
};
/**
 * Return the previous/next element of a list.
 *
 * @param {array} list    The list of elements
 * @param activeElement   The active element
 * @param shouldGetNext   Choose to get next or previous element
 * @param isCycleAllowed
 * @return {Element|elem} The proper element
 */


const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {
  let index = list.indexOf(activeElement); // if the element does not exist in the list return an element depending on the direction and if cycle is allowed

  if (index === -1) {
    return list[!shouldGetNext && isCycleAllowed ? list.length - 1 : 0];
  }

  const listLength = list.length;
  index += shouldGetNext ? 1 : -1;

  if (isCycleAllowed) {
    index = (index + listLength) % listLength;
  }

  return list[Math.max(0, Math.min(index, listLength - 1))];
};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/event-handler.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const namespaceRegex = /[^.]*(?=\..*)\.|.*/;
const stripNameRegex = /\..*/;
const stripUidRegex = /::\d+$/;
const eventRegistry = {}; // Events storage

let uidEvent = 1;
const customEvents = {
  mouseenter: 'mouseover',
  mouseleave: 'mouseout'
};
const customEventsRegex = /^(mouseenter|mouseleave)/i;
const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);
/**
 * ------------------------------------------------------------------------
 * Private methods
 * ------------------------------------------------------------------------
 */

function getUidEvent(element, uid) {
  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;
}

function getEvent(element) {
  const uid = getUidEvent(element);
  element.uidEvent = uid;
  eventRegistry[uid] = eventRegistry[uid] || {};
  return eventRegistry[uid];
}

function bootstrapHandler(element, fn) {
  return function handler(event) {
    event.delegateTarget = element;

    if (handler.oneOff) {
      EventHandler.off(element, event.type, fn);
    }

    return fn.apply(element, [event]);
  };
}

function bootstrapDelegationHandler(element, selector, fn) {
  return function handler(event) {
    const domElements = element.querySelectorAll(selector);

    for (let {
      target
    } = event; target && target !== this; target = target.parentNode) {
      for (let i = domElements.length; i--;) {
        if (domElements[i] === target) {
          event.delegateTarget = target;

          if (handler.oneOff) {
            EventHandler.off(element, event.type, selector, fn);
          }

          return fn.apply(target, [event]);
        }
      }
    } // To please ESLint


    return null;
  };
}

function findHandler(events, handler, delegationSelector = null) {
  const uidEventList = Object.keys(events);

  for (let i = 0, len = uidEventList.length; i < len; i++) {
    const event = events[uidEventList[i]];

    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {
      return event;
    }
  }

  return null;
}

function normalizeParams(originalTypeEvent, handler, delegationFn) {
  const delegation = typeof handler === 'string';
  const originalHandler = delegation ? delegationFn : handler;
  let typeEvent = getTypeEvent(originalTypeEvent);
  const isNative = nativeEvents.has(typeEvent);

  if (!isNative) {
    typeEvent = originalTypeEvent;
  }

  return [delegation, originalHandler, typeEvent];
}

function addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {
  if (typeof originalTypeEvent !== 'string' || !element) {
    return;
  }

  if (!handler) {
    handler = delegationFn;
    delegationFn = null;
  } // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position
  // this prevents the handler from being dispatched the same way as mouseover or mouseout does


  if (customEventsRegex.test(originalTypeEvent)) {
    const wrapFn = fn => {
      return function (event) {
        if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {
          return fn.call(this, event);
        }
      };
    };

    if (delegationFn) {
      delegationFn = wrapFn(delegationFn);
    } else {
      handler = wrapFn(handler);
    }
  }

  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);
  const events = getEvent(element);
  const handlers = events[typeEvent] || (events[typeEvent] = {});
  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);

  if (previousFn) {
    previousFn.oneOff = previousFn.oneOff && oneOff;
    return;
  }

  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));
  const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);
  fn.delegationSelector = delegation ? handler : null;
  fn.originalHandler = originalHandler;
  fn.oneOff = oneOff;
  fn.uidEvent = uid;
  handlers[uid] = fn;
  element.addEventListener(typeEvent, fn, delegation);
}

function removeHandler(element, events, typeEvent, handler, delegationSelector) {
  const fn = findHandler(events[typeEvent], handler, delegationSelector);

  if (!fn) {
    return;
  }

  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));
  delete events[typeEvent][fn.uidEvent];
}

function removeNamespacedHandlers(element, events, typeEvent, namespace) {
  const storeElementEvent = events[typeEvent] || {};
  Object.keys(storeElementEvent).forEach(handlerKey => {
    if (handlerKey.includes(namespace)) {
      const event = storeElementEvent[handlerKey];
      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);
    }
  });
}

function getTypeEvent(event) {
  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')
  event = event.replace(stripNameRegex, '');
  return customEvents[event] || event;
}

const EventHandler = {
  on(element, event, handler, delegationFn) {
    addHandler(element, event, handler, delegationFn, false);
  },

  one(element, event, handler, delegationFn) {
    addHandler(element, event, handler, delegationFn, true);
  },

  off(element, originalTypeEvent, handler, delegationFn) {
    if (typeof originalTypeEvent !== 'string' || !element) {
      return;
    }

    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);
    const inNamespace = typeEvent !== originalTypeEvent;
    const events = getEvent(element);
    const isNamespace = originalTypeEvent.startsWith('.');

    if (typeof originalHandler !== 'undefined') {
      // Simplest case: handler is passed, remove that listener ONLY.
      if (!events || !events[typeEvent]) {
        return;
      }

      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);
      return;
    }

    if (isNamespace) {
      Object.keys(events).forEach(elementEvent => {
        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));
      });
    }

    const storeElementEvent = events[typeEvent] || {};
    Object.keys(storeElementEvent).forEach(keyHandlers => {
      const handlerKey = keyHandlers.replace(stripUidRegex, '');

      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {
        const event = storeElementEvent[keyHandlers];
        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);
      }
    });
  },

  trigger(element, event, args) {
    if (typeof event !== 'string' || !element) {
      return null;
    }

    const $ = getjQuery();
    const typeEvent = getTypeEvent(event);
    const inNamespace = event !== typeEvent;
    const isNative = nativeEvents.has(typeEvent);
    let jQueryEvent;
    let bubbles = true;
    let nativeDispatch = true;
    let defaultPrevented = false;
    let evt = null;

    if (inNamespace && $) {
      jQueryEvent = $.Event(event, args);
      $(element).trigger(jQueryEvent);
      bubbles = !jQueryEvent.isPropagationStopped();
      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();
      defaultPrevented = jQueryEvent.isDefaultPrevented();
    }

    if (isNative) {
      evt = document.createEvent('HTMLEvents');
      evt.initEvent(typeEvent, bubbles, true);
    } else {
      evt = new CustomEvent(event, {
        bubbles,
        cancelable: true
      });
    } // merge custom information in our event


    if (typeof args !== 'undefined') {
      Object.keys(args).forEach(key => {
        Object.defineProperty(evt, key, {
          get() {
            return args[key];
          }

        });
      });
    }

    if (defaultPrevented) {
      evt.preventDefault();
    }

    if (nativeDispatch) {
      element.dispatchEvent(evt);
    }

    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {
      jQueryEvent.preventDefault();
    }

    return evt;
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/data.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */

/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
const elementMap = new Map();
const Data = {
  set(element, key, instance) {
    if (!elementMap.has(element)) {
      elementMap.set(element, new Map());
    }

    const instanceMap = elementMap.get(element); // make it clear we only want one instance per element
    // can be removed later when multiple key/instances are fine to be used

    if (!instanceMap.has(key) && instanceMap.size !== 0) {
      // eslint-disable-next-line no-console
      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);
      return;
    }

    instanceMap.set(key, instance);
  },

  get(element, key) {
    if (elementMap.has(element)) {
      return elementMap.get(element).get(key) || null;
    }

    return null;
  },

  remove(element, key) {
    if (!elementMap.has(element)) {
      return;
    }

    const instanceMap = elementMap.get(element);
    instanceMap.delete(key); // free up element references if there are no instances left for an element

    if (instanceMap.size === 0) {
      elementMap.delete(element);
    }
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): base-component.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const VERSION = '5.1.3';

class BaseComponent {
  constructor(element) {
    element = getElement(element);

    if (!element) {
      return;
    }

    this._element = element;
    Data.set(this._element, this.constructor.DATA_KEY, this);
  }

  dispose() {
    Data.remove(this._element, this.constructor.DATA_KEY);
    EventHandler.off(this._element, this.constructor.EVENT_KEY);
    Object.getOwnPropertyNames(this).forEach(propertyName => {
      this[propertyName] = null;
    });
  }

  _queueCallback(callback, element, isAnimated = true) {
    executeAfterTransition(callback, element, isAnimated);
  }
  /** Static */


  static getInstance(element) {
    return Data.get(getElement(element), this.DATA_KEY);
  }

  static getOrCreateInstance(element, config = {}) {
    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);
  }

  static get VERSION() {
    return VERSION;
  }

  static get NAME() {
    throw new Error('You have to implement the static method "NAME", for each component!');
  }

  static get DATA_KEY() {
    return `bs.${this.NAME}`;
  }

  static get EVENT_KEY() {
    return `.${this.DATA_KEY}`;
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/component-functions.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */

const enableDismissTrigger = (component, method = 'hide') => {
  const clickEvent = `click.dismiss${component.EVENT_KEY}`;
  const name = component.NAME;
  EventHandler.on(document, clickEvent, `[data-bs-dismiss="${name}"]`, function (event) {
    if (['A', 'AREA'].includes(this.tagName)) {
      event.preventDefault();
    }

    if (isDisabled(this)) {
      return;
    }

    const target = getElementFromSelector(this) || this.closest(`.${name}`);
    const instance = component.getOrCreateInstance(target); // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method

    instance[method]();
  });
};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): alert.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$d = 'alert';
const DATA_KEY$c = 'bs.alert';
const EVENT_KEY$c = `.${DATA_KEY$c}`;
const EVENT_CLOSE = `close${EVENT_KEY$c}`;
const EVENT_CLOSED = `closed${EVENT_KEY$c}`;
const CLASS_NAME_FADE$5 = 'fade';
const CLASS_NAME_SHOW$8 = 'show';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Alert extends BaseComponent {
  // Getters
  static get NAME() {
    return NAME$d;
  } // Public


  close() {
    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);

    if (closeEvent.defaultPrevented) {
      return;
    }

    this._element.classList.remove(CLASS_NAME_SHOW$8);

    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);

    this._queueCallback(() => this._destroyElement(), this._element, isAnimated);
  } // Private


  _destroyElement() {
    this._element.remove();

    EventHandler.trigger(this._element, EVENT_CLOSED);
    this.dispose();
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Alert.getOrCreateInstance(this);

      if (typeof config !== 'string') {
        return;
      }

      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config](this);
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


enableDismissTrigger(Alert, 'close');
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Alert to jQuery only if jQuery is present
 */

defineJQueryPlugin(Alert);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): button.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$c = 'button';
const DATA_KEY$b = 'bs.button';
const EVENT_KEY$b = `.${DATA_KEY$b}`;
const DATA_API_KEY$7 = '.data-api';
const CLASS_NAME_ACTIVE$3 = 'active';
const SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle="button"]';
const EVENT_CLICK_DATA_API$6 = `click${EVENT_KEY$b}${DATA_API_KEY$7}`;
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Button extends BaseComponent {
  // Getters
  static get NAME() {
    return NAME$c;
  } // Public


  toggle() {
    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method
    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE$3));
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Button.getOrCreateInstance(this);

      if (config === 'toggle') {
        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, event => {
  event.preventDefault();
  const button = event.target.closest(SELECTOR_DATA_TOGGLE$5);
  const data = Button.getOrCreateInstance(button);
  data.toggle();
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Button to jQuery only if jQuery is present
 */

defineJQueryPlugin(Button);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/manipulator.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
function normalizeData(val) {
  if (val === 'true') {
    return true;
  }

  if (val === 'false') {
    return false;
  }

  if (val === Number(val).toString()) {
    return Number(val);
  }

  if (val === '' || val === 'null') {
    return null;
  }

  return val;
}

function normalizeDataKey(key) {
  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);
}

const Manipulator = {
  setDataAttribute(element, key, value) {
    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);
  },

  removeDataAttribute(element, key) {
    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);
  },

  getDataAttributes(element) {
    if (!element) {
      return {};
    }

    const attributes = {};
    Object.keys(element.dataset).filter(key => key.startsWith('bs')).forEach(key => {
      let pureKey = key.replace(/^bs/, '');
      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);
      attributes[pureKey] = normalizeData(element.dataset[key]);
    });
    return attributes;
  },

  getDataAttribute(element, key) {
    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));
  },

  offset(element) {
    const rect = element.getBoundingClientRect();
    return {
      top: rect.top + window.pageYOffset,
      left: rect.left + window.pageXOffset
    };
  },

  position(element) {
    return {
      top: element.offsetTop,
      left: element.offsetLeft
    };
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dom/selector-engine.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const NODE_TEXT = 3;
const SelectorEngine = {
  find(selector, element = document.documentElement) {
    return [].concat(...Element.prototype.querySelectorAll.call(element, selector));
  },

  findOne(selector, element = document.documentElement) {
    return Element.prototype.querySelector.call(element, selector);
  },

  children(element, selector) {
    return [].concat(...element.children).filter(child => child.matches(selector));
  },

  parents(element, selector) {
    const parents = [];
    let ancestor = element.parentNode;

    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {
      if (ancestor.matches(selector)) {
        parents.push(ancestor);
      }

      ancestor = ancestor.parentNode;
    }

    return parents;
  },

  prev(element, selector) {
    let previous = element.previousElementSibling;

    while (previous) {
      if (previous.matches(selector)) {
        return [previous];
      }

      previous = previous.previousElementSibling;
    }

    return [];
  },

  next(element, selector) {
    let next = element.nextElementSibling;

    while (next) {
      if (next.matches(selector)) {
        return [next];
      }

      next = next.nextElementSibling;
    }

    return [];
  },

  focusableChildren(element) {
    const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable="true"]'].map(selector => `${selector}:not([tabindex^="-"])`).join(', ');
    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el));
  }

};

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): carousel.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$b = 'carousel';
const DATA_KEY$a = 'bs.carousel';
const EVENT_KEY$a = `.${DATA_KEY$a}`;
const DATA_API_KEY$6 = '.data-api';
const ARROW_LEFT_KEY = 'ArrowLeft';
const ARROW_RIGHT_KEY = 'ArrowRight';
const TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

const SWIPE_THRESHOLD = 40;
const Default$a = {
  interval: 5000,
  keyboard: true,
  slide: false,
  pause: 'hover',
  wrap: true,
  touch: true
};
const DefaultType$a = {
  interval: '(number|boolean)',
  keyboard: 'boolean',
  slide: '(boolean|string)',
  pause: '(string|boolean)',
  wrap: 'boolean',
  touch: 'boolean'
};
const ORDER_NEXT = 'next';
const ORDER_PREV = 'prev';
const DIRECTION_LEFT = 'left';
const DIRECTION_RIGHT = 'right';
const KEY_TO_DIRECTION = {
  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,
  [ARROW_RIGHT_KEY]: DIRECTION_LEFT
};
const EVENT_SLIDE = `slide${EVENT_KEY$a}`;
const EVENT_SLID = `slid${EVENT_KEY$a}`;
const EVENT_KEYDOWN = `keydown${EVENT_KEY$a}`;
const EVENT_MOUSEENTER = `mouseenter${EVENT_KEY$a}`;
const EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY$a}`;
const EVENT_TOUCHSTART = `touchstart${EVENT_KEY$a}`;
const EVENT_TOUCHMOVE = `touchmove${EVENT_KEY$a}`;
const EVENT_TOUCHEND = `touchend${EVENT_KEY$a}`;
const EVENT_POINTERDOWN = `pointerdown${EVENT_KEY$a}`;
const EVENT_POINTERUP = `pointerup${EVENT_KEY$a}`;
const EVENT_DRAG_START = `dragstart${EVENT_KEY$a}`;
const EVENT_LOAD_DATA_API$2 = `load${EVENT_KEY$a}${DATA_API_KEY$6}`;
const EVENT_CLICK_DATA_API$5 = `click${EVENT_KEY$a}${DATA_API_KEY$6}`;
const CLASS_NAME_CAROUSEL = 'carousel';
const CLASS_NAME_ACTIVE$2 = 'active';
const CLASS_NAME_SLIDE = 'slide';
const CLASS_NAME_END = 'carousel-item-end';
const CLASS_NAME_START = 'carousel-item-start';
const CLASS_NAME_NEXT = 'carousel-item-next';
const CLASS_NAME_PREV = 'carousel-item-prev';
const CLASS_NAME_POINTER_EVENT = 'pointer-event';
const SELECTOR_ACTIVE$1 = '.active';
const SELECTOR_ACTIVE_ITEM = '.active.carousel-item';
const SELECTOR_ITEM = '.carousel-item';
const SELECTOR_ITEM_IMG = '.carousel-item img';
const SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';
const SELECTOR_INDICATORS = '.carousel-indicators';
const SELECTOR_INDICATOR = '[data-bs-target]';
const SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';
const SELECTOR_DATA_RIDE = '[data-bs-ride="carousel"]';
const POINTER_TYPE_TOUCH = 'touch';
const POINTER_TYPE_PEN = 'pen';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Carousel extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._items = null;
    this._interval = null;
    this._activeElement = null;
    this._isPaused = false;
    this._isSliding = false;
    this.touchTimeout = null;
    this.touchStartX = 0;
    this.touchDeltaX = 0;
    this._config = this._getConfig(config);
    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element);
    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;
    this._pointerEvent = Boolean(window.PointerEvent);

    this._addEventListeners();
  } // Getters


  static get Default() {
    return Default$a;
  }

  static get NAME() {
    return NAME$b;
  } // Public


  next() {
    this._slide(ORDER_NEXT);
  }

  nextWhenVisible() {
    // Don't call next when the page isn't visible
    // or the carousel or its parent isn't visible
    if (!document.hidden && isVisible(this._element)) {
      this.next();
    }
  }

  prev() {
    this._slide(ORDER_PREV);
  }

  pause(event) {
    if (!event) {
      this._isPaused = true;
    }

    if (SelectorEngine.findOne(SELECTOR_NEXT_PREV, this._element)) {
      triggerTransitionEnd(this._element);
      this.cycle(true);
    }

    clearInterval(this._interval);
    this._interval = null;
  }

  cycle(event) {
    if (!event) {
      this._isPaused = false;
    }

    if (this._interval) {
      clearInterval(this._interval);
      this._interval = null;
    }

    if (this._config && this._config.interval && !this._isPaused) {
      this._updateInterval();

      this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
    }
  }

  to(index) {
    this._activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);

    const activeIndex = this._getItemIndex(this._activeElement);

    if (index > this._items.length - 1 || index < 0) {
      return;
    }

    if (this._isSliding) {
      EventHandler.one(this._element, EVENT_SLID, () => this.to(index));
      return;
    }

    if (activeIndex === index) {
      this.pause();
      this.cycle();
      return;
    }

    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV;

    this._slide(order, this._items[index]);
  } // Private


  _getConfig(config) {
    config = { ...Default$a,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$b, config, DefaultType$a);
    return config;
  }

  _handleSwipe() {
    const absDeltax = Math.abs(this.touchDeltaX);

    if (absDeltax <= SWIPE_THRESHOLD) {
      return;
    }

    const direction = absDeltax / this.touchDeltaX;
    this.touchDeltaX = 0;

    if (!direction) {
      return;
    }

    this._slide(direction > 0 ? DIRECTION_RIGHT : DIRECTION_LEFT);
  }

  _addEventListeners() {
    if (this._config.keyboard) {
      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event));
    }

    if (this._config.pause === 'hover') {
      EventHandler.on(this._element, EVENT_MOUSEENTER, event => this.pause(event));
      EventHandler.on(this._element, EVENT_MOUSELEAVE, event => this.cycle(event));
    }

    if (this._config.touch && this._touchSupported) {
      this._addTouchEventListeners();
    }
  }

  _addTouchEventListeners() {
    const hasPointerPenTouch = event => {
      return this._pointerEvent && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);
    };

    const start = event => {
      if (hasPointerPenTouch(event)) {
        this.touchStartX = event.clientX;
      } else if (!this._pointerEvent) {
        this.touchStartX = event.touches[0].clientX;
      }
    };

    const move = event => {
      // ensure swiping with one touch and not pinching
      this.touchDeltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this.touchStartX;
    };

    const end = event => {
      if (hasPointerPenTouch(event)) {
        this.touchDeltaX = event.clientX - this.touchStartX;
      }

      this._handleSwipe();

      if (this._config.pause === 'hover') {
        // If it's a touch-enabled device, mouseenter/leave are fired as
        // part of the mouse compatibility events on first tap - the carousel
        // would stop cycling until user tapped out of it;
        // here, we listen for touchend, explicitly pause the carousel
        // (as if it's the second time we tap on it, mouseenter compat event
        // is NOT fired) and after a timeout (to allow for mouse compatibility
        // events to fire) we explicitly restart cycling
        this.pause();

        if (this.touchTimeout) {
          clearTimeout(this.touchTimeout);
        }

        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);
      }
    };

    SelectorEngine.find(SELECTOR_ITEM_IMG, this._element).forEach(itemImg => {
      EventHandler.on(itemImg, EVENT_DRAG_START, event => event.preventDefault());
    });

    if (this._pointerEvent) {
      EventHandler.on(this._element, EVENT_POINTERDOWN, event => start(event));
      EventHandler.on(this._element, EVENT_POINTERUP, event => end(event));

      this._element.classList.add(CLASS_NAME_POINTER_EVENT);
    } else {
      EventHandler.on(this._element, EVENT_TOUCHSTART, event => start(event));
      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => move(event));
      EventHandler.on(this._element, EVENT_TOUCHEND, event => end(event));
    }
  }

  _keydown(event) {
    if (/input|textarea/i.test(event.target.tagName)) {
      return;
    }

    const direction = KEY_TO_DIRECTION[event.key];

    if (direction) {
      event.preventDefault();

      this._slide(direction);
    }
  }

  _getItemIndex(element) {
    this._items = element && element.parentNode ? SelectorEngine.find(SELECTOR_ITEM, element.parentNode) : [];
    return this._items.indexOf(element);
  }

  _getItemByOrder(order, activeElement) {
    const isNext = order === ORDER_NEXT;
    return getNextActiveElement(this._items, activeElement, isNext, this._config.wrap);
  }

  _triggerSlideEvent(relatedTarget, eventDirectionName) {
    const targetIndex = this._getItemIndex(relatedTarget);

    const fromIndex = this._getItemIndex(SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element));

    return EventHandler.trigger(this._element, EVENT_SLIDE, {
      relatedTarget,
      direction: eventDirectionName,
      from: fromIndex,
      to: targetIndex
    });
  }

  _setActiveIndicatorElement(element) {
    if (this._indicatorsElement) {
      const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE$1, this._indicatorsElement);
      activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);
      activeIndicator.removeAttribute('aria-current');
      const indicators = SelectorEngine.find(SELECTOR_INDICATOR, this._indicatorsElement);

      for (let i = 0; i < indicators.length; i++) {
        if (Number.parseInt(indicators[i].getAttribute('data-bs-slide-to'), 10) === this._getItemIndex(element)) {
          indicators[i].classList.add(CLASS_NAME_ACTIVE$2);
          indicators[i].setAttribute('aria-current', 'true');
          break;
        }
      }
    }
  }

  _updateInterval() {
    const element = this._activeElement || SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);

    if (!element) {
      return;
    }

    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);

    if (elementInterval) {
      this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
      this._config.interval = elementInterval;
    } else {
      this._config.interval = this._config.defaultInterval || this._config.interval;
    }
  }

  _slide(directionOrOrder, element) {
    const order = this._directionToOrder(directionOrOrder);

    const activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);

    const activeElementIndex = this._getItemIndex(activeElement);

    const nextElement = element || this._getItemByOrder(order, activeElement);

    const nextElementIndex = this._getItemIndex(nextElement);

    const isCycling = Boolean(this._interval);
    const isNext = order === ORDER_NEXT;
    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;
    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;

    const eventDirectionName = this._orderToDirection(order);

    if (nextElement && nextElement.classList.contains(CLASS_NAME_ACTIVE$2)) {
      this._isSliding = false;
      return;
    }

    if (this._isSliding) {
      return;
    }

    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

    if (slideEvent.defaultPrevented) {
      return;
    }

    if (!activeElement || !nextElement) {
      // Some weirdness is happening, so we bail
      return;
    }

    this._isSliding = true;

    if (isCycling) {
      this.pause();
    }

    this._setActiveIndicatorElement(nextElement);

    this._activeElement = nextElement;

    const triggerSlidEvent = () => {
      EventHandler.trigger(this._element, EVENT_SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName,
        from: activeElementIndex,
        to: nextElementIndex
      });
    };

    if (this._element.classList.contains(CLASS_NAME_SLIDE)) {
      nextElement.classList.add(orderClassName);
      reflow(nextElement);
      activeElement.classList.add(directionalClassName);
      nextElement.classList.add(directionalClassName);

      const completeCallBack = () => {
        nextElement.classList.remove(directionalClassName, orderClassName);
        nextElement.classList.add(CLASS_NAME_ACTIVE$2);
        activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);
        this._isSliding = false;
        setTimeout(triggerSlidEvent, 0);
      };

      this._queueCallback(completeCallBack, activeElement, true);
    } else {
      activeElement.classList.remove(CLASS_NAME_ACTIVE$2);
      nextElement.classList.add(CLASS_NAME_ACTIVE$2);
      this._isSliding = false;
      triggerSlidEvent();
    }

    if (isCycling) {
      this.cycle();
    }
  }

  _directionToOrder(direction) {
    if (![DIRECTION_RIGHT, DIRECTION_LEFT].includes(direction)) {
      return direction;
    }

    if (isRTL()) {
      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;
    }

    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;
  }

  _orderToDirection(order) {
    if (![ORDER_NEXT, ORDER_PREV].includes(order)) {
      return order;
    }

    if (isRTL()) {
      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }

    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;
  } // Static


  static carouselInterface(element, config) {
    const data = Carousel.getOrCreateInstance(element, config);
    let {
      _config
    } = data;

    if (typeof config === 'object') {
      _config = { ..._config,
        ...config
      };
    }

    const action = typeof config === 'string' ? config : _config.slide;

    if (typeof config === 'number') {
      data.to(config);
    } else if (typeof action === 'string') {
      if (typeof data[action] === 'undefined') {
        throw new TypeError(`No method named "${action}"`);
      }

      data[action]();
    } else if (_config.interval && _config.ride) {
      data.pause();
      data.cycle();
    }
  }

  static jQueryInterface(config) {
    return this.each(function () {
      Carousel.carouselInterface(this, config);
    });
  }

  static dataApiClickHandler(event) {
    const target = getElementFromSelector(this);

    if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {
      return;
    }

    const config = { ...Manipulator.getDataAttributes(target),
      ...Manipulator.getDataAttributes(this)
    };
    const slideIndex = this.getAttribute('data-bs-slide-to');

    if (slideIndex) {
      config.interval = false;
    }

    Carousel.carouselInterface(target, config);

    if (slideIndex) {
      Carousel.getInstance(target).to(slideIndex);
    }

    event.preventDefault();
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, Carousel.dataApiClickHandler);
EventHandler.on(window, EVENT_LOAD_DATA_API$2, () => {
  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);

  for (let i = 0, len = carousels.length; i < len; i++) {
    Carousel.carouselInterface(carousels[i], Carousel.getInstance(carousels[i]));
  }
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Carousel to jQuery only if jQuery is present
 */

defineJQueryPlugin(Carousel);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): collapse.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$a = 'collapse';
const DATA_KEY$9 = 'bs.collapse';
const EVENT_KEY$9 = `.${DATA_KEY$9}`;
const DATA_API_KEY$5 = '.data-api';
const Default$9 = {
  toggle: true,
  parent: null
};
const DefaultType$9 = {
  toggle: 'boolean',
  parent: '(null|element)'
};
const EVENT_SHOW$5 = `show${EVENT_KEY$9}`;
const EVENT_SHOWN$5 = `shown${EVENT_KEY$9}`;
const EVENT_HIDE$5 = `hide${EVENT_KEY$9}`;
const EVENT_HIDDEN$5 = `hidden${EVENT_KEY$9}`;
const EVENT_CLICK_DATA_API$4 = `click${EVENT_KEY$9}${DATA_API_KEY$5}`;
const CLASS_NAME_SHOW$7 = 'show';
const CLASS_NAME_COLLAPSE = 'collapse';
const CLASS_NAME_COLLAPSING = 'collapsing';
const CLASS_NAME_COLLAPSED = 'collapsed';
const CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;
const CLASS_NAME_HORIZONTAL = 'collapse-horizontal';
const WIDTH = 'width';
const HEIGHT = 'height';
const SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';
const SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle="collapse"]';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Collapse extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._isTransitioning = false;
    this._config = this._getConfig(config);
    this._triggerArray = [];
    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);

    for (let i = 0, len = toggleList.length; i < len; i++) {
      const elem = toggleList[i];
      const selector = getSelectorFromElement(elem);
      const filterElement = SelectorEngine.find(selector).filter(foundElem => foundElem === this._element);

      if (selector !== null && filterElement.length) {
        this._selector = selector;

        this._triggerArray.push(elem);
      }
    }

    this._initializeChildren();

    if (!this._config.parent) {
      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());
    }

    if (this._config.toggle) {
      this.toggle();
    }
  } // Getters


  static get Default() {
    return Default$9;
  }

  static get NAME() {
    return NAME$a;
  } // Public


  toggle() {
    if (this._isShown()) {
      this.hide();
    } else {
      this.show();
    }
  }

  show() {
    if (this._isTransitioning || this._isShown()) {
      return;
    }

    let actives = [];
    let activesData;

    if (this._config.parent) {
      const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);
      actives = SelectorEngine.find(SELECTOR_ACTIVES, this._config.parent).filter(elem => !children.includes(elem)); // remove children if greater depth
    }

    const container = SelectorEngine.findOne(this._selector);

    if (actives.length) {
      const tempActiveData = actives.find(elem => container !== elem);
      activesData = tempActiveData ? Collapse.getInstance(tempActiveData) : null;

      if (activesData && activesData._isTransitioning) {
        return;
      }
    }

    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW$5);

    if (startEvent.defaultPrevented) {
      return;
    }

    actives.forEach(elemActive => {
      if (container !== elemActive) {
        Collapse.getOrCreateInstance(elemActive, {
          toggle: false
        }).hide();
      }

      if (!activesData) {
        Data.set(elemActive, DATA_KEY$9, null);
      }
    });

    const dimension = this._getDimension();

    this._element.classList.remove(CLASS_NAME_COLLAPSE);

    this._element.classList.add(CLASS_NAME_COLLAPSING);

    this._element.style[dimension] = 0;

    this._addAriaAndCollapsedClass(this._triggerArray, true);

    this._isTransitioning = true;

    const complete = () => {
      this._isTransitioning = false;

      this._element.classList.remove(CLASS_NAME_COLLAPSING);

      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);

      this._element.style[dimension] = '';
      EventHandler.trigger(this._element, EVENT_SHOWN$5);
    };

    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
    const scrollSize = `scroll${capitalizedDimension}`;

    this._queueCallback(complete, this._element, true);

    this._element.style[dimension] = `${this._element[scrollSize]}px`;
  }

  hide() {
    if (this._isTransitioning || !this._isShown()) {
      return;
    }

    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE$5);

    if (startEvent.defaultPrevented) {
      return;
    }

    const dimension = this._getDimension();

    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;
    reflow(this._element);

    this._element.classList.add(CLASS_NAME_COLLAPSING);

    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);

    const triggerArrayLength = this._triggerArray.length;

    for (let i = 0; i < triggerArrayLength; i++) {
      const trigger = this._triggerArray[i];
      const elem = getElementFromSelector(trigger);

      if (elem && !this._isShown(elem)) {
        this._addAriaAndCollapsedClass([trigger], false);
      }
    }

    this._isTransitioning = true;

    const complete = () => {
      this._isTransitioning = false;

      this._element.classList.remove(CLASS_NAME_COLLAPSING);

      this._element.classList.add(CLASS_NAME_COLLAPSE);

      EventHandler.trigger(this._element, EVENT_HIDDEN$5);
    };

    this._element.style[dimension] = '';

    this._queueCallback(complete, this._element, true);
  }

  _isShown(element = this._element) {
    return element.classList.contains(CLASS_NAME_SHOW$7);
  } // Private


  _getConfig(config) {
    config = { ...Default$9,
      ...Manipulator.getDataAttributes(this._element),
      ...config
    };
    config.toggle = Boolean(config.toggle); // Coerce string values

    config.parent = getElement(config.parent);
    typeCheckConfig(NAME$a, config, DefaultType$9);
    return config;
  }

  _getDimension() {
    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;
  }

  _initializeChildren() {
    if (!this._config.parent) {
      return;
    }

    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);
    SelectorEngine.find(SELECTOR_DATA_TOGGLE$4, this._config.parent).filter(elem => !children.includes(elem)).forEach(element => {
      const selected = getElementFromSelector(element);

      if (selected) {
        this._addAriaAndCollapsedClass([element], this._isShown(selected));
      }
    });
  }

  _addAriaAndCollapsedClass(triggerArray, isOpen) {
    if (!triggerArray.length) {
      return;
    }

    triggerArray.forEach(elem => {
      if (isOpen) {
        elem.classList.remove(CLASS_NAME_COLLAPSED);
      } else {
        elem.classList.add(CLASS_NAME_COLLAPSED);
      }

      elem.setAttribute('aria-expanded', isOpen);
    });
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const _config = {};

      if (typeof config === 'string' && /show|hide/.test(config)) {
        _config.toggle = false;
      }

      const data = Collapse.getOrCreateInstance(this, _config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function (event) {
  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
  if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {
    event.preventDefault();
  }

  const selector = getSelectorFromElement(this);
  const selectorElements = SelectorEngine.find(selector);
  selectorElements.forEach(element => {
    Collapse.getOrCreateInstance(element, {
      toggle: false
    }).toggle();
  });
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Collapse to jQuery only if jQuery is present
 */

defineJQueryPlugin(Collapse);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): dropdown.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$9 = 'dropdown';
const DATA_KEY$8 = 'bs.dropdown';
const EVENT_KEY$8 = `.${DATA_KEY$8}`;
const DATA_API_KEY$4 = '.data-api';
const ESCAPE_KEY$2 = 'Escape';
const SPACE_KEY = 'Space';
const TAB_KEY$1 = 'Tab';
const ARROW_UP_KEY = 'ArrowUp';
const ARROW_DOWN_KEY = 'ArrowDown';
const RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button

const REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY$2}`);
const EVENT_HIDE$4 = `hide${EVENT_KEY$8}`;
const EVENT_HIDDEN$4 = `hidden${EVENT_KEY$8}`;
const EVENT_SHOW$4 = `show${EVENT_KEY$8}`;
const EVENT_SHOWN$4 = `shown${EVENT_KEY$8}`;
const EVENT_CLICK_DATA_API$3 = `click${EVENT_KEY$8}${DATA_API_KEY$4}`;
const EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY$8}${DATA_API_KEY$4}`;
const EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY$8}${DATA_API_KEY$4}`;
const CLASS_NAME_SHOW$6 = 'show';
const CLASS_NAME_DROPUP = 'dropup';
const CLASS_NAME_DROPEND = 'dropend';
const CLASS_NAME_DROPSTART = 'dropstart';
const CLASS_NAME_NAVBAR = 'navbar';
const SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle="dropdown"]';
const SELECTOR_MENU = '.dropdown-menu';
const SELECTOR_NAVBAR_NAV = '.navbar-nav';
const SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';
const PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';
const PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';
const PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';
const PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';
const PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';
const PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';
const Default$8 = {
  offset: [0, 2],
  boundary: 'clippingParents',
  reference: 'toggle',
  display: 'dynamic',
  popperConfig: null,
  autoClose: true
};
const DefaultType$8 = {
  offset: '(array|string|function)',
  boundary: '(string|element)',
  reference: '(string|element|object)',
  display: 'string',
  popperConfig: '(null|object|function)',
  autoClose: '(boolean|string)'
};
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Dropdown extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._popper = null;
    this._config = this._getConfig(config);
    this._menu = this._getMenuElement();
    this._inNavbar = this._detectNavbar();
  } // Getters


  static get Default() {
    return Default$8;
  }

  static get DefaultType() {
    return DefaultType$8;
  }

  static get NAME() {
    return NAME$9;
  } // Public


  toggle() {
    return this._isShown() ? this.hide() : this.show();
  }

  show() {
    if (isDisabled(this._element) || this._isShown(this._menu)) {
      return;
    }

    const relatedTarget = {
      relatedTarget: this._element
    };
    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, relatedTarget);

    if (showEvent.defaultPrevented) {
      return;
    }

    const parent = Dropdown.getParentFromElement(this._element); // Totally disable Popper for Dropdowns in Navbar

    if (this._inNavbar) {
      Manipulator.setDataAttribute(this._menu, 'popper', 'none');
    } else {
      this._createPopper(parent);
    } // If this is a touch-enabled device we add extra
    // empty mouseover listeners to the body's immediate children;
    // only needed because of broken event delegation on iOS
    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


    if ('ontouchstart' in document.documentElement && !parent.closest(SELECTOR_NAVBAR_NAV)) {
      [].concat(...document.body.children).forEach(elem => EventHandler.on(elem, 'mouseover', noop));
    }

    this._element.focus();

    this._element.setAttribute('aria-expanded', true);

    this._menu.classList.add(CLASS_NAME_SHOW$6);

    this._element.classList.add(CLASS_NAME_SHOW$6);

    EventHandler.trigger(this._element, EVENT_SHOWN$4, relatedTarget);
  }

  hide() {
    if (isDisabled(this._element) || !this._isShown(this._menu)) {
      return;
    }

    const relatedTarget = {
      relatedTarget: this._element
    };

    this._completeHide(relatedTarget);
  }

  dispose() {
    if (this._popper) {
      this._popper.destroy();
    }

    super.dispose();
  }

  update() {
    this._inNavbar = this._detectNavbar();

    if (this._popper) {
      this._popper.update();
    }
  } // Private


  _completeHide(relatedTarget) {
    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4, relatedTarget);

    if (hideEvent.defaultPrevented) {
      return;
    } // If this is a touch-enabled device we remove the extra
    // empty mouseover listeners we added for iOS support


    if ('ontouchstart' in document.documentElement) {
      [].concat(...document.body.children).forEach(elem => EventHandler.off(elem, 'mouseover', noop));
    }

    if (this._popper) {
      this._popper.destroy();
    }

    this._menu.classList.remove(CLASS_NAME_SHOW$6);

    this._element.classList.remove(CLASS_NAME_SHOW$6);

    this._element.setAttribute('aria-expanded', 'false');

    Manipulator.removeDataAttribute(this._menu, 'popper');
    EventHandler.trigger(this._element, EVENT_HIDDEN$4, relatedTarget);
  }

  _getConfig(config) {
    config = { ...this.constructor.Default,
      ...Manipulator.getDataAttributes(this._element),
      ...config
    };
    typeCheckConfig(NAME$9, config, this.constructor.DefaultType);

    if (typeof config.reference === 'object' && !isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {
      // Popper virtual elements require a getBoundingClientRect method
      throw new TypeError(`${NAME$9.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);
    }

    return config;
  }

  _createPopper(parent) {
    if (typeof _popperjs_core__WEBPACK_IMPORTED_MODULE_0__ === 'undefined') {
      throw new TypeError('Bootstrap\'s dropdowns require Popper (https://popper.js.org)');
    }

    let referenceElement = this._element;

    if (this._config.reference === 'parent') {
      referenceElement = parent;
    } else if (isElement(this._config.reference)) {
      referenceElement = getElement(this._config.reference);
    } else if (typeof this._config.reference === 'object') {
      referenceElement = this._config.reference;
    }

    const popperConfig = this._getPopperConfig();

    const isDisplayStatic = popperConfig.modifiers.find(modifier => modifier.name === 'applyStyles' && modifier.enabled === false);
    this._popper = _popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper(referenceElement, this._menu, popperConfig);

    if (isDisplayStatic) {
      Manipulator.setDataAttribute(this._menu, 'popper', 'static');
    }
  }

  _isShown(element = this._element) {
    return element.classList.contains(CLASS_NAME_SHOW$6);
  }

  _getMenuElement() {
    return SelectorEngine.next(this._element, SELECTOR_MENU)[0];
  }

  _getPlacement() {
    const parentDropdown = this._element.parentNode;

    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {
      return PLACEMENT_RIGHT;
    }

    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {
      return PLACEMENT_LEFT;
    } // We need to trim the value because custom properties can also include spaces


    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';

    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {
      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;
    }

    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;
  }

  _detectNavbar() {
    return this._element.closest(`.${CLASS_NAME_NAVBAR}`) !== null;
  }

  _getOffset() {
    const {
      offset
    } = this._config;

    if (typeof offset === 'string') {
      return offset.split(',').map(val => Number.parseInt(val, 10));
    }

    if (typeof offset === 'function') {
      return popperData => offset(popperData, this._element);
    }

    return offset;
  }

  _getPopperConfig() {
    const defaultBsPopperConfig = {
      placement: this._getPlacement(),
      modifiers: [{
        name: 'preventOverflow',
        options: {
          boundary: this._config.boundary
        }
      }, {
        name: 'offset',
        options: {
          offset: this._getOffset()
        }
      }]
    }; // Disable Popper if we have a static display

    if (this._config.display === 'static') {
      defaultBsPopperConfig.modifiers = [{
        name: 'applyStyles',
        enabled: false
      }];
    }

    return { ...defaultBsPopperConfig,
      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)
    };
  }

  _selectMenuItem({
    key,
    target
  }) {
    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible);

    if (!items.length) {
      return;
    } // if target isn't included in items (e.g. when expanding the dropdown)
    // allow cycling to get the last item in case key equals ARROW_UP_KEY


    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus();
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Dropdown.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (typeof data[config] === 'undefined') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config]();
    });
  }

  static clearMenus(event) {
    if (event && (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY$1)) {
      return;
    }

    const toggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE$3);

    for (let i = 0, len = toggles.length; i < len; i++) {
      const context = Dropdown.getInstance(toggles[i]);

      if (!context || context._config.autoClose === false) {
        continue;
      }

      if (!context._isShown()) {
        continue;
      }

      const relatedTarget = {
        relatedTarget: context._element
      };

      if (event) {
        const composedPath = event.composedPath();
        const isMenuTarget = composedPath.includes(context._menu);

        if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {
          continue;
        } // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu


        if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {
          continue;
        }

        if (event.type === 'click') {
          relatedTarget.clickEvent = event;
        }
      }

      context._completeHide(relatedTarget);
    }
  }

  static getParentFromElement(element) {
    return getElementFromSelector(element) || element.parentNode;
  }

  static dataApiKeydownHandler(event) {
    // If not input/textarea:
    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command
    // If input/textarea:
    //  - If space key => not a dropdown command
    //  - If key is other than escape
    //    - If key is not up or down => not a dropdown command
    //    - If trigger inside the menu => not a dropdown command
    if (/input|textarea/i.test(event.target.tagName) ? event.key === SPACE_KEY || event.key !== ESCAPE_KEY$2 && (event.key !== ARROW_DOWN_KEY && event.key !== ARROW_UP_KEY || event.target.closest(SELECTOR_MENU)) : !REGEXP_KEYDOWN.test(event.key)) {
      return;
    }

    const isActive = this.classList.contains(CLASS_NAME_SHOW$6);

    if (!isActive && event.key === ESCAPE_KEY$2) {
      return;
    }

    event.preventDefault();
    event.stopPropagation();

    if (isDisabled(this)) {
      return;
    }

    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE$3) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE$3)[0];
    const instance = Dropdown.getOrCreateInstance(getToggleButton);

    if (event.key === ESCAPE_KEY$2) {
      instance.hide();
      return;
    }

    if (event.key === ARROW_UP_KEY || event.key === ARROW_DOWN_KEY) {
      if (!isActive) {
        instance.show();
      }

      instance._selectMenuItem(event);

      return;
    }

    if (!isActive || event.key === SPACE_KEY) {
      Dropdown.clearMenus();
    }
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);
EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);
EventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);
EventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);
EventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function (event) {
  event.preventDefault();
  Dropdown.getOrCreateInstance(this).toggle();
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Dropdown to jQuery only if jQuery is present
 */

defineJQueryPlugin(Dropdown);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/scrollBar.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';
const SELECTOR_STICKY_CONTENT = '.sticky-top';

class ScrollBarHelper {
  constructor() {
    this._element = document.body;
  }

  getWidth() {
    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes
    const documentWidth = document.documentElement.clientWidth;
    return Math.abs(window.innerWidth - documentWidth);
  }

  hide() {
    const width = this.getWidth();

    this._disableOverFlow(); // give padding to element to balance the hidden scrollbar width


    this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width); // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth


    this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width);

    this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width);
  }

  _disableOverFlow() {
    this._saveInitialAttribute(this._element, 'overflow');

    this._element.style.overflow = 'hidden';
  }

  _setElementAttributes(selector, styleProp, callback) {
    const scrollbarWidth = this.getWidth();

    const manipulationCallBack = element => {
      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {
        return;
      }

      this._saveInitialAttribute(element, styleProp);

      const calculatedValue = window.getComputedStyle(element)[styleProp];
      element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`;
    };

    this._applyManipulationCallback(selector, manipulationCallBack);
  }

  reset() {
    this._resetElementAttributes(this._element, 'overflow');

    this._resetElementAttributes(this._element, 'paddingRight');

    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight');

    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight');
  }

  _saveInitialAttribute(element, styleProp) {
    const actualValue = element.style[styleProp];

    if (actualValue) {
      Manipulator.setDataAttribute(element, styleProp, actualValue);
    }
  }

  _resetElementAttributes(selector, styleProp) {
    const manipulationCallBack = element => {
      const value = Manipulator.getDataAttribute(element, styleProp);

      if (typeof value === 'undefined') {
        element.style.removeProperty(styleProp);
      } else {
        Manipulator.removeDataAttribute(element, styleProp);
        element.style[styleProp] = value;
      }
    };

    this._applyManipulationCallback(selector, manipulationCallBack);
  }

  _applyManipulationCallback(selector, callBack) {
    if (isElement(selector)) {
      callBack(selector);
    } else {
      SelectorEngine.find(selector, this._element).forEach(callBack);
    }
  }

  isOverflowing() {
    return this.getWidth() > 0;
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/backdrop.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const Default$7 = {
  className: 'modal-backdrop',
  isVisible: true,
  // if false, we use the backdrop helper without adding any element to the dom
  isAnimated: false,
  rootElement: 'body',
  // give the choice to place backdrop under different elements
  clickCallback: null
};
const DefaultType$7 = {
  className: 'string',
  isVisible: 'boolean',
  isAnimated: 'boolean',
  rootElement: '(element|string)',
  clickCallback: '(function|null)'
};
const NAME$8 = 'backdrop';
const CLASS_NAME_FADE$4 = 'fade';
const CLASS_NAME_SHOW$5 = 'show';
const EVENT_MOUSEDOWN = `mousedown.bs.${NAME$8}`;

class Backdrop {
  constructor(config) {
    this._config = this._getConfig(config);
    this._isAppended = false;
    this._element = null;
  }

  show(callback) {
    if (!this._config.isVisible) {
      execute(callback);
      return;
    }

    this._append();

    if (this._config.isAnimated) {
      reflow(this._getElement());
    }

    this._getElement().classList.add(CLASS_NAME_SHOW$5);

    this._emulateAnimation(() => {
      execute(callback);
    });
  }

  hide(callback) {
    if (!this._config.isVisible) {
      execute(callback);
      return;
    }

    this._getElement().classList.remove(CLASS_NAME_SHOW$5);

    this._emulateAnimation(() => {
      this.dispose();
      execute(callback);
    });
  } // Private


  _getElement() {
    if (!this._element) {
      const backdrop = document.createElement('div');
      backdrop.className = this._config.className;

      if (this._config.isAnimated) {
        backdrop.classList.add(CLASS_NAME_FADE$4);
      }

      this._element = backdrop;
    }

    return this._element;
  }

  _getConfig(config) {
    config = { ...Default$7,
      ...(typeof config === 'object' ? config : {})
    }; // use getElement() with the default "body" to get a fresh Element on each instantiation

    config.rootElement = getElement(config.rootElement);
    typeCheckConfig(NAME$8, config, DefaultType$7);
    return config;
  }

  _append() {
    if (this._isAppended) {
      return;
    }

    this._config.rootElement.append(this._getElement());

    EventHandler.on(this._getElement(), EVENT_MOUSEDOWN, () => {
      execute(this._config.clickCallback);
    });
    this._isAppended = true;
  }

  dispose() {
    if (!this._isAppended) {
      return;
    }

    EventHandler.off(this._element, EVENT_MOUSEDOWN);

    this._element.remove();

    this._isAppended = false;
  }

  _emulateAnimation(callback) {
    executeAfterTransition(callback, this._getElement(), this._config.isAnimated);
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/focustrap.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const Default$6 = {
  trapElement: null,
  // The element to trap focus inside of
  autofocus: true
};
const DefaultType$6 = {
  trapElement: 'element',
  autofocus: 'boolean'
};
const NAME$7 = 'focustrap';
const DATA_KEY$7 = 'bs.focustrap';
const EVENT_KEY$7 = `.${DATA_KEY$7}`;
const EVENT_FOCUSIN$1 = `focusin${EVENT_KEY$7}`;
const EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY$7}`;
const TAB_KEY = 'Tab';
const TAB_NAV_FORWARD = 'forward';
const TAB_NAV_BACKWARD = 'backward';

class FocusTrap {
  constructor(config) {
    this._config = this._getConfig(config);
    this._isActive = false;
    this._lastTabNavDirection = null;
  }

  activate() {
    const {
      trapElement,
      autofocus
    } = this._config;

    if (this._isActive) {
      return;
    }

    if (autofocus) {
      trapElement.focus();
    }

    EventHandler.off(document, EVENT_KEY$7); // guard against infinite focus loop

    EventHandler.on(document, EVENT_FOCUSIN$1, event => this._handleFocusin(event));
    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));
    this._isActive = true;
  }

  deactivate() {
    if (!this._isActive) {
      return;
    }

    this._isActive = false;
    EventHandler.off(document, EVENT_KEY$7);
  } // Private


  _handleFocusin(event) {
    const {
      target
    } = event;
    const {
      trapElement
    } = this._config;

    if (target === document || target === trapElement || trapElement.contains(target)) {
      return;
    }

    const elements = SelectorEngine.focusableChildren(trapElement);

    if (elements.length === 0) {
      trapElement.focus();
    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {
      elements[elements.length - 1].focus();
    } else {
      elements[0].focus();
    }
  }

  _handleKeydown(event) {
    if (event.key !== TAB_KEY) {
      return;
    }

    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;
  }

  _getConfig(config) {
    config = { ...Default$6,
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$7, config, DefaultType$6);
    return config;
  }

}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$6 = 'modal';
const DATA_KEY$6 = 'bs.modal';
const EVENT_KEY$6 = `.${DATA_KEY$6}`;
const DATA_API_KEY$3 = '.data-api';
const ESCAPE_KEY$1 = 'Escape';
const Default$5 = {
  backdrop: true,
  keyboard: true,
  focus: true
};
const DefaultType$5 = {
  backdrop: '(boolean|string)',
  keyboard: 'boolean',
  focus: 'boolean'
};
const EVENT_HIDE$3 = `hide${EVENT_KEY$6}`;
const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY$6}`;
const EVENT_HIDDEN$3 = `hidden${EVENT_KEY$6}`;
const EVENT_SHOW$3 = `show${EVENT_KEY$6}`;
const EVENT_SHOWN$3 = `shown${EVENT_KEY$6}`;
const EVENT_RESIZE = `resize${EVENT_KEY$6}`;
const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY$6}`;
const EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${EVENT_KEY$6}`;
const EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY$6}`;
const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY$6}`;
const EVENT_CLICK_DATA_API$2 = `click${EVENT_KEY$6}${DATA_API_KEY$3}`;
const CLASS_NAME_OPEN = 'modal-open';
const CLASS_NAME_FADE$3 = 'fade';
const CLASS_NAME_SHOW$4 = 'show';
const CLASS_NAME_STATIC = 'modal-static';
const OPEN_SELECTOR$1 = '.modal.show';
const SELECTOR_DIALOG = '.modal-dialog';
const SELECTOR_MODAL_BODY = '.modal-body';
const SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle="modal"]';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Modal extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._config = this._getConfig(config);
    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);
    this._backdrop = this._initializeBackDrop();
    this._focustrap = this._initializeFocusTrap();
    this._isShown = false;
    this._ignoreBackdropClick = false;
    this._isTransitioning = false;
    this._scrollBar = new ScrollBarHelper();
  } // Getters


  static get Default() {
    return Default$5;
  }

  static get NAME() {
    return NAME$6;
  } // Public


  toggle(relatedTarget) {
    return this._isShown ? this.hide() : this.show(relatedTarget);
  }

  show(relatedTarget) {
    if (this._isShown || this._isTransitioning) {
      return;
    }

    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {
      relatedTarget
    });

    if (showEvent.defaultPrevented) {
      return;
    }

    this._isShown = true;

    if (this._isAnimated()) {
      this._isTransitioning = true;
    }

    this._scrollBar.hide();

    document.body.classList.add(CLASS_NAME_OPEN);

    this._adjustDialog();

    this._setEscapeEvent();

    this._setResizeEvent();

    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {
      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {
        if (event.target === this._element) {
          this._ignoreBackdropClick = true;
        }
      });
    });

    this._showBackdrop(() => this._showElement(relatedTarget));
  }

  hide() {
    if (!this._isShown || this._isTransitioning) {
      return;
    }

    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);

    if (hideEvent.defaultPrevented) {
      return;
    }

    this._isShown = false;

    const isAnimated = this._isAnimated();

    if (isAnimated) {
      this._isTransitioning = true;
    }

    this._setEscapeEvent();

    this._setResizeEvent();

    this._focustrap.deactivate();

    this._element.classList.remove(CLASS_NAME_SHOW$4);

    EventHandler.off(this._element, EVENT_CLICK_DISMISS);
    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS);

    this._queueCallback(() => this._hideModal(), this._element, isAnimated);
  }

  dispose() {
    [window, this._dialog].forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY$6));

    this._backdrop.dispose();

    this._focustrap.deactivate();

    super.dispose();
  }

  handleUpdate() {
    this._adjustDialog();
  } // Private


  _initializeBackDrop() {
    return new Backdrop({
      isVisible: Boolean(this._config.backdrop),
      // 'static' option will be translated to true, and booleans will keep their value
      isAnimated: this._isAnimated()
    });
  }

  _initializeFocusTrap() {
    return new FocusTrap({
      trapElement: this._element
    });
  }

  _getConfig(config) {
    config = { ...Default$5,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$6, config, DefaultType$5);
    return config;
  }

  _showElement(relatedTarget) {
    const isAnimated = this._isAnimated();

    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);

    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
      // Don't move modal's DOM position
      document.body.append(this._element);
    }

    this._element.style.display = 'block';

    this._element.removeAttribute('aria-hidden');

    this._element.setAttribute('aria-modal', true);

    this._element.setAttribute('role', 'dialog');

    this._element.scrollTop = 0;

    if (modalBody) {
      modalBody.scrollTop = 0;
    }

    if (isAnimated) {
      reflow(this._element);
    }

    this._element.classList.add(CLASS_NAME_SHOW$4);

    const transitionComplete = () => {
      if (this._config.focus) {
        this._focustrap.activate();
      }

      this._isTransitioning = false;
      EventHandler.trigger(this._element, EVENT_SHOWN$3, {
        relatedTarget
      });
    };

    this._queueCallback(transitionComplete, this._dialog, isAnimated);
  }

  _setEscapeEvent() {
    if (this._isShown) {
      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, event => {
        if (this._config.keyboard && event.key === ESCAPE_KEY$1) {
          event.preventDefault();
          this.hide();
        } else if (!this._config.keyboard && event.key === ESCAPE_KEY$1) {
          this._triggerBackdropTransition();
        }
      });
    } else {
      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS$1);
    }
  }

  _setResizeEvent() {
    if (this._isShown) {
      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog());
    } else {
      EventHandler.off(window, EVENT_RESIZE);
    }
  }

  _hideModal() {
    this._element.style.display = 'none';

    this._element.setAttribute('aria-hidden', true);

    this._element.removeAttribute('aria-modal');

    this._element.removeAttribute('role');

    this._isTransitioning = false;

    this._backdrop.hide(() => {
      document.body.classList.remove(CLASS_NAME_OPEN);

      this._resetAdjustments();

      this._scrollBar.reset();

      EventHandler.trigger(this._element, EVENT_HIDDEN$3);
    });
  }

  _showBackdrop(callback) {
    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {
      if (this._ignoreBackdropClick) {
        this._ignoreBackdropClick = false;
        return;
      }

      if (event.target !== event.currentTarget) {
        return;
      }

      if (this._config.backdrop === true) {
        this.hide();
      } else if (this._config.backdrop === 'static') {
        this._triggerBackdropTransition();
      }
    });

    this._backdrop.show(callback);
  }

  _isAnimated() {
    return this._element.classList.contains(CLASS_NAME_FADE$3);
  }

  _triggerBackdropTransition() {
    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);

    if (hideEvent.defaultPrevented) {
      return;
    }

    const {
      classList,
      scrollHeight,
      style
    } = this._element;
    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight; // return if the following background transition hasn't yet completed

    if (!isModalOverflowing && style.overflowY === 'hidden' || classList.contains(CLASS_NAME_STATIC)) {
      return;
    }

    if (!isModalOverflowing) {
      style.overflowY = 'hidden';
    }

    classList.add(CLASS_NAME_STATIC);

    this._queueCallback(() => {
      classList.remove(CLASS_NAME_STATIC);

      if (!isModalOverflowing) {
        this._queueCallback(() => {
          style.overflowY = '';
        }, this._dialog);
      }
    }, this._dialog);

    this._element.focus();
  } // ----------------------------------------------------------------------
  // the following methods are used to handle overflowing modals
  // ----------------------------------------------------------------------


  _adjustDialog() {
    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

    const scrollbarWidth = this._scrollBar.getWidth();

    const isBodyOverflowing = scrollbarWidth > 0;

    if (!isBodyOverflowing && isModalOverflowing && !isRTL() || isBodyOverflowing && !isModalOverflowing && isRTL()) {
      this._element.style.paddingLeft = `${scrollbarWidth}px`;
    }

    if (isBodyOverflowing && !isModalOverflowing && !isRTL() || !isBodyOverflowing && isModalOverflowing && isRTL()) {
      this._element.style.paddingRight = `${scrollbarWidth}px`;
    }
  }

  _resetAdjustments() {
    this._element.style.paddingLeft = '';
    this._element.style.paddingRight = '';
  } // Static


  static jQueryInterface(config, relatedTarget) {
    return this.each(function () {
      const data = Modal.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (typeof data[config] === 'undefined') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config](relatedTarget);
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function (event) {
  const target = getElementFromSelector(this);

  if (['A', 'AREA'].includes(this.tagName)) {
    event.preventDefault();
  }

  EventHandler.one(target, EVENT_SHOW$3, showEvent => {
    if (showEvent.defaultPrevented) {
      // only register focus restorer if modal will actually get shown
      return;
    }

    EventHandler.one(target, EVENT_HIDDEN$3, () => {
      if (isVisible(this)) {
        this.focus();
      }
    });
  }); // avoid conflict when clicking moddal toggler while another one is open

  const allReadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);

  if (allReadyOpen) {
    Modal.getInstance(allReadyOpen).hide();
  }

  const data = Modal.getOrCreateInstance(target);
  data.toggle(this);
});
enableDismissTrigger(Modal);
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Modal to jQuery only if jQuery is present
 */

defineJQueryPlugin(Modal);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): offcanvas.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$5 = 'offcanvas';
const DATA_KEY$5 = 'bs.offcanvas';
const EVENT_KEY$5 = `.${DATA_KEY$5}`;
const DATA_API_KEY$2 = '.data-api';
const EVENT_LOAD_DATA_API$1 = `load${EVENT_KEY$5}${DATA_API_KEY$2}`;
const ESCAPE_KEY = 'Escape';
const Default$4 = {
  backdrop: true,
  keyboard: true,
  scroll: false
};
const DefaultType$4 = {
  backdrop: 'boolean',
  keyboard: 'boolean',
  scroll: 'boolean'
};
const CLASS_NAME_SHOW$3 = 'show';
const CLASS_NAME_BACKDROP = 'offcanvas-backdrop';
const OPEN_SELECTOR = '.offcanvas.show';
const EVENT_SHOW$2 = `show${EVENT_KEY$5}`;
const EVENT_SHOWN$2 = `shown${EVENT_KEY$5}`;
const EVENT_HIDE$2 = `hide${EVENT_KEY$5}`;
const EVENT_HIDDEN$2 = `hidden${EVENT_KEY$5}`;
const EVENT_CLICK_DATA_API$1 = `click${EVENT_KEY$5}${DATA_API_KEY$2}`;
const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY$5}`;
const SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle="offcanvas"]';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Offcanvas extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._config = this._getConfig(config);
    this._isShown = false;
    this._backdrop = this._initializeBackDrop();
    this._focustrap = this._initializeFocusTrap();

    this._addEventListeners();
  } // Getters


  static get NAME() {
    return NAME$5;
  }

  static get Default() {
    return Default$4;
  } // Public


  toggle(relatedTarget) {
    return this._isShown ? this.hide() : this.show(relatedTarget);
  }

  show(relatedTarget) {
    if (this._isShown) {
      return;
    }

    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$2, {
      relatedTarget
    });

    if (showEvent.defaultPrevented) {
      return;
    }

    this._isShown = true;
    this._element.style.visibility = 'visible';

    this._backdrop.show();

    if (!this._config.scroll) {
      new ScrollBarHelper().hide();
    }

    this._element.removeAttribute('aria-hidden');

    this._element.setAttribute('aria-modal', true);

    this._element.setAttribute('role', 'dialog');

    this._element.classList.add(CLASS_NAME_SHOW$3);

    const completeCallBack = () => {
      if (!this._config.scroll) {
        this._focustrap.activate();
      }

      EventHandler.trigger(this._element, EVENT_SHOWN$2, {
        relatedTarget
      });
    };

    this._queueCallback(completeCallBack, this._element, true);
  }

  hide() {
    if (!this._isShown) {
      return;
    }

    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$2);

    if (hideEvent.defaultPrevented) {
      return;
    }

    this._focustrap.deactivate();

    this._element.blur();

    this._isShown = false;

    this._element.classList.remove(CLASS_NAME_SHOW$3);

    this._backdrop.hide();

    const completeCallback = () => {
      this._element.setAttribute('aria-hidden', true);

      this._element.removeAttribute('aria-modal');

      this._element.removeAttribute('role');

      this._element.style.visibility = 'hidden';

      if (!this._config.scroll) {
        new ScrollBarHelper().reset();
      }

      EventHandler.trigger(this._element, EVENT_HIDDEN$2);
    };

    this._queueCallback(completeCallback, this._element, true);
  }

  dispose() {
    this._backdrop.dispose();

    this._focustrap.deactivate();

    super.dispose();
  } // Private


  _getConfig(config) {
    config = { ...Default$4,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' ? config : {})
    };
    typeCheckConfig(NAME$5, config, DefaultType$4);
    return config;
  }

  _initializeBackDrop() {
    return new Backdrop({
      className: CLASS_NAME_BACKDROP,
      isVisible: this._config.backdrop,
      isAnimated: true,
      rootElement: this._element.parentNode,
      clickCallback: () => this.hide()
    });
  }

  _initializeFocusTrap() {
    return new FocusTrap({
      trapElement: this._element
    });
  }

  _addEventListeners() {
    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {
      if (this._config.keyboard && event.key === ESCAPE_KEY) {
        this.hide();
      }
    });
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Offcanvas.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config](this);
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function (event) {
  const target = getElementFromSelector(this);

  if (['A', 'AREA'].includes(this.tagName)) {
    event.preventDefault();
  }

  if (isDisabled(this)) {
    return;
  }

  EventHandler.one(target, EVENT_HIDDEN$2, () => {
    // focus on trigger when it is closed
    if (isVisible(this)) {
      this.focus();
    }
  }); // avoid conflict when clicking a toggler of an offcanvas, while another is open

  const allReadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);

  if (allReadyOpen && allReadyOpen !== target) {
    Offcanvas.getInstance(allReadyOpen).hide();
  }

  const data = Offcanvas.getOrCreateInstance(target);
  data.toggle(this);
});
EventHandler.on(window, EVENT_LOAD_DATA_API$1, () => SelectorEngine.find(OPEN_SELECTOR).forEach(el => Offcanvas.getOrCreateInstance(el).show()));
enableDismissTrigger(Offcanvas);
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 */

defineJQueryPlugin(Offcanvas);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): util/sanitizer.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
const uriAttributes = new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']);
const ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
/**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * Shoutout to Angular https://github.com/angular/angular/blob/12.2.x/packages/core/src/sanitization/url_sanitizer.ts
 */

const SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i;
/**
 * A pattern that matches safe data URLs. Only matches image, video and audio types.
 *
 * Shoutout to Angular https://github.com/angular/angular/blob/12.2.x/packages/core/src/sanitization/url_sanitizer.ts
 */

const DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;

const allowedAttribute = (attribute, allowedAttributeList) => {
  const attributeName = attribute.nodeName.toLowerCase();

  if (allowedAttributeList.includes(attributeName)) {
    if (uriAttributes.has(attributeName)) {
      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue) || DATA_URL_PATTERN.test(attribute.nodeValue));
    }

    return true;
  }

  const regExp = allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp); // Check if a regular expression validates the attribute.

  for (let i = 0, len = regExp.length; i < len; i++) {
    if (regExp[i].test(attributeName)) {
      return true;
    }
  }

  return false;
};

const DefaultAllowlist = {
  // Global attributes allowed on any supplied element below.
  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
  a: ['target', 'href', 'title', 'rel'],
  area: [],
  b: [],
  br: [],
  col: [],
  code: [],
  div: [],
  em: [],
  hr: [],
  h1: [],
  h2: [],
  h3: [],
  h4: [],
  h5: [],
  h6: [],
  i: [],
  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
  li: [],
  ol: [],
  p: [],
  pre: [],
  s: [],
  small: [],
  span: [],
  sub: [],
  sup: [],
  strong: [],
  u: [],
  ul: []
};
function sanitizeHtml(unsafeHtml, allowList, sanitizeFn) {
  if (!unsafeHtml.length) {
    return unsafeHtml;
  }

  if (sanitizeFn && typeof sanitizeFn === 'function') {
    return sanitizeFn(unsafeHtml);
  }

  const domParser = new window.DOMParser();
  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');
  const elements = [].concat(...createdDocument.body.querySelectorAll('*'));

  for (let i = 0, len = elements.length; i < len; i++) {
    const element = elements[i];
    const elementName = element.nodeName.toLowerCase();

    if (!Object.keys(allowList).includes(elementName)) {
      element.remove();
      continue;
    }

    const attributeList = [].concat(...element.attributes);
    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);
    attributeList.forEach(attribute => {
      if (!allowedAttribute(attribute, allowedAttributes)) {
        element.removeAttribute(attribute.nodeName);
      }
    });
  }

  return createdDocument.body.innerHTML;
}

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): tooltip.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$4 = 'tooltip';
const DATA_KEY$4 = 'bs.tooltip';
const EVENT_KEY$4 = `.${DATA_KEY$4}`;
const CLASS_PREFIX$1 = 'bs-tooltip';
const DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn']);
const DefaultType$3 = {
  animation: 'boolean',
  template: 'string',
  title: '(string|element|function)',
  trigger: 'string',
  delay: '(number|object)',
  html: 'boolean',
  selector: '(string|boolean)',
  placement: '(string|function)',
  offset: '(array|string|function)',
  container: '(string|element|boolean)',
  fallbackPlacements: 'array',
  boundary: '(string|element)',
  customClass: '(string|function)',
  sanitize: 'boolean',
  sanitizeFn: '(null|function)',
  allowList: 'object',
  popperConfig: '(null|object|function)'
};
const AttachmentMap = {
  AUTO: 'auto',
  TOP: 'top',
  RIGHT: isRTL() ? 'left' : 'right',
  BOTTOM: 'bottom',
  LEFT: isRTL() ? 'right' : 'left'
};
const Default$3 = {
  animation: true,
  template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-arrow"></div>' + '<div class="tooltip-inner"></div>' + '</div>',
  trigger: 'hover focus',
  title: '',
  delay: 0,
  html: false,
  selector: false,
  placement: 'top',
  offset: [0, 0],
  container: false,
  fallbackPlacements: ['top', 'right', 'bottom', 'left'],
  boundary: 'clippingParents',
  customClass: '',
  sanitize: true,
  sanitizeFn: null,
  allowList: DefaultAllowlist,
  popperConfig: null
};
const Event$2 = {
  HIDE: `hide${EVENT_KEY$4}`,
  HIDDEN: `hidden${EVENT_KEY$4}`,
  SHOW: `show${EVENT_KEY$4}`,
  SHOWN: `shown${EVENT_KEY$4}`,
  INSERTED: `inserted${EVENT_KEY$4}`,
  CLICK: `click${EVENT_KEY$4}`,
  FOCUSIN: `focusin${EVENT_KEY$4}`,
  FOCUSOUT: `focusout${EVENT_KEY$4}`,
  MOUSEENTER: `mouseenter${EVENT_KEY$4}`,
  MOUSELEAVE: `mouseleave${EVENT_KEY$4}`
};
const CLASS_NAME_FADE$2 = 'fade';
const CLASS_NAME_MODAL = 'modal';
const CLASS_NAME_SHOW$2 = 'show';
const HOVER_STATE_SHOW = 'show';
const HOVER_STATE_OUT = 'out';
const SELECTOR_TOOLTIP_INNER = '.tooltip-inner';
const SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`;
const EVENT_MODAL_HIDE = 'hide.bs.modal';
const TRIGGER_HOVER = 'hover';
const TRIGGER_FOCUS = 'focus';
const TRIGGER_CLICK = 'click';
const TRIGGER_MANUAL = 'manual';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Tooltip extends BaseComponent {
  constructor(element, config) {
    if (typeof _popperjs_core__WEBPACK_IMPORTED_MODULE_0__ === 'undefined') {
      throw new TypeError('Bootstrap\'s tooltips require Popper (https://popper.js.org)');
    }

    super(element); // private

    this._isEnabled = true;
    this._timeout = 0;
    this._hoverState = '';
    this._activeTrigger = {};
    this._popper = null; // Protected

    this._config = this._getConfig(config);
    this.tip = null;

    this._setListeners();
  } // Getters


  static get Default() {
    return Default$3;
  }

  static get NAME() {
    return NAME$4;
  }

  static get Event() {
    return Event$2;
  }

  static get DefaultType() {
    return DefaultType$3;
  } // Public


  enable() {
    this._isEnabled = true;
  }

  disable() {
    this._isEnabled = false;
  }

  toggleEnabled() {
    this._isEnabled = !this._isEnabled;
  }

  toggle(event) {
    if (!this._isEnabled) {
      return;
    }

    if (event) {
      const context = this._initializeOnDelegatedTarget(event);

      context._activeTrigger.click = !context._activeTrigger.click;

      if (context._isWithActiveTrigger()) {
        context._enter(null, context);
      } else {
        context._leave(null, context);
      }
    } else {
      if (this.getTipElement().classList.contains(CLASS_NAME_SHOW$2)) {
        this._leave(null, this);

        return;
      }

      this._enter(null, this);
    }
  }

  dispose() {
    clearTimeout(this._timeout);
    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);

    if (this.tip) {
      this.tip.remove();
    }

    this._disposePopper();

    super.dispose();
  }

  show() {
    if (this._element.style.display === 'none') {
      throw new Error('Please use show on visible elements');
    }

    if (!(this.isWithContent() && this._isEnabled)) {
      return;
    }

    const showEvent = EventHandler.trigger(this._element, this.constructor.Event.SHOW);
    const shadowRoot = findShadowRoot(this._element);
    const isInTheDom = shadowRoot === null ? this._element.ownerDocument.documentElement.contains(this._element) : shadowRoot.contains(this._element);

    if (showEvent.defaultPrevented || !isInTheDom) {
      return;
    } // A trick to recreate a tooltip in case a new title is given by using the NOT documented `data-bs-original-title`
    // This will be removed later in favor of a `setContent` method


    if (this.constructor.NAME === 'tooltip' && this.tip && this.getTitle() !== this.tip.querySelector(SELECTOR_TOOLTIP_INNER).innerHTML) {
      this._disposePopper();

      this.tip.remove();
      this.tip = null;
    }

    const tip = this.getTipElement();
    const tipId = getUID(this.constructor.NAME);
    tip.setAttribute('id', tipId);

    this._element.setAttribute('aria-describedby', tipId);

    if (this._config.animation) {
      tip.classList.add(CLASS_NAME_FADE$2);
    }

    const placement = typeof this._config.placement === 'function' ? this._config.placement.call(this, tip, this._element) : this._config.placement;

    const attachment = this._getAttachment(placement);

    this._addAttachmentClass(attachment);

    const {
      container
    } = this._config;
    Data.set(tip, this.constructor.DATA_KEY, this);

    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {
      container.append(tip);
      EventHandler.trigger(this._element, this.constructor.Event.INSERTED);
    }

    if (this._popper) {
      this._popper.update();
    } else {
      this._popper = _popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper(this._element, tip, this._getPopperConfig(attachment));
    }

    tip.classList.add(CLASS_NAME_SHOW$2);

    const customClass = this._resolvePossibleFunction(this._config.customClass);

    if (customClass) {
      tip.classList.add(...customClass.split(' '));
    } // If this is a touch-enabled device we add extra
    // empty mouseover listeners to the body's immediate children;
    // only needed because of broken event delegation on iOS
    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


    if ('ontouchstart' in document.documentElement) {
      [].concat(...document.body.children).forEach(element => {
        EventHandler.on(element, 'mouseover', noop);
      });
    }

    const complete = () => {
      const prevHoverState = this._hoverState;
      this._hoverState = null;
      EventHandler.trigger(this._element, this.constructor.Event.SHOWN);

      if (prevHoverState === HOVER_STATE_OUT) {
        this._leave(null, this);
      }
    };

    const isAnimated = this.tip.classList.contains(CLASS_NAME_FADE$2);

    this._queueCallback(complete, this.tip, isAnimated);
  }

  hide() {
    if (!this._popper) {
      return;
    }

    const tip = this.getTipElement();

    const complete = () => {
      if (this._isWithActiveTrigger()) {
        return;
      }

      if (this._hoverState !== HOVER_STATE_SHOW) {
        tip.remove();
      }

      this._cleanTipClass();

      this._element.removeAttribute('aria-describedby');

      EventHandler.trigger(this._element, this.constructor.Event.HIDDEN);

      this._disposePopper();
    };

    const hideEvent = EventHandler.trigger(this._element, this.constructor.Event.HIDE);

    if (hideEvent.defaultPrevented) {
      return;
    }

    tip.classList.remove(CLASS_NAME_SHOW$2); // If this is a touch-enabled device we remove the extra
    // empty mouseover listeners we added for iOS support

    if ('ontouchstart' in document.documentElement) {
      [].concat(...document.body.children).forEach(element => EventHandler.off(element, 'mouseover', noop));
    }

    this._activeTrigger[TRIGGER_CLICK] = false;
    this._activeTrigger[TRIGGER_FOCUS] = false;
    this._activeTrigger[TRIGGER_HOVER] = false;
    const isAnimated = this.tip.classList.contains(CLASS_NAME_FADE$2);

    this._queueCallback(complete, this.tip, isAnimated);

    this._hoverState = '';
  }

  update() {
    if (this._popper !== null) {
      this._popper.update();
    }
  } // Protected


  isWithContent() {
    return Boolean(this.getTitle());
  }

  getTipElement() {
    if (this.tip) {
      return this.tip;
    }

    const element = document.createElement('div');
    element.innerHTML = this._config.template;
    const tip = element.children[0];
    this.setContent(tip);
    tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2);
    this.tip = tip;
    return this.tip;
  }

  setContent(tip) {
    this._sanitizeAndSetContent(tip, this.getTitle(), SELECTOR_TOOLTIP_INNER);
  }

  _sanitizeAndSetContent(template, content, selector) {
    const templateElement = SelectorEngine.findOne(selector, template);

    if (!content && templateElement) {
      templateElement.remove();
      return;
    } // we use append for html objects to maintain js events


    this.setElementContent(templateElement, content);
  }

  setElementContent(element, content) {
    if (element === null) {
      return;
    }

    if (isElement(content)) {
      content = getElement(content); // content is a DOM node or a jQuery

      if (this._config.html) {
        if (content.parentNode !== element) {
          element.innerHTML = '';
          element.append(content);
        }
      } else {
        element.textContent = content.textContent;
      }

      return;
    }

    if (this._config.html) {
      if (this._config.sanitize) {
        content = sanitizeHtml(content, this._config.allowList, this._config.sanitizeFn);
      }

      element.innerHTML = content;
    } else {
      element.textContent = content;
    }
  }

  getTitle() {
    const title = this._element.getAttribute('data-bs-original-title') || this._config.title;

    return this._resolvePossibleFunction(title);
  }

  updateAttachment(attachment) {
    if (attachment === 'right') {
      return 'end';
    }

    if (attachment === 'left') {
      return 'start';
    }

    return attachment;
  } // Private


  _initializeOnDelegatedTarget(event, context) {
    return context || this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());
  }

  _getOffset() {
    const {
      offset
    } = this._config;

    if (typeof offset === 'string') {
      return offset.split(',').map(val => Number.parseInt(val, 10));
    }

    if (typeof offset === 'function') {
      return popperData => offset(popperData, this._element);
    }

    return offset;
  }

  _resolvePossibleFunction(content) {
    return typeof content === 'function' ? content.call(this._element) : content;
  }

  _getPopperConfig(attachment) {
    const defaultBsPopperConfig = {
      placement: attachment,
      modifiers: [{
        name: 'flip',
        options: {
          fallbackPlacements: this._config.fallbackPlacements
        }
      }, {
        name: 'offset',
        options: {
          offset: this._getOffset()
        }
      }, {
        name: 'preventOverflow',
        options: {
          boundary: this._config.boundary
        }
      }, {
        name: 'arrow',
        options: {
          element: `.${this.constructor.NAME}-arrow`
        }
      }, {
        name: 'onChange',
        enabled: true,
        phase: 'afterWrite',
        fn: data => this._handlePopperPlacementChange(data)
      }],
      onFirstUpdate: data => {
        if (data.options.placement !== data.placement) {
          this._handlePopperPlacementChange(data);
        }
      }
    };
    return { ...defaultBsPopperConfig,
      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)
    };
  }

  _addAttachmentClass(attachment) {
    this.getTipElement().classList.add(`${this._getBasicClassPrefix()}-${this.updateAttachment(attachment)}`);
  }

  _getAttachment(placement) {
    return AttachmentMap[placement.toUpperCase()];
  }

  _setListeners() {
    const triggers = this._config.trigger.split(' ');

    triggers.forEach(trigger => {
      if (trigger === 'click') {
        EventHandler.on(this._element, this.constructor.Event.CLICK, this._config.selector, event => this.toggle(event));
      } else if (trigger !== TRIGGER_MANUAL) {
        const eventIn = trigger === TRIGGER_HOVER ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN;
        const eventOut = trigger === TRIGGER_HOVER ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;
        EventHandler.on(this._element, eventIn, this._config.selector, event => this._enter(event));
        EventHandler.on(this._element, eventOut, this._config.selector, event => this._leave(event));
      }
    });

    this._hideModalHandler = () => {
      if (this._element) {
        this.hide();
      }
    };

    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);

    if (this._config.selector) {
      this._config = { ...this._config,
        trigger: 'manual',
        selector: ''
      };
    } else {
      this._fixTitle();
    }
  }

  _fixTitle() {
    const title = this._element.getAttribute('title');

    const originalTitleType = typeof this._element.getAttribute('data-bs-original-title');

    if (title || originalTitleType !== 'string') {
      this._element.setAttribute('data-bs-original-title', title || '');

      if (title && !this._element.getAttribute('aria-label') && !this._element.textContent) {
        this._element.setAttribute('aria-label', title);
      }

      this._element.setAttribute('title', '');
    }
  }

  _enter(event, context) {
    context = this._initializeOnDelegatedTarget(event, context);

    if (event) {
      context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
    }

    if (context.getTipElement().classList.contains(CLASS_NAME_SHOW$2) || context._hoverState === HOVER_STATE_SHOW) {
      context._hoverState = HOVER_STATE_SHOW;
      return;
    }

    clearTimeout(context._timeout);
    context._hoverState = HOVER_STATE_SHOW;

    if (!context._config.delay || !context._config.delay.show) {
      context.show();
      return;
    }

    context._timeout = setTimeout(() => {
      if (context._hoverState === HOVER_STATE_SHOW) {
        context.show();
      }
    }, context._config.delay.show);
  }

  _leave(event, context) {
    context = this._initializeOnDelegatedTarget(event, context);

    if (event) {
      context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);
    }

    if (context._isWithActiveTrigger()) {
      return;
    }

    clearTimeout(context._timeout);
    context._hoverState = HOVER_STATE_OUT;

    if (!context._config.delay || !context._config.delay.hide) {
      context.hide();
      return;
    }

    context._timeout = setTimeout(() => {
      if (context._hoverState === HOVER_STATE_OUT) {
        context.hide();
      }
    }, context._config.delay.hide);
  }

  _isWithActiveTrigger() {
    for (const trigger in this._activeTrigger) {
      if (this._activeTrigger[trigger]) {
        return true;
      }
    }

    return false;
  }

  _getConfig(config) {
    const dataAttributes = Manipulator.getDataAttributes(this._element);
    Object.keys(dataAttributes).forEach(dataAttr => {
      if (DISALLOWED_ATTRIBUTES.has(dataAttr)) {
        delete dataAttributes[dataAttr];
      }
    });
    config = { ...this.constructor.Default,
      ...dataAttributes,
      ...(typeof config === 'object' && config ? config : {})
    };
    config.container = config.container === false ? document.body : getElement(config.container);

    if (typeof config.delay === 'number') {
      config.delay = {
        show: config.delay,
        hide: config.delay
      };
    }

    if (typeof config.title === 'number') {
      config.title = config.title.toString();
    }

    if (typeof config.content === 'number') {
      config.content = config.content.toString();
    }

    typeCheckConfig(NAME$4, config, this.constructor.DefaultType);

    if (config.sanitize) {
      config.template = sanitizeHtml(config.template, config.allowList, config.sanitizeFn);
    }

    return config;
  }

  _getDelegateConfig() {
    const config = {};

    for (const key in this._config) {
      if (this.constructor.Default[key] !== this._config[key]) {
        config[key] = this._config[key];
      }
    } // In the future can be replaced with:
    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])
    // `Object.fromEntries(keysWithDifferentValues)`


    return config;
  }

  _cleanTipClass() {
    const tip = this.getTipElement();
    const basicClassPrefixRegex = new RegExp(`(^|\\s)${this._getBasicClassPrefix()}\\S+`, 'g');
    const tabClass = tip.getAttribute('class').match(basicClassPrefixRegex);

    if (tabClass !== null && tabClass.length > 0) {
      tabClass.map(token => token.trim()).forEach(tClass => tip.classList.remove(tClass));
    }
  }

  _getBasicClassPrefix() {
    return CLASS_PREFIX$1;
  }

  _handlePopperPlacementChange(popperData) {
    const {
      state
    } = popperData;

    if (!state) {
      return;
    }

    this.tip = state.elements.popper;

    this._cleanTipClass();

    this._addAttachmentClass(this._getAttachment(state.placement));
  }

  _disposePopper() {
    if (this._popper) {
      this._popper.destroy();

      this._popper = null;
    }
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Tooltip.getOrCreateInstance(this, config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Tooltip to jQuery only if jQuery is present
 */


defineJQueryPlugin(Tooltip);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): popover.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$3 = 'popover';
const DATA_KEY$3 = 'bs.popover';
const EVENT_KEY$3 = `.${DATA_KEY$3}`;
const CLASS_PREFIX = 'bs-popover';
const Default$2 = { ...Tooltip.Default,
  placement: 'right',
  offset: [0, 8],
  trigger: 'click',
  content: '',
  template: '<div class="popover" role="tooltip">' + '<div class="popover-arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div>' + '</div>'
};
const DefaultType$2 = { ...Tooltip.DefaultType,
  content: '(string|element|function)'
};
const Event$1 = {
  HIDE: `hide${EVENT_KEY$3}`,
  HIDDEN: `hidden${EVENT_KEY$3}`,
  SHOW: `show${EVENT_KEY$3}`,
  SHOWN: `shown${EVENT_KEY$3}`,
  INSERTED: `inserted${EVENT_KEY$3}`,
  CLICK: `click${EVENT_KEY$3}`,
  FOCUSIN: `focusin${EVENT_KEY$3}`,
  FOCUSOUT: `focusout${EVENT_KEY$3}`,
  MOUSEENTER: `mouseenter${EVENT_KEY$3}`,
  MOUSELEAVE: `mouseleave${EVENT_KEY$3}`
};
const SELECTOR_TITLE = '.popover-header';
const SELECTOR_CONTENT = '.popover-body';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Popover extends Tooltip {
  // Getters
  static get Default() {
    return Default$2;
  }

  static get NAME() {
    return NAME$3;
  }

  static get Event() {
    return Event$1;
  }

  static get DefaultType() {
    return DefaultType$2;
  } // Overrides


  isWithContent() {
    return this.getTitle() || this._getContent();
  }

  setContent(tip) {
    this._sanitizeAndSetContent(tip, this.getTitle(), SELECTOR_TITLE);

    this._sanitizeAndSetContent(tip, this._getContent(), SELECTOR_CONTENT);
  } // Private


  _getContent() {
    return this._resolvePossibleFunction(this._config.content);
  }

  _getBasicClassPrefix() {
    return CLASS_PREFIX;
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Popover.getOrCreateInstance(this, config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Popover to jQuery only if jQuery is present
 */


defineJQueryPlugin(Popover);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): scrollspy.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$2 = 'scrollspy';
const DATA_KEY$2 = 'bs.scrollspy';
const EVENT_KEY$2 = `.${DATA_KEY$2}`;
const DATA_API_KEY$1 = '.data-api';
const Default$1 = {
  offset: 10,
  method: 'auto',
  target: ''
};
const DefaultType$1 = {
  offset: 'number',
  method: 'string',
  target: '(string|element)'
};
const EVENT_ACTIVATE = `activate${EVENT_KEY$2}`;
const EVENT_SCROLL = `scroll${EVENT_KEY$2}`;
const EVENT_LOAD_DATA_API = `load${EVENT_KEY$2}${DATA_API_KEY$1}`;
const CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';
const CLASS_NAME_ACTIVE$1 = 'active';
const SELECTOR_DATA_SPY = '[data-bs-spy="scroll"]';
const SELECTOR_NAV_LIST_GROUP$1 = '.nav, .list-group';
const SELECTOR_NAV_LINKS = '.nav-link';
const SELECTOR_NAV_ITEMS = '.nav-item';
const SELECTOR_LIST_ITEMS = '.list-group-item';
const SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}, .${CLASS_NAME_DROPDOWN_ITEM}`;
const SELECTOR_DROPDOWN$1 = '.dropdown';
const SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';
const METHOD_OFFSET = 'offset';
const METHOD_POSITION = 'position';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class ScrollSpy extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._scrollElement = this._element.tagName === 'BODY' ? window : this._element;
    this._config = this._getConfig(config);
    this._offsets = [];
    this._targets = [];
    this._activeTarget = null;
    this._scrollHeight = 0;
    EventHandler.on(this._scrollElement, EVENT_SCROLL, () => this._process());
    this.refresh();

    this._process();
  } // Getters


  static get Default() {
    return Default$1;
  }

  static get NAME() {
    return NAME$2;
  } // Public


  refresh() {
    const autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;
    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;
    const offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;
    this._offsets = [];
    this._targets = [];
    this._scrollHeight = this._getScrollHeight();
    const targets = SelectorEngine.find(SELECTOR_LINK_ITEMS, this._config.target);
    targets.map(element => {
      const targetSelector = getSelectorFromElement(element);
      const target = targetSelector ? SelectorEngine.findOne(targetSelector) : null;

      if (target) {
        const targetBCR = target.getBoundingClientRect();

        if (targetBCR.width || targetBCR.height) {
          return [Manipulator[offsetMethod](target).top + offsetBase, targetSelector];
        }
      }

      return null;
    }).filter(item => item).sort((a, b) => a[0] - b[0]).forEach(item => {
      this._offsets.push(item[0]);

      this._targets.push(item[1]);
    });
  }

  dispose() {
    EventHandler.off(this._scrollElement, EVENT_KEY$2);
    super.dispose();
  } // Private


  _getConfig(config) {
    config = { ...Default$1,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' && config ? config : {})
    };
    config.target = getElement(config.target) || document.documentElement;
    typeCheckConfig(NAME$2, config, DefaultType$1);
    return config;
  }

  _getScrollTop() {
    return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
  }

  _getScrollHeight() {
    return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
  }

  _getOffsetHeight() {
    return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
  }

  _process() {
    const scrollTop = this._getScrollTop() + this._config.offset;

    const scrollHeight = this._getScrollHeight();

    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

    if (this._scrollHeight !== scrollHeight) {
      this.refresh();
    }

    if (scrollTop >= maxScroll) {
      const target = this._targets[this._targets.length - 1];

      if (this._activeTarget !== target) {
        this._activate(target);
      }

      return;
    }

    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
      this._activeTarget = null;

      this._clear();

      return;
    }

    for (let i = this._offsets.length; i--;) {
      const isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);

      if (isActiveTarget) {
        this._activate(this._targets[i]);
      }
    }
  }

  _activate(target) {
    this._activeTarget = target;

    this._clear();

    const queries = SELECTOR_LINK_ITEMS.split(',').map(selector => `${selector}[data-bs-target="${target}"],${selector}[href="${target}"]`);
    const link = SelectorEngine.findOne(queries.join(','), this._config.target);
    link.classList.add(CLASS_NAME_ACTIVE$1);

    if (link.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {
      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, link.closest(SELECTOR_DROPDOWN$1)).classList.add(CLASS_NAME_ACTIVE$1);
    } else {
      SelectorEngine.parents(link, SELECTOR_NAV_LIST_GROUP$1).forEach(listGroup => {
        // Set triggered links parents as active
        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor
        SelectorEngine.prev(listGroup, `${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`).forEach(item => item.classList.add(CLASS_NAME_ACTIVE$1)); // Handle special case when .nav-link is inside .nav-item

        SelectorEngine.prev(listGroup, SELECTOR_NAV_ITEMS).forEach(navItem => {
          SelectorEngine.children(navItem, SELECTOR_NAV_LINKS).forEach(item => item.classList.add(CLASS_NAME_ACTIVE$1));
        });
      });
    }

    EventHandler.trigger(this._scrollElement, EVENT_ACTIVATE, {
      relatedTarget: target
    });
  }

  _clear() {
    SelectorEngine.find(SELECTOR_LINK_ITEMS, this._config.target).filter(node => node.classList.contains(CLASS_NAME_ACTIVE$1)).forEach(node => node.classList.remove(CLASS_NAME_ACTIVE$1));
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = ScrollSpy.getOrCreateInstance(this, config);

      if (typeof config !== 'string') {
        return;
      }

      if (typeof data[config] === 'undefined') {
        throw new TypeError(`No method named "${config}"`);
      }

      data[config]();
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(window, EVENT_LOAD_DATA_API, () => {
  SelectorEngine.find(SELECTOR_DATA_SPY).forEach(spy => new ScrollSpy(spy));
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .ScrollSpy to jQuery only if jQuery is present
 */

defineJQueryPlugin(ScrollSpy);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): tab.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME$1 = 'tab';
const DATA_KEY$1 = 'bs.tab';
const EVENT_KEY$1 = `.${DATA_KEY$1}`;
const DATA_API_KEY = '.data-api';
const EVENT_HIDE$1 = `hide${EVENT_KEY$1}`;
const EVENT_HIDDEN$1 = `hidden${EVENT_KEY$1}`;
const EVENT_SHOW$1 = `show${EVENT_KEY$1}`;
const EVENT_SHOWN$1 = `shown${EVENT_KEY$1}`;
const EVENT_CLICK_DATA_API = `click${EVENT_KEY$1}${DATA_API_KEY}`;
const CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';
const CLASS_NAME_ACTIVE = 'active';
const CLASS_NAME_FADE$1 = 'fade';
const CLASS_NAME_SHOW$1 = 'show';
const SELECTOR_DROPDOWN = '.dropdown';
const SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';
const SELECTOR_ACTIVE = '.active';
const SELECTOR_ACTIVE_UL = ':scope > li > .active';
const SELECTOR_DATA_TOGGLE = '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]';
const SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';
const SELECTOR_DROPDOWN_ACTIVE_CHILD = ':scope > .dropdown-menu .active';
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Tab extends BaseComponent {
  // Getters
  static get NAME() {
    return NAME$1;
  } // Public


  show() {
    if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && this._element.classList.contains(CLASS_NAME_ACTIVE)) {
      return;
    }

    let previous;
    const target = getElementFromSelector(this._element);

    const listElement = this._element.closest(SELECTOR_NAV_LIST_GROUP);

    if (listElement) {
      const itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE;
      previous = SelectorEngine.find(itemSelector, listElement);
      previous = previous[previous.length - 1];
    }

    const hideEvent = previous ? EventHandler.trigger(previous, EVENT_HIDE$1, {
      relatedTarget: this._element
    }) : null;
    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$1, {
      relatedTarget: previous
    });

    if (showEvent.defaultPrevented || hideEvent !== null && hideEvent.defaultPrevented) {
      return;
    }

    this._activate(this._element, listElement);

    const complete = () => {
      EventHandler.trigger(previous, EVENT_HIDDEN$1, {
        relatedTarget: this._element
      });
      EventHandler.trigger(this._element, EVENT_SHOWN$1, {
        relatedTarget: previous
      });
    };

    if (target) {
      this._activate(target, target.parentNode, complete);
    } else {
      complete();
    }
  } // Private


  _activate(element, container, callback) {
    const activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? SelectorEngine.find(SELECTOR_ACTIVE_UL, container) : SelectorEngine.children(container, SELECTOR_ACTIVE);
    const active = activeElements[0];
    const isTransitioning = callback && active && active.classList.contains(CLASS_NAME_FADE$1);

    const complete = () => this._transitionComplete(element, active, callback);

    if (active && isTransitioning) {
      active.classList.remove(CLASS_NAME_SHOW$1);

      this._queueCallback(complete, element, true);
    } else {
      complete();
    }
  }

  _transitionComplete(element, active, callback) {
    if (active) {
      active.classList.remove(CLASS_NAME_ACTIVE);
      const dropdownChild = SelectorEngine.findOne(SELECTOR_DROPDOWN_ACTIVE_CHILD, active.parentNode);

      if (dropdownChild) {
        dropdownChild.classList.remove(CLASS_NAME_ACTIVE);
      }

      if (active.getAttribute('role') === 'tab') {
        active.setAttribute('aria-selected', false);
      }
    }

    element.classList.add(CLASS_NAME_ACTIVE);

    if (element.getAttribute('role') === 'tab') {
      element.setAttribute('aria-selected', true);
    }

    reflow(element);

    if (element.classList.contains(CLASS_NAME_FADE$1)) {
      element.classList.add(CLASS_NAME_SHOW$1);
    }

    let parent = element.parentNode;

    if (parent && parent.nodeName === 'LI') {
      parent = parent.parentNode;
    }

    if (parent && parent.classList.contains(CLASS_NAME_DROPDOWN_MENU)) {
      const dropdownElement = element.closest(SELECTOR_DROPDOWN);

      if (dropdownElement) {
        SelectorEngine.find(SELECTOR_DROPDOWN_TOGGLE, dropdownElement).forEach(dropdown => dropdown.classList.add(CLASS_NAME_ACTIVE));
      }

      element.setAttribute('aria-expanded', true);
    }

    if (callback) {
      callback();
    }
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Tab.getOrCreateInstance(this);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config]();
      }
    });
  }

}
/**
 * ------------------------------------------------------------------------
 * Data Api implementation
 * ------------------------------------------------------------------------
 */


EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {
  if (['A', 'AREA'].includes(this.tagName)) {
    event.preventDefault();
  }

  if (isDisabled(this)) {
    return;
  }

  const data = Tab.getOrCreateInstance(this);
  data.show();
});
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Tab to jQuery only if jQuery is present
 */

defineJQueryPlugin(Tab);

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.1.3): toast.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */
/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

const NAME = 'toast';
const DATA_KEY = 'bs.toast';
const EVENT_KEY = `.${DATA_KEY}`;
const EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`;
const EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`;
const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;
const EVENT_FOCUSOUT = `focusout${EVENT_KEY}`;
const EVENT_HIDE = `hide${EVENT_KEY}`;
const EVENT_HIDDEN = `hidden${EVENT_KEY}`;
const EVENT_SHOW = `show${EVENT_KEY}`;
const EVENT_SHOWN = `shown${EVENT_KEY}`;
const CLASS_NAME_FADE = 'fade';
const CLASS_NAME_HIDE = 'hide'; // @deprecated - kept here only for backwards compatibility

const CLASS_NAME_SHOW = 'show';
const CLASS_NAME_SHOWING = 'showing';
const DefaultType = {
  animation: 'boolean',
  autohide: 'boolean',
  delay: 'number'
};
const Default = {
  animation: true,
  autohide: true,
  delay: 5000
};
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

class Toast extends BaseComponent {
  constructor(element, config) {
    super(element);
    this._config = this._getConfig(config);
    this._timeout = null;
    this._hasMouseInteraction = false;
    this._hasKeyboardInteraction = false;

    this._setListeners();
  } // Getters


  static get DefaultType() {
    return DefaultType;
  }

  static get Default() {
    return Default;
  }

  static get NAME() {
    return NAME;
  } // Public


  show() {
    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW);

    if (showEvent.defaultPrevented) {
      return;
    }

    this._clearTimeout();

    if (this._config.animation) {
      this._element.classList.add(CLASS_NAME_FADE);
    }

    const complete = () => {
      this._element.classList.remove(CLASS_NAME_SHOWING);

      EventHandler.trigger(this._element, EVENT_SHOWN);

      this._maybeScheduleHide();
    };

    this._element.classList.remove(CLASS_NAME_HIDE); // @deprecated


    reflow(this._element);

    this._element.classList.add(CLASS_NAME_SHOW);

    this._element.classList.add(CLASS_NAME_SHOWING);

    this._queueCallback(complete, this._element, this._config.animation);
  }

  hide() {
    if (!this._element.classList.contains(CLASS_NAME_SHOW)) {
      return;
    }

    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);

    if (hideEvent.defaultPrevented) {
      return;
    }

    const complete = () => {
      this._element.classList.add(CLASS_NAME_HIDE); // @deprecated


      this._element.classList.remove(CLASS_NAME_SHOWING);

      this._element.classList.remove(CLASS_NAME_SHOW);

      EventHandler.trigger(this._element, EVENT_HIDDEN);
    };

    this._element.classList.add(CLASS_NAME_SHOWING);

    this._queueCallback(complete, this._element, this._config.animation);
  }

  dispose() {
    this._clearTimeout();

    if (this._element.classList.contains(CLASS_NAME_SHOW)) {
      this._element.classList.remove(CLASS_NAME_SHOW);
    }

    super.dispose();
  } // Private


  _getConfig(config) {
    config = { ...Default,
      ...Manipulator.getDataAttributes(this._element),
      ...(typeof config === 'object' && config ? config : {})
    };
    typeCheckConfig(NAME, config, this.constructor.DefaultType);
    return config;
  }

  _maybeScheduleHide() {
    if (!this._config.autohide) {
      return;
    }

    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {
      return;
    }

    this._timeout = setTimeout(() => {
      this.hide();
    }, this._config.delay);
  }

  _onInteraction(event, isInteracting) {
    switch (event.type) {
      case 'mouseover':
      case 'mouseout':
        this._hasMouseInteraction = isInteracting;
        break;

      case 'focusin':
      case 'focusout':
        this._hasKeyboardInteraction = isInteracting;
        break;
    }

    if (isInteracting) {
      this._clearTimeout();

      return;
    }

    const nextElement = event.relatedTarget;

    if (this._element === nextElement || this._element.contains(nextElement)) {
      return;
    }

    this._maybeScheduleHide();
  }

  _setListeners() {
    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true));
    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false));
    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true));
    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false));
  }

  _clearTimeout() {
    clearTimeout(this._timeout);
    this._timeout = null;
  } // Static


  static jQueryInterface(config) {
    return this.each(function () {
      const data = Toast.getOrCreateInstance(this, config);

      if (typeof config === 'string') {
        if (typeof data[config] === 'undefined') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config](this);
      }
    });
  }

}

enableDismissTrigger(Toast);
/**
 * ------------------------------------------------------------------------
 * jQuery
 * ------------------------------------------------------------------------
 * add .Toast to jQuery only if jQuery is present
 */

defineJQueryPlugin(Toast);


//# sourceMappingURL=bootstrap.esm.js.map


/***/ }),

/***/ "./node_modules/bootstrap/js/dist/alert.js":
/*!*************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/alert.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*!
  * Bootstrap alert.js v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? module.exports = factory(__webpack_require__(/*! ./dom/event-handler.js */ "./node_modules/bootstrap/js/dist/dom/event-handler.js"), __webpack_require__(/*! ./base-component.js */ "./node_modules/bootstrap/js/dist/base-component.js")) :
  0;
})(this, (function (EventHandler, BaseComponent) { 'use strict';

  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };

  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);
  const BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/index.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

  const getSelector = element => {
    let selector = element.getAttribute('data-bs-target');

    if (!selector || selector === '#') {
      let hrefAttr = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,
      // so everything starting with `#` or `.`. If a "real" URL is used as the selector,
      // `document.querySelector` will rightfully complain it is invalid.
      // See https://github.com/twbs/bootstrap/issues/32273

      if (!hrefAttr || !hrefAttr.includes('#') && !hrefAttr.startsWith('.')) {
        return null;
      } // Just in case some CMS puts out a full URL with the anchor appended


      if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {
        hrefAttr = `#${hrefAttr.split('#')[1]}`;
      }

      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;
    }

    return selector;
  };

  const getElementFromSelector = element => {
    const selector = getSelector(element);
    return selector ? document.querySelector(selector) : null;
  };

  const isDisabled = element => {
    if (!element || element.nodeType !== Node.ELEMENT_NODE) {
      return true;
    }

    if (element.classList.contains('disabled')) {
      return true;
    }

    if (typeof element.disabled !== 'undefined') {
      return element.disabled;
    }

    return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';
  };

  const getjQuery = () => {
    const {
      jQuery
    } = window;

    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {
      return jQuery;
    }

    return null;
  };

  const DOMContentLoadedCallbacks = [];

  const onDOMContentLoaded = callback => {
    if (document.readyState === 'loading') {
      // add listener on the first call when the document is in loading state
      if (!DOMContentLoadedCallbacks.length) {
        document.addEventListener('DOMContentLoaded', () => {
          DOMContentLoadedCallbacks.forEach(callback => callback());
        });
      }

      DOMContentLoadedCallbacks.push(callback);
    } else {
      callback();
    }
  };

  const defineJQueryPlugin = plugin => {
    onDOMContentLoaded(() => {
      const $ = getjQuery();
      /* istanbul ignore if */

      if ($) {
        const name = plugin.NAME;
        const JQUERY_NO_CONFLICT = $.fn[name];
        $.fn[name] = plugin.jQueryInterface;
        $.fn[name].Constructor = plugin;

        $.fn[name].noConflict = () => {
          $.fn[name] = JQUERY_NO_CONFLICT;
          return plugin.jQueryInterface;
        };
      }
    });
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/component-functions.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

  const enableDismissTrigger = (component, method = 'hide') => {
    const clickEvent = `click.dismiss${component.EVENT_KEY}`;
    const name = component.NAME;
    EventHandler__default.default.on(document, clickEvent, `[data-bs-dismiss="${name}"]`, function (event) {
      if (['A', 'AREA'].includes(this.tagName)) {
        event.preventDefault();
      }

      if (isDisabled(this)) {
        return;
      }

      const target = getElementFromSelector(this) || this.closest(`.${name}`);
      const instance = component.getOrCreateInstance(target); // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method

      instance[method]();
    });
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): alert.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  const NAME = 'alert';
  const DATA_KEY = 'bs.alert';
  const EVENT_KEY = `.${DATA_KEY}`;
  const EVENT_CLOSE = `close${EVENT_KEY}`;
  const EVENT_CLOSED = `closed${EVENT_KEY}`;
  const CLASS_NAME_FADE = 'fade';
  const CLASS_NAME_SHOW = 'show';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  class Alert extends BaseComponent__default.default {
    // Getters
    static get NAME() {
      return NAME;
    } // Public


    close() {
      const closeEvent = EventHandler__default.default.trigger(this._element, EVENT_CLOSE);

      if (closeEvent.defaultPrevented) {
        return;
      }

      this._element.classList.remove(CLASS_NAME_SHOW);

      const isAnimated = this._element.classList.contains(CLASS_NAME_FADE);

      this._queueCallback(() => this._destroyElement(), this._element, isAnimated);
    } // Private


    _destroyElement() {
      this._element.remove();

      EventHandler__default.default.trigger(this._element, EVENT_CLOSED);
      this.dispose();
    } // Static


    static jQueryInterface(config) {
      return this.each(function () {
        const data = Alert.getOrCreateInstance(this);

        if (typeof config !== 'string') {
          return;
        }

        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
          throw new TypeError(`No method named "${config}"`);
        }

        data[config](this);
      });
    }

  }
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  enableDismissTrigger(Alert, 'close');
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Alert to jQuery only if jQuery is present
   */

  defineJQueryPlugin(Alert);

  return Alert;

}));
//# sourceMappingURL=alert.js.map


/***/ }),

/***/ "./node_modules/bootstrap/js/dist/base-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/base-component.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*!
  * Bootstrap base-component.js v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ "./node_modules/bootstrap/js/dist/dom/data.js"), __webpack_require__(/*! ./dom/event-handler.js */ "./node_modules/bootstrap/js/dist/dom/event-handler.js")) :
  0;
})(this, (function (Data, EventHandler) { 'use strict';

  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };

  const Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);
  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/index.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  const MILLISECONDS_MULTIPLIER = 1000;
  const TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

  const getTransitionDurationFromElement = element => {
    if (!element) {
      return 0;
    } // Get transition-duration of the element


    let {
      transitionDuration,
      transitionDelay
    } = window.getComputedStyle(element);
    const floatTransitionDuration = Number.parseFloat(transitionDuration);
    const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

    if (!floatTransitionDuration && !floatTransitionDelay) {
      return 0;
    } // If multiple durations are defined, take the first


    transitionDuration = transitionDuration.split(',')[0];
    transitionDelay = transitionDelay.split(',')[0];
    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
  };

  const triggerTransitionEnd = element => {
    element.dispatchEvent(new Event(TRANSITION_END));
  };

  const isElement = obj => {
    if (!obj || typeof obj !== 'object') {
      return false;
    }

    if (typeof obj.jquery !== 'undefined') {
      obj = obj[0];
    }

    return typeof obj.nodeType !== 'undefined';
  };

  const getElement = obj => {
    if (isElement(obj)) {
      // it's a jQuery object or a node element
      return obj.jquery ? obj[0] : obj;
    }

    if (typeof obj === 'string' && obj.length > 0) {
      return document.querySelector(obj);
    }

    return null;
  };

  const execute = callback => {
    if (typeof callback === 'function') {
      callback();
    }
  };

  const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {
    if (!waitForTransition) {
      execute(callback);
      return;
    }

    const durationPadding = 5;
    const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;
    let called = false;

    const handler = ({
      target
    }) => {
      if (target !== transitionElement) {
        return;
      }

      called = true;
      transitionElement.removeEventListener(TRANSITION_END, handler);
      execute(callback);
    };

    transitionElement.addEventListener(TRANSITION_END, handler);
    setTimeout(() => {
      if (!called) {
        triggerTransitionEnd(transitionElement);
      }
    }, emulatedDuration);
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): base-component.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  const VERSION = '5.1.3';

  class BaseComponent {
    constructor(element) {
      element = getElement(element);

      if (!element) {
        return;
      }

      this._element = element;
      Data__default.default.set(this._element, this.constructor.DATA_KEY, this);
    }

    dispose() {
      Data__default.default.remove(this._element, this.constructor.DATA_KEY);
      EventHandler__default.default.off(this._element, this.constructor.EVENT_KEY);
      Object.getOwnPropertyNames(this).forEach(propertyName => {
        this[propertyName] = null;
      });
    }

    _queueCallback(callback, element, isAnimated = true) {
      executeAfterTransition(callback, element, isAnimated);
    }
    /** Static */


    static getInstance(element) {
      return Data__default.default.get(getElement(element), this.DATA_KEY);
    }

    static getOrCreateInstance(element, config = {}) {
      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);
    }

    static get VERSION() {
      return VERSION;
    }

    static get NAME() {
      throw new Error('You have to implement the static method "NAME", for each component!');
    }

    static get DATA_KEY() {
      return `bs.${this.NAME}`;
    }

    static get EVENT_KEY() {
      return `.${this.DATA_KEY}`;
    }

  }

  return BaseComponent;

}));
//# sourceMappingURL=base-component.js.map


/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/data.js":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/data.js ***!
  \****************************************************/
/***/ (function(module) {

/*!
  * Bootstrap data.js v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? module.exports = factory() :
  0;
})(this, (function () { 'use strict';

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): dom/data.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  const elementMap = new Map();
  const data = {
    set(element, key, instance) {
      if (!elementMap.has(element)) {
        elementMap.set(element, new Map());
      }

      const instanceMap = elementMap.get(element); // make it clear we only want one instance per element
      // can be removed later when multiple key/instances are fine to be used

      if (!instanceMap.has(key) && instanceMap.size !== 0) {
        // eslint-disable-next-line no-console
        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);
        return;
      }

      instanceMap.set(key, instance);
    },

    get(element, key) {
      if (elementMap.has(element)) {
        return elementMap.get(element).get(key) || null;
      }

      return null;
    },

    remove(element, key) {
      if (!elementMap.has(element)) {
        return;
      }

      const instanceMap = elementMap.get(element);
      instanceMap.delete(key); // free up element references if there are no instances left for an element

      if (instanceMap.size === 0) {
        elementMap.delete(element);
      }
    }

  };

  return data;

}));
//# sourceMappingURL=data.js.map


/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/event-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/event-handler.js ***!
  \*************************************************************/
/***/ (function(module) {

/*!
  * Bootstrap event-handler.js v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? module.exports = factory() :
  0;
})(this, (function () { 'use strict';

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/index.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

  const getjQuery = () => {
    const {
      jQuery
    } = window;

    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {
      return jQuery;
    }

    return null;
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): dom/event-handler.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  const namespaceRegex = /[^.]*(?=\..*)\.|.*/;
  const stripNameRegex = /\..*/;
  const stripUidRegex = /::\d+$/;
  const eventRegistry = {}; // Events storage

  let uidEvent = 1;
  const customEvents = {
    mouseenter: 'mouseover',
    mouseleave: 'mouseout'
  };
  const customEventsRegex = /^(mouseenter|mouseleave)/i;
  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);
  /**
   * ------------------------------------------------------------------------
   * Private methods
   * ------------------------------------------------------------------------
   */

  function getUidEvent(element, uid) {
    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;
  }

  function getEvent(element) {
    const uid = getUidEvent(element);
    element.uidEvent = uid;
    eventRegistry[uid] = eventRegistry[uid] || {};
    return eventRegistry[uid];
  }

  function bootstrapHandler(element, fn) {
    return function handler(event) {
      event.delegateTarget = element;

      if (handler.oneOff) {
        EventHandler.off(element, event.type, fn);
      }

      return fn.apply(element, [event]);
    };
  }

  function bootstrapDelegationHandler(element, selector, fn) {
    return function handler(event) {
      const domElements = element.querySelectorAll(selector);

      for (let {
        target
      } = event; target && target !== this; target = target.parentNode) {
        for (let i = domElements.length; i--;) {
          if (domElements[i] === target) {
            event.delegateTarget = target;

            if (handler.oneOff) {
              EventHandler.off(element, event.type, selector, fn);
            }

            return fn.apply(target, [event]);
          }
        }
      } // To please ESLint


      return null;
    };
  }

  function findHandler(events, handler, delegationSelector = null) {
    const uidEventList = Object.keys(events);

    for (let i = 0, len = uidEventList.length; i < len; i++) {
      const event = events[uidEventList[i]];

      if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {
        return event;
      }
    }

    return null;
  }

  function normalizeParams(originalTypeEvent, handler, delegationFn) {
    const delegation = typeof handler === 'string';
    const originalHandler = delegation ? delegationFn : handler;
    let typeEvent = getTypeEvent(originalTypeEvent);
    const isNative = nativeEvents.has(typeEvent);

    if (!isNative) {
      typeEvent = originalTypeEvent;
    }

    return [delegation, originalHandler, typeEvent];
  }

  function addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {
    if (typeof originalTypeEvent !== 'string' || !element) {
      return;
    }

    if (!handler) {
      handler = delegationFn;
      delegationFn = null;
    } // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position
    // this prevents the handler from being dispatched the same way as mouseover or mouseout does


    if (customEventsRegex.test(originalTypeEvent)) {
      const wrapFn = fn => {
        return function (event) {
          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {
            return fn.call(this, event);
          }
        };
      };

      if (delegationFn) {
        delegationFn = wrapFn(delegationFn);
      } else {
        handler = wrapFn(handler);
      }
    }

    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);
    const events = getEvent(element);
    const handlers = events[typeEvent] || (events[typeEvent] = {});
    const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);

    if (previousFn) {
      previousFn.oneOff = previousFn.oneOff && oneOff;
      return;
    }

    const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));
    const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);
    fn.delegationSelector = delegation ? handler : null;
    fn.originalHandler = originalHandler;
    fn.oneOff = oneOff;
    fn.uidEvent = uid;
    handlers[uid] = fn;
    element.addEventListener(typeEvent, fn, delegation);
  }

  function removeHandler(element, events, typeEvent, handler, delegationSelector) {
    const fn = findHandler(events[typeEvent], handler, delegationSelector);

    if (!fn) {
      return;
    }

    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));
    delete events[typeEvent][fn.uidEvent];
  }

  function removeNamespacedHandlers(element, events, typeEvent, namespace) {
    const storeElementEvent = events[typeEvent] || {};
    Object.keys(storeElementEvent).forEach(handlerKey => {
      if (handlerKey.includes(namespace)) {
        const event = storeElementEvent[handlerKey];
        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);
      }
    });
  }

  function getTypeEvent(event) {
    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')
    event = event.replace(stripNameRegex, '');
    return customEvents[event] || event;
  }

  const EventHandler = {
    on(element, event, handler, delegationFn) {
      addHandler(element, event, handler, delegationFn, false);
    },

    one(element, event, handler, delegationFn) {
      addHandler(element, event, handler, delegationFn, true);
    },

    off(element, originalTypeEvent, handler, delegationFn) {
      if (typeof originalTypeEvent !== 'string' || !element) {
        return;
      }

      const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);
      const inNamespace = typeEvent !== originalTypeEvent;
      const events = getEvent(element);
      const isNamespace = originalTypeEvent.startsWith('.');

      if (typeof originalHandler !== 'undefined') {
        // Simplest case: handler is passed, remove that listener ONLY.
        if (!events || !events[typeEvent]) {
          return;
        }

        removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);
        return;
      }

      if (isNamespace) {
        Object.keys(events).forEach(elementEvent => {
          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));
        });
      }

      const storeElementEvent = events[typeEvent] || {};
      Object.keys(storeElementEvent).forEach(keyHandlers => {
        const handlerKey = keyHandlers.replace(stripUidRegex, '');

        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {
          const event = storeElementEvent[keyHandlers];
          removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);
        }
      });
    },

    trigger(element, event, args) {
      if (typeof event !== 'string' || !element) {
        return null;
      }

      const $ = getjQuery();
      const typeEvent = getTypeEvent(event);
      const inNamespace = event !== typeEvent;
      const isNative = nativeEvents.has(typeEvent);
      let jQueryEvent;
      let bubbles = true;
      let nativeDispatch = true;
      let defaultPrevented = false;
      let evt = null;

      if (inNamespace && $) {
        jQueryEvent = $.Event(event, args);
        $(element).trigger(jQueryEvent);
        bubbles = !jQueryEvent.isPropagationStopped();
        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();
        defaultPrevented = jQueryEvent.isDefaultPrevented();
      }

      if (isNative) {
        evt = document.createEvent('HTMLEvents');
        evt.initEvent(typeEvent, bubbles, true);
      } else {
        evt = new CustomEvent(event, {
          bubbles,
          cancelable: true
        });
      } // merge custom information in our event


      if (typeof args !== 'undefined') {
        Object.keys(args).forEach(key => {
          Object.defineProperty(evt, key, {
            get() {
              return args[key];
            }

          });
        });
      }

      if (defaultPrevented) {
        evt.preventDefault();
      }

      if (nativeDispatch) {
        element.dispatchEvent(evt);
      }

      if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {
        jQueryEvent.preventDefault();
      }

      return evt;
    }

  };

  return EventHandler;

}));
//# sourceMappingURL=event-handler.js.map


/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var TypeError = global.TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-constructor.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/a-constructor.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var TypeError = global.TypeError;

// `Assert: IsConstructor(argument) is true`
module.exports = function (argument) {
  if (isConstructor(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a constructor');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-possible-prototype.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var String = global.String;
var TypeError = global.TypeError;

module.exports = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw TypeError("Can't set " + String(argument) + ' as a prototype');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-instance.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");

var TypeError = global.TypeError;

module.exports = function (it, Prototype) {
  if (isPrototypeOf(Prototype, it)) return it;
  throw TypeError('Incorrect invocation');
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var String = global.String;
var TypeError = global.TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw TypeError(String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-for-each.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-for-each.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-method-is-strict.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-is-strict.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice-simple.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice-simple.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

var Array = global.Array;
var max = Math.max;

module.exports = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = Array(max(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis([].slice);


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var Array = global.Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Object = global.Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "./node_modules/core-js/internals/create-iterator-constructor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iterator-constructor.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-iterator.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "./node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          redefine(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
  }
  Iterators[NAME] = defaultIterator;

  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-well-known-symbol.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/define-well-known-symbol.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js/internals/path.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "./node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-iterables.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/dom-iterables.js ***!
  \*********************************************************/
/***/ ((module) => {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-token-list-prototype.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/dom-token-list-prototype.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-browser.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-browser.js ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = typeof window == 'object';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios-pebble.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios-pebble.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-node.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-node.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-webos-webkit.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-webos-webkit.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ ((module) => {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
  options.name        - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-apply.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/function-apply.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var Function = global.Function;
var concat = uncurryThis([].concat);
var join = uncurryThis([].join);
var factories = {};

var construct = function (C, argsLength, args) {
  if (!hasOwn(factories, argsLength)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    factories[argsLength] = Function('C,a', 'return new C(' + join(list, ',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
module.exports = NATIVE_BIND ? Function.bind : function bind(that /* , ...args */) {
  var F = aCallable(this);
  var Prototype = F.prototype;
  var partArgs = arraySlice(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = concat(partArgs, arraySlice(arguments));
    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
  };
  if (isObject(Prototype)) boundFunction.prototype = Prototype;
  return boundFunction;
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var uncurryThis = NATIVE_BIND && bind.bind(call, call);

module.exports = NATIVE_BIND ? function (fn) {
  return fn && uncurryThis(fn);
} : function (fn) {
  return fn && function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator-method.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return getMethod(it, ITERATOR)
    || getMethod(it, '@@iterator')
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var TypeError = global.TypeError;

module.exports = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
  throw TypeError(tryToString(argument) + ' is not iterable');
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return func == null ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/host-report-errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/host-report-errors.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var Object = global.Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "./node_modules/core-js/internals/native-weak-map.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = uncurryThis(store.get);
  var wmhas = uncurryThis(store.has);
  var wmset = uncurryThis(store.set);
  set = function (it, metadata) {
    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget(store, it) || {};
  };
  has = function (it) {
    return wmhas(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array-iterator-method.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ ((module) => {

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

module.exports = function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Object = global.Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterate.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

var TypeError = global.TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw TypeError(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = iterator.next;
  while (!(step = call(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
  } return new Result(false);
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-close.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-close.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators-core.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  redefine(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/microtask.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/microtask.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var macrotask = (__webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set);
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_IOS_PEBBLE = __webpack_require__(/*! ../internals/engine-is-ios-pebble */ "./node_modules/core-js/internals/engine-is-ios-pebble.js");
var IS_WEBOS_WEBKIT = __webpack_require__(/*! ../internals/engine-is-webos-webkit */ "./node_modules/core-js/internals/engine-is-webos-webkit.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise;
    then = bind(promise.then, promise);
    notify = function () {
      then(flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask = bind(macrotask, global);
    notify = function () {
      macrotask(flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "./node_modules/core-js/internals/native-promise-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/native-promise-constructor.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global.Promise;


/***/ }),

/***/ "./node_modules/core-js/internals/native-symbol.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/native-symbol.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/native-weak-map.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/native-weak-map.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/new-promise-capability.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/new-promise-capability.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable(resolve);
  this.reject = aCallable(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var TypeError = global.TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var $getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && classof(it) == 'Window'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var Object = global.Object;
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable no-proto -- safe */
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "./node_modules/core-js/internals/object-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-string.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var TypeError = global.TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/perform.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/perform.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-resolve.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/promise-resolve.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/internals/queue.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/queue.js ***!
  \*************************************************/
/***/ ((module) => {

var Queue = function () {
  this.head = null;
  this.tail = null;
};

Queue.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    if (this.head) this.tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      this.head = entry.next;
      if (this.tail === entry) this.tail = null;
      return entry.item;
    }
  }
};

module.exports = Queue;


/***/ }),

/***/ "./node_modules/core-js/internals/redefine-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/redefine-all.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/internals/redefine.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/redefine.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var name = options && options.name !== undefined ? options.name : key;
  var state;
  if (isCallable(value)) {
    if (String(name).slice(0, 7) === 'Symbol(') {
      name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
    }
    if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
      createNonEnumerableProperty(value, 'name', name);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var TypeError = global.TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-global.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/set-global.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-species.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/set-species.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js/internals/set-global.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.21.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/species-constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/species-constructor.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/core-js/internals/a-constructor.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-multibyte.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/task.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/task.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  location = global.location;
} catch (error) { /* empty */ }

var run = function (id) {
  if (hasOwn(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(String(id), location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = arraySlice(arguments, 1);
    queue[++counter] = function () {
      apply(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    isCallable(global.postMessage) &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ ((module) => {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- safe
  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var Object = global.Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/to-string.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

var String = global.String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return String(argument);
};


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var String = global.String;

module.exports = function (argument) {
  try {
    return String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/validate-arguments-length.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/validate-arguments-length.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var TypeError = global.TypeError;

module.exports = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
  return passed;
};


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol-wrapped.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol-wrapped.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.for-each.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.for-each.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "./node_modules/core-js/internals/define-iterator.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.create.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.create.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  create: create
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.define-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.define-property.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
// eslint-disable-next-line es/no-object-defineproperty -- safe
$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {
  defineProperty: defineProperty
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.get-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.get-prototype-of.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var nativeGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "./node_modules/core-js/modules/es.object.set-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.set-prototype-of.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
$({ target: 'Object', stat: true }, {
  setPrototypeOf: setPrototypeOf
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.to-string.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "./node_modules/core-js/internals/native-promise-constructor.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "./node_modules/core-js/internals/redefine-all.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var task = (__webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set);
var microtask = __webpack_require__(/*! ../internals/microtask */ "./node_modules/core-js/internals/microtask.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/core-js/internals/promise-resolve.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "./node_modules/core-js/internals/host-report-errors.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/core-js/internals/queue.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_BROWSER = __webpack_require__(/*! ../internals/engine-is-browser */ "./node_modules/core-js/internals/engine-is-browser.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';

var getInternalState = InternalStateModule.getterFor(PROMISE);
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var NativePromisePrototype = NativePromise && NativePromise.prototype;
var PromiseConstructor = NativePromise;
var PromisePrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;

var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var SUBCLASSING = false;

var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromisePrototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = new PromiseConstructor(function (resolve) { resolve(1); });
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
  if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && isCallable(then = it.then) ? then : false;
};

var callReaction = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        call(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          call(then, value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromisePrototype);
    aCallable(executor);
    call(Internal, this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  PromisePrototype = PromiseConstructor.prototype;
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new Queue(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromisePrototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    // eslint-disable-next-line unicorn/no-thenable -- safe
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      state.parent = true;
      reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable(onRejected) && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      if (state.state == PENDING) state.reactions.add(reaction);
      else microtask(function () {
        callReaction(reaction, state);
      });
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && isCallable(NativePromise) && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });

      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
      redefine(NativePromisePrototype, 'catch', PromisePrototype['catch'], { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromisePrototype);
    }
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    call(capability.reject, undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      iterate(iterable, function (promise) {
        call($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.reflect.construct.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.reflect.construct.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "./node_modules/core-js/internals/function-bind.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/core-js/internals/a-constructor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var nativeConstruct = getBuiltIn('Reflect', 'construct');
var ObjectPrototype = Object.prototype;
var push = [].push;

// `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});

var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});

var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aConstructor(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      apply(push, $args, args);
      return new (apply(bind, Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : ObjectPrototype);
    var result = apply(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.iterator.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "./node_modules/core-js/internals/define-iterator.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.description.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.description.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");

var NativeSymbol = global.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var symbolToString = uncurryThis(SymbolPrototype.toString);
  var symbolValueOf = uncurryThis(SymbolPrototype.valueOf);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace = uncurryThis(''.replace);
  var stringSlice = uncurryThis(''.slice);

  defineProperty(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = symbolValueOf(this);
      var string = symbolToString(symbol);
      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';
      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.iterator.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "./node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js/internals/native-symbol.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var nativeObjectCreate = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternal = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "./node_modules/core-js/internals/redefine.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "./node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "./node_modules/core-js/internals/define-well-known-symbol.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);

var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
var TypeError = global.TypeError;
var QObject = global.QObject;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var push = uncurryThis([].push);

var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');

// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);
  if (hasOwn(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPropertyKey(V);
  var enumerable = call(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]
    ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
      push(result, AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);
      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  SymbolPrototype = $Symbol[PROTOTYPE];

  redefine(SymbolPrototype, 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  definePropertiesModule.f = $defineProperties;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty(SymbolPrototype, 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = $toString(key);
    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice(arguments);
      var $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (isCallable($replacer)) value = call($replacer, this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return apply($stringify, null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
if (!SymbolPrototype[TO_PRIMITIVE]) {
  var valueOf = SymbolPrototype.valueOf;
  // eslint-disable-next-line no-unused-vars -- required for .length
  redefine(SymbolPrototype, TO_PRIMITIVE, function (hint) {
    // TODO: improve hint logic
    return call(valueOf, this);
  });
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.for-each.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

var handlePrototype = function (CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  if (DOMIterables[COLLECTION_NAME]) {
    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
  }
}

handlePrototype(DOMTokenListPrototype);


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : 0
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),

/***/ "./node_modules/r6operators/dist/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/r6operators/dist/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ace": () => (/* binding */ ace),
/* harmony export */   "alibi": () => (/* binding */ alibi),
/* harmony export */   "amaru": () => (/* binding */ amaru),
/* harmony export */   "aruni": () => (/* binding */ aruni),
/* harmony export */   "ash": () => (/* binding */ ash),
/* harmony export */   "bandit": () => (/* binding */ bandit),
/* harmony export */   "blackbeard": () => (/* binding */ blackbeard),
/* harmony export */   "blitz": () => (/* binding */ blitz),
/* harmony export */   "buck": () => (/* binding */ buck),
/* harmony export */   "capitao": () => (/* binding */ capitao),
/* harmony export */   "castle": () => (/* binding */ castle),
/* harmony export */   "caveira": () => (/* binding */ caveira),
/* harmony export */   "clash": () => (/* binding */ clash),
/* harmony export */   "default": () => (/* binding */ index),
/* harmony export */   "doc": () => (/* binding */ doc),
/* harmony export */   "dokkaebi": () => (/* binding */ dokkaebi),
/* harmony export */   "echo": () => (/* binding */ echo),
/* harmony export */   "ela": () => (/* binding */ ela),
/* harmony export */   "finka": () => (/* binding */ finka),
/* harmony export */   "flores": () => (/* binding */ flores),
/* harmony export */   "frost": () => (/* binding */ frost),
/* harmony export */   "fuze": () => (/* binding */ fuze),
/* harmony export */   "getSVGIcon": () => (/* binding */ getSVGIcon),
/* harmony export */   "glaz": () => (/* binding */ glaz),
/* harmony export */   "goyo": () => (/* binding */ goyo),
/* harmony export */   "gridlock": () => (/* binding */ gridlock),
/* harmony export */   "hibana": () => (/* binding */ hibana),
/* harmony export */   "iana": () => (/* binding */ iana),
/* harmony export */   "iq": () => (/* binding */ iq),
/* harmony export */   "jackal": () => (/* binding */ jackal),
/* harmony export */   "jager": () => (/* binding */ jager),
/* harmony export */   "kaid": () => (/* binding */ kaid),
/* harmony export */   "kali": () => (/* binding */ kali),
/* harmony export */   "kapkan": () => (/* binding */ kapkan),
/* harmony export */   "lesion": () => (/* binding */ lesion),
/* harmony export */   "lion": () => (/* binding */ lion),
/* harmony export */   "maestro": () => (/* binding */ maestro),
/* harmony export */   "maverick": () => (/* binding */ maverick),
/* harmony export */   "melusi": () => (/* binding */ melusi),
/* harmony export */   "mira": () => (/* binding */ mira),
/* harmony export */   "montagne": () => (/* binding */ montagne),
/* harmony export */   "mozzie": () => (/* binding */ mozzie),
/* harmony export */   "mute": () => (/* binding */ mute),
/* harmony export */   "nokk": () => (/* binding */ nokk),
/* harmony export */   "nomad": () => (/* binding */ nomad),
/* harmony export */   "oryx": () => (/* binding */ oryx),
/* harmony export */   "osa": () => (/* binding */ osa),
/* harmony export */   "pulse": () => (/* binding */ pulse),
/* harmony export */   "recruit_blue": () => (/* binding */ recruit_blue),
/* harmony export */   "recruit_green": () => (/* binding */ recruit_green),
/* harmony export */   "recruit_orange": () => (/* binding */ recruit_orange),
/* harmony export */   "recruit_red": () => (/* binding */ recruit_red),
/* harmony export */   "recruit_yellow": () => (/* binding */ recruit_yellow),
/* harmony export */   "rook": () => (/* binding */ rook),
/* harmony export */   "sledge": () => (/* binding */ sledge),
/* harmony export */   "smoke": () => (/* binding */ smoke),
/* harmony export */   "tachanka": () => (/* binding */ tachanka),
/* harmony export */   "thatcher": () => (/* binding */ thatcher),
/* harmony export */   "thermite": () => (/* binding */ thermite),
/* harmony export */   "thorn": () => (/* binding */ thorn),
/* harmony export */   "thunderbird": () => (/* binding */ thunderbird),
/* harmony export */   "twitch": () => (/* binding */ twitch),
/* harmony export */   "valkyrie": () => (/* binding */ valkyrie),
/* harmony export */   "vigil": () => (/* binding */ vigil),
/* harmony export */   "wamai": () => (/* binding */ wamai),
/* harmony export */   "warden": () => (/* binding */ warden),
/* harmony export */   "ying": () => (/* binding */ ying),
/* harmony export */   "zero": () => (/* binding */ zero),
/* harmony export */   "zofia": () => (/* binding */ zofia)
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function toVal(mix) {
  var k,
      y,
      str = '';

  if (typeof mix === 'string' || typeof mix === 'number') {
    str += mix;
  } else if (_typeof(mix) === 'object') {
    if (Array.isArray(mix)) {
      for (k = 0; k < mix.length; k++) {
        if (mix[k]) {
          if (y = toVal(mix[k])) {
            str && (str += ' ');
            str += y;
          }
        }
      }
    } else {
      for (k in mix) {
        if (mix[k]) {
          str && (str += ' ');
          str += k;
        }
      }
    }
  }

  return str;
}

function clsx () {
  var i = 0,
      tmp,
      x,
      str = '';

  while (i < arguments.length) {
    if (tmp = arguments[i++]) {
      if (x = toVal(tmp)) {
        str && (str += ' ');
        str += x;
      }
    }
  }

  return str;
}

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 * Convert attributes object to string of HTML attributes.
 * @param {Object} attributes - Object containing the attributes.
 */

function attributesToString(attributes) {
  return Object.keys(attributes).map(function (key) {
    return "".concat(key, "=\"").concat(attributes[key], "\"");
  }).join(" ");
}
/**
 * Returns the icon from the operator object as an SVG string.
 * @param op Object containing operator object.
 * @param userAttributes Object containing additional element attributes.
 * @returns String containing the SVG element.
 */


function getSVGIcon(op, userAttributes) {
  // check if parameter is an object
  if (userAttributes && _typeof(userAttributes) !== "object") {
    return new TypeError("The parameter `userAttributes` is either missing or invalid.");
  } // check if parameter is an object


  if (op && !op.svg && !op.svg.attributes && !op.svg.contents) {
    return new TypeError("The parameter `op` is either missing or invalid.");
  } // create an object containing all attributes from the icon + user attributes


  var combinedAttributes = _objectSpread$1(_objectSpread$1(_objectSpread$1({}, op.svg.attributes), userAttributes), {}, {
    class: clsx(op.svg.attributes.class, userAttributes === undefined ? "" : userAttributes.class)
  }); // return as a SVG string


  return "<svg ".concat(attributesToString(combinedAttributes), ">").concat(op.svg.contents, "</svg>");
}

var ace = {
  id: 'ace',
  name: 'Ace',
  role: 'Attacker',
  unit: 'NIGHTHAVEN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'no',
    season: 'Y5S2',
    height: 187,
    weight: 75
  },
  bio: {
    real_name: 'HÃ¥vard Haugland',
    birthplace: 'LÃ¦rdalsÃ¸yri, Norway'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#2b7f90" d="m271.667 266.583 4.556 21.75-33.889-17.222-2.222-1-22.111 49.111-47.667-44.444-32.062 21.889L135.084 276l-49.833 41.729 1.278-51.507-13.528 6.917L73 73h204v192.319l-5.333 1.264z"></path><path style="fill:#fff" d="m242.333 271.111-24 49.333-47.75-40.611-32.312 16.833L250.446 73h17.22l-22.455 199.574-2.878-1.463zM191.5 73H239L109.671 227.442 73 225.666v-54.667L191.5 73z"></path><path d="M132.556 73h28.777L73 137v-32zm108.611 0H246l-52.606 66.249-5.727-4.916L241.167 73zM277 73h-9.333a6896.864 6896.864 0 0 0-22.456 199.574l20.024 10.176a9294.84 9294.84 0 0 0 11.764-181.25L277 73z"></path><path d="M234.833 144.667c.64-.244 3.868-1.405 6.896.25a7.247 7.247 0 0 1 2.104 1.75 4203.484 4203.484 0 0 1 76 88.25c.085.071 1.856 1.592 1.5 3.833-.271 1.707-1.66 3.094-3.458 3.417l-124.764 44.5c-3.445 1.256-7.041.743-9.239-1.414-1.186-1.163-1.695-2.541-1.928-3.475A2440.311 2440.311 0 0 1 168.167 161l66.666-16.333z"></path><path style="fill:#fff" d="m238 151.083 74.778 83.583c.808.902 1.009 2.051.545 2.823-.241.401-.613.62-.887.736L192.513 278.47c-.171.034-1.321.24-2.346-.554-1.041-.806-1.117-1.996-1.125-2.167l-15.264-111.417L238 151.083z"></path><path d="m199.625 185.25 28.458-8.125c-.87.565-5.432 3.648-6.25 9.292-.333 2.301.069 4.245.458 5.5 1.123-1.767 3.663-5.187 8.208-7.333 4.323-2.041 8.201-1.864 10.694-1.75 4.274.195 7.287 1.389 8.843 2.022 2.052.834 3.353 1.381 4.441 2.693 1.657 1.997 1.848 4.593 1.688 7.035-.374 5.711-2.543 8.691-7.472 19.722 0 0-3.343 7.482-3.417 12.417-.014.931.057 4.607.903 5.861.086.127.484.681.603 1.489.068.459.023.845-.02 1.081l-.347-.236c-4.608-4.1-8.83-6.535-11.833-8-3.022-1.475-7.945-3.003-17.667-6-2.503-.772-6.884-2.106-12.531-4.341-3.759-1.488-6.213-2.637-8.719-4.825-2.31-2.017-4.654-4.063-4.837-7-.284-4.552 4.826-8.024 6.754-9.334 3.607-2.451 7.122-3.052 9.917-3.5 2.597-.416 6.714-.75 11.75.25a31.769 31.769 0 0 0-6.5-4c-5.244-2.412-10.066-2.883-13.124-2.918zM24 191.889c-1.915 1.514-2.864 3.829-2.417 5.986.368 1.774 1.56 2.855 2.028 3.236l90.806 66.972c.603.37 2.843 1.648 5.861 1.222 3.003-.424 4.798-2.254 5.278-2.778L241.223 128.11c.236-.316 1.278-1.781 1-3.75-.395-2.8-3.084-3.97-3.222-4.028l-74.792-27.458a8.73 8.73 0 0 0-4.292-.375A8.738 8.738 0 0 0 156 94.207c-44 32.562-88 65.122-132 97.682z"></path><path style="fill:#fff" d="m36.125 200.5 79.517 60.681c.302.272 1.241 1.048 2.664 1.152 1.943.143 3.253-1.077 3.464-1.281 1.818-2.104 4.638-5.377 8.064-9.386 26.08-30.517 42.499-51.315 62.833-76.417a4807.83 4807.83 0 0 1 41-49.917l-71.556-26.556A2194.446 2194.446 0 0 0 134 119c-18.405 13.463-30.933 23.069-64.208 48.375A41704.427 41704.427 0 0 1 36.5 192.667c-.104.068-2.383 1.61-2.25 4.292.105 2.118 1.637 3.355 1.875 3.541z"></path><path d="M86.833 206.25a35.424 35.424 0 0 0 3.227-4.703c8.991-15.684.905-29.992 8.357-44.63 3.24-6.364 7.53-9.085 8.626-9.744.725-.436 2.516-1.451 5.809-2.37 4.091-1.142 17.069-4.766 23.774 2.192 1.077 1.117 3.096 3.654 3.708 8.505 1.147-1.219 3.391-3.941 4.333-8.083 1.32-5.802-.807-10.457-1.5-11.833l30.667 12.333a49.367 49.367 0 0 0-17.074 2.442 49.267 49.267 0 0 0-13.009 6.558c2.605-.844 6.391-1.672 10.917-1.333 2.563.192 7.233.599 11.833 3.75 2.528 1.732 5.816 3.984 6.5 7.917.956 5.494-3.893 10.109-4.786 10.958-.76.723-1.796 1.562-4.548 3.042-6.359 3.419-11.878 4.882-12.333 5-21.526 5.565-23.083 5.917-23.083 5.917-19.626 4.433-24.059 5.544-30.25 8.25a90.768 90.768 0 0 0-11.168 5.832z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-ace'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var alibi = {
  id: 'alibi',
  name: 'Alibi',
  role: 'Defender',
  unit: 'GIS',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'it',
    season: 'Y3S2',
    height: 171,
    weight: 63
  },
  bio: {
    real_name: 'Aria de Luca',
    birthplace: 'Tripoli, Lybia'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#929637" d="M73 73h204v204H73z"></path><path d="M73 127.444v41.347c-3.191-1.828-17.438-9.567-30.333-4.125-4.028 1.7-7.353 4.445-8.833 5.667-2.065 1.705-8.406 7.054-12.266 15.861-6.891 15.718-.771 30.792-.095 32.386 6.774 15.963 21.082 21.589 23.528 22.504v-43.583c.343-.824 3.635-8.346 12.167-10.5 8.64-2.181 15.169 3.034 15.833 3.583v54.75a68.051 68.051 0 0 0 16.417-2.583 85.299 85.299 0 0 0-2.687 14.037A85.473 85.473 0 0 0 87 277h46.083c.446 1.43 2.872 9.68-1.806 18-3.765 6.697-9.804 9.299-11.611 10h-27c2.166 3.98 7.061 11.483 16.292 16.125 11.41 5.738 27.331 6.043 37.653-2.514 5.705-4.729 8.259-10.972 9.472-13.936 3.141-7.676 3.07-14.255 3-17.591-.148-7.03-.373-17.738-8.306-25.75-6.338-6.402-14.417-7.87-18.361-8.271a16.65 16.65 0 0 1 2.361-5.118c1.271-1.836 2.569-2.89 4.444-4.389 5.39-4.306 8.085-6.459 8.273-6.59 5.404-3.741 9.983-5.909 11.56-6.633 2.398-1.1 5.422-2.471 9.611-3.611 2.144-.584 8.015-2.038 15.776-1.881 1.414.028 6.744.188 13.502 1.881 8.632 2.163 14.357 5.515 17.842 7.594 3.255 1.941 4.417 2.996 5.333 4.054 3.152 3.641 3.936 7.943 4.435 10.685.517 2.838.547 5.308.444 7.167-2.278-1.517-7.264-4.362-13.917-4.347-11.831.026-19.279 9.124-21.25 11.792-3.675 4.974-4.793 9.944-5.583 13.458-.561 2.492-1.605 8.177-.667 15.25.634 4.776 2.04 15.358 10.333 23.125 11.516 10.785 27.631 8.152 31.333 7.417 15.996-3.177 24.269-15.428 25.875-17.917h-24.292c-1.39-.584-8.977-3.929-12.333-12.583-2.818-7.267-.861-13.657-.257-15.417h50.465a76.675 76.675 0 0 0 1.681-17.111c-.162-10.911-2.637-19.784-4.867-25.775a104.178 104.178 0 0 0 14.478 5.845v-62.563c9.993-.796 19.372 3.316 24.333 10.938 3.837 5.894 3.836 12.051 3.667 14.708v33.333c2.588-1.716 20.173-13.785 21.917-34.958.253-3.068.943-13.117-4.917-23.75-1.494-2.711-6.059-10.738-15.833-15.917-13.145-6.965-26.072-3.671-29.167-2.792V106a138.625 138.625 0 0 1-20.111 27.889 138.146 138.146 0 0 1-16.306 14.924 93.98 93.98 0 0 0 3.945-14.867c3.821-21.322-.791-38.408-3.195-46.946C234.17 61.567 220.4 45.638 213.5 37.833a98.266 98.266 0 0 0-17.224-15.414c-9.063-6.361-14.063-9.87-21.117-9.942-8.496-.088-15.066 4.859-23.355 11.101a83.705 83.705 0 0 0-12.637 11.756c-8.297 9.419-21.988 24.961-29.594 50.067-.99 3.269-5.862 19.854-4.741 40.774.842 15.708 4.519 23.712 8.835 29.326a38.958 38.958 0 0 0 4.778 5.167 37.067 37.067 0 0 1-6.355-1.487c-6.452-2.127-10.727-5.53-13.81-8.097-11.401-9.493-22.879-21.182-25.28-23.64z"></path><path style="fill:#fff" d="M258.083 166.25c5.186-4.022 9.012-7.328 13-11.583a96.49 96.49 0 0 0 5.917-6.944v-19.722c-8.828 12.871-17.869 21.571-24.271 26.962-12.921 10.88-21.957 14.056-25.951 15.26a60.543 60.543 0 0 1-5 1.278c-1.416-.316-4.803-1.298-6.757-4.333-3.519-5.466.009-13.858 4.59-15.944 2.277-1.037 3.508.079 5.88-1.131 3.082-1.572 4.399-5.188 5.176-8.425 4.661-19.415.333-42.446.333-42.446-3.239-17.238-8.201-28.224-9.416-30.849-1.83-3.957-4.618-9.903-9.668-16.873-4.534-6.259-8.629-10.221-15.694-17.056-3.276-3.17-6.402-5.981-10.577-8.924-4.624-3.259-6.936-4.889-9.343-5.294-2.286-.385-6.776-.334-19.858 11.662-6.547 6.004-12.214 11.2-18.333 20.111-6.819 9.93-10.122 18.533-12.23 24.131-7.288 19.352-8.175 35.488-8.215 43.536-.016 3.329.032 28.328 8.427 30.653 1.703.472 2.952-.211 5.156.921 3.913 2.009 6.54 7.529 5.417 12.425-.1.435-.642 2.666-2.5 4.75-1.899 2.13-4.068 2.867-6.778 3.75-6.39 2.082-11.713 1.328-12.875 1.146-2.572-.402-4.686-1.119-6.736-1.979-7.612-3.195-12.817-7.736-17.5-11.778a1881.758 1881.758 0 0 0-17.278-14.722v17.375a130.26 130.26 0 0 0 39.445 25.791l10.778-7.667c-11.083 14.951-21.806 25.132-28.944 30-3.057 2.085-8.253 5.628-15.944 7.222a38.707 38.707 0 0 1-5.333.722v14.556c10.272-.515 17.735-3.556 21.951-5.681 9.02-4.546 14.726-10.715 19.216-15.569a90.846 90.846 0 0 0 8-9.972 167.016 167.016 0 0 0-6.833 11.889c-1.18 2.263-1.668 3.324-4.75 9.667-5.782 11.899-5.581 11.283-6.083 12.5-2.527 6.12-3.174 10.942-4.167 18.333a125.784 125.784 0 0 0-.944 23h14.069c-1.219-11.632.4-20.892 1.875-26.667 1.737-6.8 6.784-25.441 24-37.889 5.718-4.134 11.179-6.429 14.944-7.722a50.327 50.327 0 0 0-11.889 13.5 50.276 50.276 0 0 0-6.056 15.278c3.554-4.15 9.134-9.476 17.167-13.5 5.658-2.834 10.443-3.977 12.056-4.333 5.275-1.167 10.128-1 19.833-.667 10.104.347 14.487 1.241 16.389 1.667 3.63.812 6.59 1.789 8.667 2.556l-12.333-15.778a56.675 56.675 0 0 1 6.732 2.925c19.534 10.046 27.764 28.801 29.833 33.992 6.26 15.711 4.943 29.826 3.824 36.638h14.792a68.095 68.095 0 0 0 1.708-16.833c-.441-18.156-8.172-31.497-13.333-40.167-3.424-5.752-8.814-13.574-17-21.667 1.678.526 4.184 1.347 7.188 2.469 4.78 1.786 9.72 3.656 14.729 6.697 3.818 2.319 5.959 4.276 8.167 6.083 4.53 3.709 11.58 8.621 22.25 13.306v-11.431a213.393 213.393 0 0 1-6.333-4.208c-6.833-4.718-9.436-7.106-15.641-11.632-4.021-2.933-6.899-4.828-12.026-8.202a444.392 444.392 0 0 0-15.812-9.938l7.583.938c10.342-6.447 18.108-12.129 23.309-16.163zm-103.527-20.639c-2.487-.08-3.731-.12-4.847-.236-3.565-.371-6.647-.691-9.458-2.542-2.098-1.381-3.575-3.754-6.528-8.5-.656-1.055-1.144-2.009-2.118-3.917-.864-1.691-1.35-2.769-1.583-4.229a10.581 10.581 0 0 1-.132-1.465 37.16 37.16 0 0 0 2.056.639c4.021 1.125 6.003.952 10.549 1.606 3.81.549 5.752.843 7.529 1.813 2.398 1.309 4.022 3.13 4.686 3.887.946 1.077 1.69 2.164 2.833 4.208a72.82 72.82 0 0 1 4.181 8.847c-1.705.003-4.175-.015-7.168-.111zm55.833-2.778c-2.812 1.851-5.893 2.171-9.458 2.542-1.116.116-2.36.156-4.847.236-2.994.096-5.464.114-7.167.111a72.67 72.67 0 0 1 4.181-8.847c1.143-2.044 1.888-3.131 2.833-4.208.664-.756 2.288-2.578 4.686-3.887 1.777-.97 3.718-1.264 7.529-1.813 4.546-.655 6.528-.482 10.549-1.606a37.16 37.16 0 0 0 2.056-.639c-.007.345-.034.856-.132 1.465-.234 1.46-.719 2.538-1.583 4.229-.975 1.908-1.462 2.862-2.118 3.917-2.954 4.746-4.431 7.119-6.529 8.5z"></path><path style="fill:#fff" d="M82.25 190.667a30.715 30.715 0 0 0-5.861-9.444c-1.387-1.521-7.456-8.177-16.389-9.333-12.447-1.612-23.871 8.304-28.542 18.194-3.969 8.403-2.766 16.161-2.514 17.639 1.649 9.681 7.699 15.472 9.611 17.167v-17.167c-.94-4.081-.648-7.363-.333-9.278 1.332-8.097 6.589-13.038 8.556-14.833 1.995-1.822 3.948-3.605 7.111-4.722 7.766-2.743 15.201 1.225 18.111 2.778 4.962 2.647 8.237 6.235 10.25 8.999zm28.861 121.055c1.385 1.101 8.915 6.867 18.737 5.2 11.069-1.878 16.266-11.705 17.601-14.229 3.39-6.409 3.352-12.378 3.329-16.027-.023-3.677-.137-9.739-3.865-15.718-1.455-2.333-3.342-5.268-7.079-6.782-4.132-1.673-8.013-.591-9.333-.222-3.643 1.016-5.919 3.055-6.889 3.944a18.273 18.273 0 0 0-4.556 6.556c1.366-1.192 3.962-3.134 7.722-4.111 1.938-.504 5.096-1.325 7.889-.222 6.772 2.673 6.943 14.89 6.944 15.5.031 11.57-8.781 19.069-9.871 19.966-8.561 7.056-18.492 6.347-20.629 6.145zm115.222-37.639a21.975 21.975 0 0 0-5.167-3.167c-2.559-1.114-6.881-2.995-10.583-1.25-2.348 1.107-3.419 3.187-4.535 5.355-2.983 5.794-2.396 11.535-2.132 13.395 1.06 7.445 5.438 12.184 7.083 13.917 7.792 8.204 18.168 8.901 20.833 9a24.998 24.998 0 0 1-5.542 2.792c-7.628 2.711-14.27.838-15.71.401-1.737-.527-5.977-1.87-9.785-5.697-2.616-2.629-3.825-5.222-4.963-7.662-2.547-5.462-3.023-10.189-3.25-12.667-.199-2.165-.433-4.919.139-8.5.312-1.951.835-5.055 2.75-8.528 1.263-2.291 3.396-6.159 7.879-8.109 3.068-1.334 5.84-1.163 6.95-1.081 9.514.698 15.317 10.546 16.033 11.801zM276.417 169.5c1.97-1.135 5.133-2.629 9.242-3.194 6.53-.899 11.625 1.072 15.119 2.472 2.979 1.194 7.985 3.264 12.5 8.167 8.163 8.864 8.085 19.783 8.056 21.056-.252 11.074-6.635 18.21-8.222 19.889.036-3.128-.009-7.547-.389-12.833-.664-9.233-1.043-13.952-3.344-18.993-1.105-2.421-3.543-7.594-9.142-11.689-5.047-3.691-10.072-4.612-12.37-5.007a31.804 31.804 0 0 0-11.45.132z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-alibi'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var amaru = {
  id: 'amaru',
  name: 'Amaru',
  role: 'Attacker',
  unit: 'APCA',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'pe',
    season: 'Y4S3',
    height: 189,
    weight: 84
  },
  bio: {
    real_name: 'Azucena RocÃ­o Quispe',
    birthplace: 'Cojata, Peru'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#17650b" d="M239.167 73 220 54.5l9.111 18.5H73v204h33.444l-5.611-11.667 5.611 6.611L94.556 239.5l34.667 37.5H277v-20.708l-29.667-59.458L277 227.542V73h-37.833z"></path><path style="fill:#fff" d="m129.222 277-34.667-37.5 11.889 32.444-5.611-6.611L106.444 277h7.139l-7.375-17.958L122.211 277h7.011zM277 227.542l-29.667-30.709L277 256.292v-11.959l-15.125-26.916L277 235.625z"></path><path style="fill:#fff" d="m58.722 121.056 87.167 78.278-20.444-33.667-31.222-64.333h1.667L78.778 80.889l44.111 11 26.667 13.167 17.694 48.569-20.583-12.792 7.458 13.083 17 16.958 2.125-1.083a19.724 19.724 0 0 0-.104-1.354c-.17-1.519-.477-2.64-.615-3.146-.472-1.733-1.606-5.957-3.17-11.597l-6.528-23.444 10.417-62.167V55.75l1.417.583-6.25-20.25L177.834 45l36.167 29 6.5 22.583L207.667 143l-10.417-28.917-4 18.167 13.194 29.722 1.235 2.31c.173.347.511.887 1.029.968.406.064.797-.175 2.11-1.474a49.82 49.82 0 0 0 1.682-1.748l24.167-48.736 2.542-1.583V88.417l22.681 35.806 4.528 27.194-13.167 41.375-7.083-35.375-5.125 6.458-4.357 14.431a269.491 269.491 0 0 0-2.852 12.416c-1.248 6.085-1.162 6.718-2 9.528-1.908 6.402-4.711 11.029-6.279 13.58-1.591 2.589-3.108 4.638-5.888 8.393a215.2 215.2 0 0 1-4.333 5.653 47.606 47.606 0 0 0 .25 15.375 47.604 47.604 0 0 0 5.5 15.125l4.875-3.625 7.181-50.944L257.556 256l-10.431 23.417-38.167 19.25-26.736-26.111-15.722-32.667-38.361-10.222a780.053 780.053 0 0 0-63.583-33.444l-14-19.556 20.222 3.778-13.111-14.667 11.889 4.889-14.333-19.889L68.778 157l-1.667-8.111 3.111 1.667-9.333-20.111 5.778 4.778-7.945-14.167z"></path><path d="m91 88.5 30.792 7.625 24.292 12.208L158.833 143l-25-15.333L150.75 157c7.932 7.819 13.821 13.583 16.396 16.312.613.65 1.952 2.097 3.715 2.076 1.376-.016 2.751-.924 3.667-1.528.578-.382 1.203-.794 1.711-1.374 1.746-1.996 1.265-5.027 1.095-5.904l-9.917-36.917 10.25-61v-6.083l4.417 1.917-4.25-13.583 32.417 25.667L216 96.917l-8.667 31.583-11.167-29.833-7.5 33.833 14.389 32.889c.176.451 1.195 2.946 3.828 3.906.407.148 1.662.588 3.172.26 1.371-.298 2.211-1.068 3.813-2.575.675-.635 1.6-1.584 2.576-2.869l23.389-47.444 3.778-2.667v-10.444l13.889 22.167 4.25 25.361L254.167 175l-5.833-27.417-11 13.833a138.99 138.99 0 0 0-4.667 15c-1.17 4.668-1.257 6.024-2.583 11.5-1.981 8.179-2.971 12.269-4.75 16.333-2.68 6.123-6.064 10.844-10 16.333a142.58 142.58 0 0 1-4.083 5.417 51.75 51.75 0 0 0 .167 19.167 51.706 51.706 0 0 0 6.417 16.611l-7.833 4.667 9.278-1.111 11.389-8.222a43.124 43.124 0 0 1-.039-6.191c.188-2.862.61-4.909.872-6.254.598-3.067.085-1.05 2.25-15.75.375-2.546.891-6.007 1.528-10.139l17.667 37.514-9.278 19.931-34 17-23.667-23-17.417-36.431-37.861-11.069-58-34.278 18.778 2.278-10.889-9.611 5.278 1.944-13.556-20.111 10.556 4.111-1-4.944 4.333 3.056-9.444-20.444 74.778 62.944 9.722 11.778-10-19.778-22.944-38.083L101 105.167l3.333-.333L91 88.5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-amaru'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var aruni = {
  id: 'aruni',
  name: 'Aruni',
  role: 'Defender',
  unit: 'NIGHTHAVEN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'th',
    season: 'Y5S4',
    height: 160,
    weight: 58
  },
  bio: {
    real_name: 'Apha Tawanroong',
    birthplace: 'Ta Phraya District, Thailand'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#d14007" d="M73 73h204v204H73z"></path><path d="m73 73 102 142.222L277 73v176.889a492.933 492.933 0 0 0-61.171 7.797l-33.44 1.647-45.34-.633-18.994-4.311-45.056-4.5L73 73z"></path><path d="M174.778 35.222a725.724 725.724 0 0 0-23.028 69.528l-10.167-9.667-16.667-25.097a126.888 126.888 0 0 0-12.083 21.181C105.372 107.785 102.837 123.056 102 134c-7.748-2.405-19.323-7.12-30.75-16.667A88.056 88.056 0 0 1 56.833 102c-2.314 16.62-1.3 30.288.107 39.726 1.473 9.876 3.649 16.947 4.143 18.524 4.735 15.118 11.871 26.604 17.75 34.417l-40.306-11.875 11.75 35.708 10.444 10.278a79.318 79.318 0 0 0 17.569 10.306 79.296 79.296 0 0 0 20.958 5.667 465.352 465.352 0 0 0 43.583 5.583c16.835 1.355 38.273 3.08 65.333.5 16.755-1.598 39.868-5.246 66.667-14.167a72.228 72.228 0 0 0 10.778-6.141 72.572 72.572 0 0 0 14.5-13.248l14.931-36.965-39.542 11.938a168.12 168.12 0 0 0 8.25-26.083c3.811-16.707 4.178-30.256 4.417-41.167a260.82 260.82 0 0 0-.5-22.889 126.634 126.634 0 0 1-12.75 13.806c-4.974 4.636-8.717 8.074-14.667 11.083a49.028 49.028 0 0 1-10.333 3.833l-5.5.833a56.264 56.264 0 0 0 .843-13.202l-22.621-60.076-10.417 28.167-13.444 13.556a530.247 530.247 0 0 0-8.861-27.111 530.093 530.093 0 0 0-15.137-37.779z"></path><path style="fill:#fff" d="M175 50.556a3123.782 3123.782 0 0 0-19 62c-12.463 42.255-7.76 29.769-10.889 39 0 0-2.393 7.059-7.444 31.222-.258 1.234-.792 3.872-.667 7.333.182 5.004 1.636 8.814 4.111 14.222 4.841 10.579 9.472 18.289 10.778 20.444 2.036 3.36 4.9 7.917 8.556 13.222a254.545 254.545 0 0 1-7.889-31.333c3.252 8.746 8.909 20.166 19 30.889a88.28 88.28 0 0 0 8.333 7.778 16.177 16.177 0 0 0 5.361-1.93c3.602-2.094 5.381-5.091 7.639-9.07 3.932-6.93 5.899-10.395 7.222-13.222 2.856-6.1 6.391-13.76 8.778-24.222.798-3.499 1.27-5.668 1.444-8.111.182-2.538.14-5.449-.889-12.333-1.061-7.099-2.087-11.506-2.087-11.506-4.898-21.047-14.802-55.383-14.802-55.383-5.566-19.296-5.698-19.945-8.222-28.444A2032.345 2032.345 0 0 0 175 50.556z"></path><path style="fill:#fff" d="m134.5 157.917-6.083 20.417v19.083l17.417 40.25-19.833-16-36.833-38.083 13.333 24.083a101.352 101.352 0 0 1-16.654-15.996c-24.009-29.061-25.057-63.891-24.596-78.42 3.42 3.514 8.41 8.203 15 13 4.774 3.475 12.898 9.309 24.5 13.833 11.546 4.502 16.708 3.875 25.179 9.933a47.645 47.645 0 0 1 8.57 7.9zm1.667-8.125 11.708-39.542a68.898 68.898 0 0 1-8.885-8.161c-7.371-8.073-11.467-16.439-13.782-22.547-3.25 6.834-7.899 17.335-11.417 28.625-1.377 4.421-2.375 8.303-3.042 12.917a75.619 75.619 0 0 0-.75 12.792l18.938 9.042 7.23 6.874zm-89.778 40.597 42.278 12.653 6.958 8.042 46.885 32.792-25.622-2.264-11.778-2.389-32-23.611 16.611 19.333a87.943 87.943 0 0 1-14.889-6.778 88.175 88.175 0 0 1-18.042-13.708c-3.466-8.024-6.934-16.047-10.401-24.07zM223.444 77.667a77.256 77.256 0 0 1-8.333 15.167 77.304 77.304 0 0 1-14.389 15.389l11.361 40.722 8.139-8.278 18.222-8.556c.019-1.96-.02-4.673-.278-7.889-.183-2.274-.895-10.027-4.611-22-2.017-6.499-5.152-14.989-10.111-24.555zm-9.583 82.027 5.028 17.694v19.944l-18.722 41.917 21.25-17.5 37.083-38-15.083 27.083c11.512-7.602 18.352-15.893 22.196-21.417 12.188-17.516 14.307-36.036 16.016-50.975a159.488 159.488 0 0 0 .955-23.191 67.166 67.166 0 0 1-10.583 11.25c-2.596 2.189-7.248 6.057-14.141 9.158-2.141.963-6.98 2.426-16.657 5.353-5.668 1.714-7.907 2.315-11.085 4.203-2.781 1.652-4.696 3.349-7.96 6.269a115.892 115.892 0 0 0-8.297 8.212zm-6.694 83.75 47.111-33.111 6.778-7.889L305 188.556l-12.167 25.556a88.15 88.15 0 0 1-33.055 20.333l17.111-19.389-32.056 23.222-12.389 2.833-25.277 2.333z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-aruni'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var ash = {
  id: 'ash',
  name: 'Ash',
  role: 'Attacker',
  unit: 'FBI',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'us',
    season: 'Release',
    height: 170,
    weight: 63
  },
  bio: {
    real_name: 'Eliza Cohen',
    birthplace: 'Jerusalem, Israel'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="m294.42 139.783-15.652 43.768-8.116-51.304-48.406 82.029 37.971-120.87-125.507 42.898 82.609-51.014h-67.246l62.029-23.188-49.935-17.101L45 45v260h260v-72.333l-3.333-46.507-7.247-46.377z"></path><path style="fill:#d75b2a" d="M277 277H73V73h119.101l-15.652 8.522 43.188 1.449-44.348 35.072 84.928-24.638-24.348 86.667 33.913-42.609 7.217 29.565L277 277z"></path><path style="fill:#fff" d="M239.833 45.583 191.417 32.75 201.25 45h-39.083l42.125 18.208-64.903 23.847h72.528L97.111 152.389 252.5 101.722l-42.792 141.403 58.458-96.833L277 208l14-47.778 14 72.444V104l12.333 4.333L305 76.111l-.222 19.444-7.222-1.778-17.111 65-6.799-41.59-30.424 50.59 24.889-81.889-78.667 25.667L250 77.222h-53.889l33.778-12.444-10.778-13.444 20.722-5.751z"></path><path d="M73 277V161.889l24.111-9.5L252.5 101.722 199.444 277H73z"></path><path style="fill:#fff" d="m250.167 194.333-2.584 14.917 10.167-4.917zm13.166 39.417 8 18.75h-19.75zM134.167 98.25l2.916 19.417 15.834-14.5zm40.669 86.01-41.461 40.461-7.464-7.649 41.461-40.46-6.853-7.023-48.56 47.387 21.651 22.187 48.559-47.388zm-81.128 8.615 32.417 4.167-16.958 16.5-22.084-14.292zm17.125 28.042 18.417 19.166-11.917 2.229-9.489-9.489zm25.834 20.805 16.611-16.611 1.222 35.222-6.556 6.334zm64.746-110.289 11.651 39.645 3.203-7.717-9.93-33.789-4.924 1.861zm16.396-6.197 5.921 20.147 3.095-7.455-4.258-14.489-4.758 1.797zm-8.137 3.075 8.764 29.822 3.123-7.524-7.086-24.113c-1.6.606-3.2 1.211-4.801 1.815zm-27.839 10.522L164 156.083l-2.167 10.021 23.219 24.086 10.531-1.856 14.695-14.124-12.201-41.516-16.244 6.139zm52.917-20-8.849 3.344 3.092 10.523c1.92-4.622 3.838-9.244 5.757-13.867z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-ash'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var bandit = {
  id: 'bandit',
  name: 'Bandit',
  role: 'Defender',
  unit: 'GSG9',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'de',
    season: 'Release',
    height: 180,
    weight: 68
  },
  bio: {
    real_name: 'Dominic Brunsmeier',
    birthplace: 'Berlin, Germany'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M305 305H184.56l-6.866-30.319-22.486 21.903-12.792-43L94.842 307.1l-8.315-81.71-41.489 44.042L45 45h260v260z"></path><path style="fill:#fbbb3f" d="M277 277h-60.737l14.154-30.417-37.194 38.083-9.222-37.778-23.667 25.278-13.161-44.853L103 277.01l-8.111-80.177L73 219.802V73h204v204z"></path><path d="m243.667 3.75 65.944 33.528L183.25 238.625 161 186.5l-58 90.51 59.444-181.954 20.778 35.111z"></path><path style="fill:#fff" d="M254.353 9.183 298.15 31.45 184.021 215.895l-19.91-54.34-54.403 101.715 54.375-145.326 19.972 33.611L254.353 9.183z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-bandit'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var blackbeard = {
  id: 'blackbeard',
  name: 'Blackbeard',
  role: 'Attacker',
  unit: 'SEALS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Y1S2',
    height: 180,
    weight: 84
  },
  bio: {
    real_name: 'Craig Jenson',
    birthplace: 'Bellevue, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#bd8833" d="M73 73h204v204H73z"></path><path d="M246.889 91.778a28.808 28.808 0 0 1-2.139-4.528c-.749-2.026-1.087-3.647-1.532-6.141-1.346-7.528-1.069-8.414-1.968-11.526 0 0-.824-2.854-2.75-6.583-2.547-4.933-10.991-17.049-26.583-25.75-14.904-8.317-29.195-9.526-36.917-9.583-7.722.057-22.012 1.266-36.917 9.583C122.491 45.951 114.047 58.067 111.5 63c-1.926 3.729-2.75 6.583-2.75 6.583-.899 3.112-.621 3.997-1.968 11.526-.446 2.494-.784 4.115-1.532 6.141a28.808 28.808 0 0 1-2.139 4.528l-17.153 5.097 5.479 142.146L175 298.406l83.562-59.385 5.479-142.146-17.152-5.097z"></path><path style="fill:#fff" d="M252.222 123.833c-1.34-5.269-3.278-9.055-3.278-9.056-2.879-5.626-4.627-8.758-5.583-10.583-.615-1.173-7.2-13.921-8.236-24.736-.108-1.131-.354-4.308-1.708-8.292a35.273 35.273 0 0 0-2.208-5.083c-.894-1.689-2.914-5.183-7.625-10-5.32-5.439-10.388-8.798-12.417-10.083-3.023-1.915-11.239-6.786-22.998-9.333h-.002c-13.385-2.899-25.77-.167-29 .611 0 0-18.487 4.451-30.597 16.431-2.914 2.883-5.708 6.347-5.708 6.347-1.397 1.733-2.096 2.599-2.861 3.778-2.978 4.589-3.998 9.126-4.833 13-.703 3.26-.386 3.015-1.042 6.333-.358 1.814-1.505 7.215-4.917 15.25-1.772 4.173-1.734 3.355-6.208 12.417-4.879 9.88-6.626 14.359-5.278 18.778.244.8.845 2.678 2.394 3.302 2.616 1.054 6.276-2.14 7.162-2.913 1.261-1.1.978-1.226 2.889-3.056 2.848-2.728 3.96-3.267 4.611-3.5 1.426-.51 2.657-.496 3.507-.487 1.841.021 3.319.453 4.59.922 4.336 1.6 7.98 2.945 11.07 6.731 2.991 3.666 3.768 7.544 4 9.111a19.02 19.02 0 0 1-1.278 10.111l6.75 44.333 5.333-46.25 12.333 4.417 6.25-14.417L174.667 149l7.25-11.167 6.167 14.5 12.208-4.375 5.25 45.653 7.958-43.528c-.817-2.312-1.611-5.662-1.278-9.639.183-2.18.424-5.053 2.333-8 1.713-2.643 4.005-4.167 5.236-4.986 1.269-.844 2.265-1.305 3.736-1.986 2.609-1.208 4.533-2.098 7.139-2.347 1.485-.142 2.92-.279 4.583.292 1.069.366 1.759.862 6.194 5.278 2.049 2.04 2.906 2.933 4.556 3.639 1.031.441 2.385.998 3.75.472 1.775-.684 2.396-2.747 2.639-3.556.606-2.01.25-3.781-.166-5.417zm-98.549-36.827c-8.071 7.856-17.733 9.611-22.895 10.549a53.107 53.107 0 0 1-13.167.722c-.301-1.102-4.948-19.221 6.444-30.333 3.581-3.493 7.647-5.22 10.722-6.111l28.167 10c-2.589 7.998-6.879 12.845-9.271 15.173zm40.119 32.036-19.292-3.708-19.25 3.708c-.31-5.717-.655-25.079 12.794-37.49a35.357 35.357 0 0 1 6.456-4.718 45.145 45.145 0 0 1 2.898 1.996s4.037 3.019 6.977 6.462c4.458 5.221 6.301 11.784 7.333 15.458 1.158 4.12 2.426 10.421 2.084 18.292zm37.666-20.635A55.684 55.684 0 0 1 219.666 98c-5.599-.794-13.724-1.945-21.083-7.917-4.979-4.04-7.911-8.909-9.361-11.361A47.353 47.353 0 0 1 186 72.166l28.958-10.333c2.964 1.056 7.847 3.312 11.847 8.111 9.634 11.556 5.107 27.002 4.653 28.463z"></path><path style="fill:#fff" d="M216.833 208.125c-1.097 4.771-.538 2.051-4.582 18.716-1.442 5.944-2.445 10.13-4.366 15.787a135.342 135.342 0 0 1-3.468 9.122l-5.972-19.028-9.389 29.528-5.889-5.444-8.208 11.806-8.236-11.778-5.785 5.312-9.424-29.688-6.111 19.431a370.087 370.087 0 0 1-2.903-8.806c-2.566-8.123-4.968-16.705-7.667-28.042-3.072-12.905-8.792-38.897-15.542-73.042l-10.375 15a1620.305 1620.305 0 0 0 12.416 38.777 182.511 182.511 0 0 0 6.611 16.5 197.722 197.722 0 0 1 2 7.889c.347 1.498 1.451 6.338 2.722 13.889 1.36 8.079.847 6.993 1.423 9.309 2.725 10.963 10.01 18.326 12.911 21.191a52.653 52.653 0 0 0 7.444 6.111l20.556 12.139 18.889-11.056c3.707-2.492 9.3-6.768 14.165-12.96 4.29-5.46 6.112-9.99 6.53-11.068a41.861 41.861 0 0 0 1.249-3.81c.935-3.467 1.127-6.148 1.185-6.839.242-2.884 1.379-9.405 4.982-24.671.996-2.25 2.436-5.589 4.056-9.681 2.206-5.572 4.039-10.76 7.722-22.25a1363.355 1363.355 0 0 0 7.222-23.25l-10.444-15.222c-5.954 30.457-10.915 53.922-13.722 66.128z"></path><path style="fill:#fff" d="M181.432 163.833c-.091 3.478-2.933 6.271-6.432 6.271s-6.341-2.793-6.432-6.271h-3.984v10.329c-9.456 4.111-16.083 13.646-16.083 24.755 0 14.866 11.864 26.917 26.5 26.917s26.5-12.051 26.5-26.917c0-11.043-6.55-20.528-15.917-24.678v-10.405h-4.152zm13.868 35.111c0 11.211-9.089 20.3-20.3 20.3s-20.3-9.089-20.3-20.3 9.089-20.3 20.3-20.3 20.3 9.089 20.3 20.3z"></path><path style="fill:#fff" d="M158.2 198.944c0 9.278 7.522 16.8 16.8 16.8s16.8-7.522 16.8-16.8-7.522-16.8-16.8-16.8-16.8 7.522-16.8 16.8zm30.1 0c0 7.345-5.955 13.3-13.3 13.3s-13.3-5.955-13.3-13.3c0-7.345 5.955-13.3 13.3-13.3s13.3 5.955 13.3 13.3z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-blackbeard'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var blitz = {
  id: 'blitz',
  name: 'Blitz',
  role: 'Attacker',
  unit: 'GSG9',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 3
  },
  meta: {
    gender: 'm',
    country: 'de',
    season: 'Release',
    height: 175,
    weight: 75
  },
  bio: {
    real_name: 'Elias KÃ¶tz',
    birthplace: 'Bremen, Germany'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#fbbb3f" d="M73 73h204v204H73z"></path><path d="m100 79.667 74.333-10.303 74.444 10.303v169l-74.444 30.94L100 248.667v-169z"></path><path style="fill:#fff" d="M174.333 80.25 111 89.333v152.222l59.959 24.703-1.769-7.371-52.079-21.388V94.306l57.222-7.807 57.222 7.807v143.193l-52.093 21.393-1.771 7.369 59.864-24.707V89.332a740052.09 740052.09 0 0 1-63.222-9.082z"></path><path d="M59 164.556c6.783 1.515 22.01 5.043 36.874 9.703 8.648 2.711 14.265 4.894 17.07 6.019a213.635 213.635 0 0 1 10.833 4.694 256.06 256.06 0 0 1-6.667 11.083c-5.994 9.421-10.961 15.87-17.222 23.944a6112.178 6112.178 0 0 1-25.306 32.417c-3.324 4.221-7.827 9.967-16.833 21.458 0 0-4.668 5.955-16.496 21.768a158.95 158.95 0 0 0-4.816 6.774c-1.208 1.797-2.136 3.26-2.888 4.445-2.255 3.553-3.632 5.925-3.98 6.527-.536.926-.974 1.704-1.28 2.255a171.261 171.261 0 0 0 14.433-9.144c3.515-2.48 6.502-4.872 12.333-9.556 5.484-4.405 6.83-5.622 23.257-19.278a467.125 467.125 0 0 0 4.104-3.438c6.705-5.689 11.438-10.066 12.583-11.118 6.768-6.214 15.924-13.52 27.667-22.889a1101.447 1101.447 0 0 1 31.889-24.5 491.133 491.133 0 0 1 19.833 62.549 330.096 330.096 0 0 1 6.528-24.938c.635-2.092 1.936-6.3 3.75-11.583a348.517 348.517 0 0 1 10.083-25.917c7.568 2.76 26.566 9.875 38.22 16.531 1.47.84 7.93 4.589 15.863 9.386a956.612 956.612 0 0 1 7.062 4.312 374.638 374.638 0 0 1-3.562-5.479c-5.825-9.133-15.241-24.031-23.76-44.044a251.58 251.58 0 0 1-4.377-10.999 149.1 149.1 0 0 1 10.512-3.332c8.192-2.267 14.497-3.254 17.625-3.75 11.253-1.782 25.205-4.132 35.306-5.986a741.83 741.83 0 0 0 37.111-7.792 341.015 341.015 0 0 0-9.111-2.319c-10.05-2.411-20.556-4.184-41.16-7.632-10.174-1.702-15.247-2.55-22.312-3.924a263.562 263.562 0 0 1-23.222-5.555 6.673 6.673 0 0 1-2.972-1.333 6.404 6.404 0 0 1-1-1l2.366-3.516 8.315-11.295L252 108.665c17.001-19.909 30.129-35.294 38.583-45.125 2.072-2.409 5.418-6.292 9.583-11.75 5.76-7.546 10.351-14.518 12.417-17.667a350.11 350.11 0 0 0 3.667-5.708 278.355 278.355 0 0 0-8.489 5.091c-10.838 6.764-18.048 12.298-27.095 19.131-13.293 10.04-6.621 4.798-25.375 18.944-20.588 15.529-21.639 16.583-28.847 21.75-6.749 4.838-17.003 11.926-30.194 20a96.166 96.166 0 0 1-7.667-13.75c-3.128-6.882-4.568-12.223-6.833-20.833a3324.337 3324.337 0 0 1-7.458-28.861 492.245 492.245 0 0 1-19.937 65.965c-35.363-24.323-51.492-36.096-59.438-42.271-1.957-1.521-8.949-7.001-18.854-13.667a331.425 331.425 0 0 0-13.51-8.626 441.777 441.777 0 0 0 19.114 29.599c13.989 19.86 24.774 31.635 37.778 55.111a293.835 293.835 0 0 1 4.056 7.583 127.853 127.853 0 0 1-9 4.639c-7.837 3.656-15.467 6.244-41.222 12.778-3.537.899-8.422 2.126-14.279 3.558z"></path><path style="fill:#fff" d="M80.729 69.625c22.803 31.657 38.895 55.255 42.271 60.764 3.966 6.471 6.312 12.916 6.312 12.917.483 1.327.829 2.41 1.022 3.028a103.064 103.064 0 0 1-5.552 3.219c-4.958 2.673-9.535 4.614-15.367 6.741-11.094 4.046-21.975 7.031-27.526 8.484a200.117 200.117 0 0 1 48.445 17.889l-.687 2.605a130.65 130.65 0 0 1-3.063 5.978c-5.046 9.257-9.857 15.413-14.417 21.333-11.409 14.816 2.427-2.579-15.333 20.25-11.436 14.699-19.166 24.473-24.75 31.583a3000.647 3000.647 0 0 0-24.25 31.306c3.516-2.793 9.051-7.225 15.777-12.772 6.48-5.344 10.149-8.493 29.723-25.2 11.739-10.02 15.463-13.192 21.29-18.034 6.92-5.75 2.012-1.562 16.626-13.466 4.488-3.656 9.257-6.955 13.833-10.5 1.449-1.123 4.331-3.365 8.667-5.333a40.257 40.257 0 0 1 4.667-1.778 107.52 107.52 0 0 1 3.361 6.472c1.256 2.633 4.485 9.678 8.889 26.111a336.784 336.784 0 0 1 3.722 15.319 279.417 279.417 0 0 1 4.056-14.264c2.293-7.316 4.45-14.119 8.278-22.389a137.743 137.743 0 0 1 5.903-11.347 183.628 183.628 0 0 1 14.762 5.019 184.315 184.315 0 0 1 32.155 16.273 388.356 388.356 0 0 1-5.347-9.583c-5.626-10.424-9.564-17.794-12.911-27.566a120.2 120.2 0 0 1-2.95-10.01 53.695 53.695 0 0 1 4.292-2.174c5.399-2.436 9.849-3.361 11.723-3.753 7.911-1.654 15.727-3.804 23.708-5.08 11.216-1.793 24.674-4.106 42.069-7.208a633.062 633.062 0 0 0-32.917-5.375s-16.015-2.175-33.083-6.334a56.487 56.487 0 0 1-10.274-3.533 56.037 56.037 0 0 1-5.56-2.924c.204-.727.527-1.789 1-3.042 1.808-4.787 4.175-8.023 5.333-9.583 8.93-12.027 11.18-14.528 11.181-14.528 6.677-7.42 12.703-15.409 19.361-22.847 7.819-8.735 20.426-23.232 41.167-48.292-20.904 15.354-35.702 26.572-45.583 34.167-7.093 5.452-14.364 10.669-21.509 16.053-7.017 5.286-14.507 9.916-21.634 15.052-1.341.966-4.673 3.381-9.606 5.479a47.236 47.236 0 0 1-5.25 1.875 101.92 101.92 0 0 1-.833-1.375c-1.844-3.094-5.072-8.865-8.875-18.75-4.534-11.786-7.596-23.469-8.764-28.111a269.939 269.939 0 0 1-5.986 20.111c-2.169 6.365-4.162 12.15-7.75 19.5a134.519 134.519 0 0 1-4.597 8.611 35.186 35.186 0 0 1-9.111-3.612c-7.058-3.942-10.404-6.33-10.404-6.33-5.525-3.944-26.84-19.53-55.704-41.046z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-blitz'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var buck = {
  id: 'buck',
  name: 'Buck',
  role: 'Attacker',
  unit: 'JTF-2',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'ca',
    season: 'Y1S1',
    height: 178,
    weight: 84
  },
  bio: {
    real_name: 'SÃ©bastien CÃ´tÃ©',
    birthplace: 'Montreal, Canada'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#00789e" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="m277 235.611-172.729 45.264-58.493 15.042v-2.028l57.44-16.808-26.906-100.413-30.557 7.66-.006-2.161 29.852-8.152a154889.036 154889.036 0 0 1 201.398-54.828v6.938l-35.806 9.153a95.633 95.633 0 0 1 8.681.306c7.4.597 25.083 2.232 42.458 13.875 4.945 3.314 12.114 8.945 18.979 17.948a74.59 74.59 0 0 1-7.201 23.316c-4.798 9.569-10.409 15.557-14.833 20.278-9.306 9.93-17.86 15.147-19.944 16.389a84.78 84.78 0 0 1-7.708 4.069l15.375-.015v4.167z"></path><path d="m81.707 177.537 25.542-6.844 25.332 94.546-25.542 6.843zm209.071-23.315c-17.331-12.116-35.351-13.475-46.412-14.172-8.127-.512-20.398-.391-35.027 3.292l-97.459 26.114 25.334 94.548L237 237c1.634-.485 4.839-1.687 7.667-4.667a17.11 17.11 0 0 0 3.292-5c-7.115 2.807-13.272 3.617-17.458 3.833-3.962.205-7.959.451-12.889-1.056-4.153-1.269-7.125-3.192-8.778-4.278-2.233-1.467-4.339-2.876-6.333-5.438-1.525-1.959-3.468-4.353-3.417-7.229.111-6.231 8.18-9.928 8.625-10.125l34.042-23.292a43.939 43.939 0 0 1 8.174-4.496c2.912-1.216 8.767-3.599 16.451-3.254 2.82.127 5.161.582 6.833 1 .123.851.204 1.785.208 2.792.016 3.416-.844 6.234-1.667 8.188a11.649 11.649 0 0 0 3.167-.604c3.921-1.337 6.019-4.433 6.771-5.688.075.187.19.499.292.896 0 0 .458 1.795-.034 3.914-1.776 7.656-5.723 13.336-5.723 13.336-2.755 3.965-7.11 9.503-13.611 15.444a42.087 42.087 0 0 0 9.833-1.611c8.804-2.545 14.51-7.345 17.667-10.056 2.303-1.978 5.1-4.421 7.833-8.444 2.788-4.104 4.09-7.768 5.194-10.944a59.313 59.313 0 0 0 2.794-11.856c-3.084-3.801-8.025-9.158-15.155-14.143zM257.354 160a12.02 12.02 0 0 1-3.5 1.125l-1.875.062a42.29 42.29 0 0 0-3.507-2.243c-2.37-1.356-6.604-3.472-14.917-5.222-4.6-.969-11.061-1.954-19-2 1.113-.169 2.69-.393 4.583-.611 2.456-.282 9.055-.969 23.028-.556 0 0 6.204.184 15.604 2.215 1.78.385 3.968.909 4.271 2.208.4 1.711-2.642 3.993-4.687 5.022z"></path><path style="fill:#fff" d="M277 109.777 73.682 164.378l-12.905-48.164L214.111 73H247l-41.166 9.944c1.25.097 2.545.275 3.875.556 10.152 2.141 16.905 9.093 20.403 13.5a34.716 34.716 0 0 1-3.736 11.667 34.706 34.706 0 0 1-7.653 9.722l58.278-16.338-.001 7.726z"></path><path d="M219.708 93.542c-.542-.39-2.656-1.885-5.708-3.25-6.912-3.09-13.83-3.363-16.917-3.458a55.601 55.601 0 0 0-13.783 1.31L79.745 115.891l10.296 38.424 101.313-28.303c.577-.198 1.926-.752 2.897-2.137.428-.611.66-1.208.792-1.667a20.48 20.48 0 0 1-4.917 1.208c-2.105.247-3.884.456-6-.292-.146-.052-3.299-1.215-5.167-4.292-.707-1.165-.751-1.816-.75-2.125.009-1.977 1.962-3.286 2.292-3.5l17.833-12.042c1.544-.991 4.703-2.691 8.875-2.667 1.461.009 2.741.227 3.792.5.051.478.074 1.024.042 1.625a10.256 10.256 0 0 1-.625 3 5.15 5.15 0 0 0 1.792-.375c1.407-.574 2.168-1.627 2.458-2.083a10.98 10.98 0 0 1-.167 2.75c-.274 1.446-.825 2.734-1.833 4.333-2.221 3.522-5.393 6.542-6.667 7.708a20.252 20.252 0 0 0 6.472-1.542c6.1-2.58 9.019-7.403 9.722-8.639a20.404 20.404 0 0 0 2.514-7.736 31.147 31.147 0 0 0-5.001-4.497zm-17-1.25c-.791 1.888-2.934 2.538-3.514 2.694a22.184 22.184 0 0 0-11.757-3.788 35.51 35.51 0 0 1 5.743-.781c1.789-.095 4.463-.217 7.792.528a24.6 24.6 0 0 1 1.972.528 3.644 3.644 0 0 1-.236.819zm-136.07 27.4 8.437-2.26 10.295 38.422-8.437 2.26z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-buck'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var capitao = {
  id: 'capitao',
  name: 'CapitÃ£o',
  role: 'Attacker',
  unit: 'BOPE',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'br',
    season: 'Y1S3',
    height: 180,
    weight: 86
  },
  bio: {
    real_name: 'Vincente Souza',
    birthplace: 'Nova Iguacu, Brazil'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#3e7f3f" d="M73 73h204v204H73z"></path><path d="M287 284.083H62.778L174.993 68.271 287 284.083z"></path><path d="M286.111 170.333c-42.17-23.349-81.983-23.533-110.778-23.667-28.082-.13-61.613.082-99.667 17.889C49.974 176.579 31.885 192.1 20.75 203.25l154.583 56.005 153.833-56.005c-8.918-9.132-23.123-21.88-43.055-32.917zm-110.778 61.556L69.722 195.111c16.902-9.409 54.57-27.412 105.611-27.333 50.66.078 88.049 17.928 104.944 27.333l-104.944 36.778z"></path><path style="fill:#fff" d="m166.75 256.389-9.5-3.444v31.139h9.5v-27.695zm16.5 0 9.5-3.444v31.139h-9.5v-27.695zm113-71.222c-4.202-2.889-22.943-15.48-51.238-23.585-20.208-5.788-38.43-7.323-52.751-7.267l-.122 61.129-9.82 3.429v10.584l19.723-7.208v-57.667a169.236 169.236 0 0 1 42.379 6.82c23.411 6.909 40.895 17.602 52.127 25.809L178 240.083V130.349l11.875 3.109-14.542-37.167-15.292 37.167 11.875-3.109v109.734L53.368 197.211c11.233-8.207 28.717-18.899 52.127-25.809a169.289 169.289 0 0 1 42.379-6.82v57.667l19.723 7.208v-10.584l-9.821-3.429-.122-61.129c-14.321-.057-32.543 1.478-52.751 7.267-28.295 8.105-47.036 20.696-51.238 23.585a163.747 163.747 0 0 0-19.167 15.417l140.833 51.167 140.083-51.167a163.506 163.506 0 0 0-19.164-15.417z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-capitao'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var castle = {
  id: 'castle',
  name: 'Castle',
  role: 'Defender',
  unit: 'SWAT',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Release',
    height: 185,
    weight: 86
  },
  bio: {
    real_name: 'Miles Campbell',
    birthplace: 'Sherman Oaks, U.S.A'
  },
  svg: {
    contents: '<style>.st1{fill:#fff}.st2{fill:#d7542b}</style><path style="opacity:.4" d="M45 45h260v260H45z"></path><path d="M246.7 264.8H102.8c-3.3-1.4-11.4-5.3-17.6-14.2-6.6-9.5-7.1-19.2-7.2-22.7V107.4h194v113.5c-.2 5.2-1.3 16.7-9.1 28.3-5.5 8.1-12.1 13-16.2 15.6z"></path><path class="st1" d="M127.6 216.7c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M123.8 219.6c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M119.9 222.6c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.7 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.4 11.8-31.3 11.2-38.7z"></path><path class="st1" d="M175.6 216.7c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M171.8 219.6c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M167.9 222.6c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.7 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.4 11.7-31.3 11.2-38.7z"></path><path class="st1" d="M223.4 216.7c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M219.6 219.6c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M215.7 222.6c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.7 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.4 11.8-31.3 11.2-38.7z"></path><path class="st1" d="M271.1 216.7c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M267.3 219.6c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M263.4 222.6c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.7 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.4 11.8-31.3 11.2-38.7z"></path><path class="st1" d="M152.8 191.1c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M149.1 194c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.5-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M145.2 197c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.5 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M200.5 191.1c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M196.7 194c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M192.9 197c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.5 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M248.7 191.1c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M244.9 194c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M241 197c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.5 11.8-31.4 11.2-38.8z"></path><path class="st1" d="M127.7 167.4c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M124 170.3c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.5-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M120.1 173.3c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.6 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M175.6 167.4c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M171.8 170.3c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.8-37.8 13.1-45.4z"></path><path class="st2" d="M167.9 173.3c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.6 11.8-31.4 11.2-38.8z"></path><path class="st1" d="M223.4 167.4c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M219.7 170.3c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.5-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M215.8 173.3c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.6 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M271.2 167.4c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.6-.4-16.4z"></path><path d="M267.5 170.3c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.5-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M263.6 173.3c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.6 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M153 140.2c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.3-3.9.5-9.5-.4-16.4z"></path><path d="M149.2 143.1c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.6-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M145.3 146.1c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.9-13.5 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M200.6 140.2c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.5-.4-16.4z"></path><path d="M196.9 143.1c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.5-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M193 146.1c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.5 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M248.8 140.2c-8.2-2.9-16.4-5.8-24.6-8.8-8.2 2.9-16.4 5.8-24.6 8.8-1 6.8-.8 12.5-.4 16.4.6 5.9 2.4 22.2 14.9 35.4 3.8 4 7.5 6.6 10.1 8.3 2.6-1.6 6.3-4.3 10.1-8.3 12.5-13.2 14.3-29.4 14.9-35.4.4-3.9.6-9.5-.4-16.4z"></path><path d="M245.1 143.1c-6.9-2.5-13.9-5-20.8-7.5-6.9 2.5-13.9 5-20.8 7.5-.7 7.6-1.5 29.3 13.1 45.4 2.5 2.7 5.1 5 7.7 6.9 2.6-1.9 5.3-4.1 7.7-6.9 14.5-16.1 13.7-37.8 13.1-45.4z"></path><path class="st2" d="M241.2 146.1c-5.6-2-11.3-3.9-16.9-5.9-5.6 2-11.3 3.9-16.9 5.9-.5 7.4-.7 25.2 11.4 38.8 1.8 2 3.7 3.7 5.6 5.2 1.9-1.5 3.8-3.2 5.6-5.2 11.8-13.5 11.7-31.4 11.2-38.8z"></path><path class="st1" d="M217 72.9v31h-12v-31h-60v31h-12v-31H73c1.5 20.1 3.1 40.2 4.6 60.3.2 3.1.1 8 1.9 14.3 4.3 15 15.1 25 23.1 30.9 3.8-2.3 9.2-6.2 14-12.4 7.8-10.1 9.8-20.5 10.5-25.6.6 4.5 2 11.6 6.3 19.2 5.9 10.4 13.9 16.2 18.1 18.9 3.7-2.3 9.8-6.6 15-13.9 5.8-8.1 7.8-16 8.6-20.4.8 4.3 2.7 11.7 7.9 19.3 5.5 8.1 12 12.8 15.8 15.1 3.9-2.4 10.1-7 15.3-14.5 6.9-9.9 8.7-19.7 9.2-24.6.5 4.7 2.1 12.9 7.3 21.6 5.7 9.5 13.1 14.9 17.1 17.5 2.3-1.4 5.5-3.6 8.9-6.8 9.5-9.3 14.9-20.5 15.8-33.9l4.5-64.8c-19.9-.2-39.9-.2-59.9-.2z"></path><path d="M226.1 81.1v31h-29.2v-31h-43v31h-29.1v-31h-43v53.3c.3 6 2 19.1 11.7 30.7 3 3.6 6.2 6.4 9.1 8.4 3.6-2.4 8.5-6.4 12.8-12.7 7.8-11.5 8.3-23.3 8.2-28.1h6.9c.1 5.7 1 20.2 11.5 32.4 3.2 3.7 6.5 6.4 9.5 8.4 3.6-2.5 9.6-7.5 14.4-15.6 6.1-10.5 6.7-20.6 6.7-25.2h5.3c0 4.7.5 15.3 7.2 26.1 4.6 7.5 10.3 12.1 13.9 14.6 3.6-2.6 9.2-7.3 13.7-14.7 6.5-10.8 7.2-21.3 7.2-26.1h7.2c0 4.5.7 12.4 4.8 21.2 4.9 10.6 12.3 16.8 16.1 19.6 4.3-3.1 11.1-8.9 15.6-17.9 3-6.1 4.2-11.9 4.6-13.9.7-3.5 1-6.6 1-8.9V81.1h-43.1z" style="fill:#1e1111"></path><path class="st2" d="M260.8 120.3V89.2h-27v31.1h-45.1V89.2h-27v31.1h-45.2V89.2h-27v31.1c-1.3 4.3-2.6 8.5-3.9 12.8.1 4.7 1 13.5 6.3 22.8 3.4 6 7.5 10.2 10.6 12.8 3.3-2.8 8.7-8.1 12.6-16.5 3.4-7.3 4.3-13.9 4.5-18v-5.3h14.9v7.5c.3 4.5 1.5 12.9 7.1 21.6 3.3 5.1 7 8.6 9.9 10.8 3-2.5 7.3-6.8 10.8-13 4.8-8.5 5.8-16.4 6.1-20.8v-6.1H182c-.1 1.2-.1 3 0 5.3.2 4.7 1.1 18.1 10.6 29 1.3 1.5 3.3 3.6 6.3 5.8 3.5-3 5.9-6 7.5-8.1 7.8-10.7 9-21.7 9.3-26.2.1-2.4.1-4.4 0-5.7h15.4v7.5c.4 4.3 1.6 11.7 6.1 19.6 3.5 6.2 7.7 10.4 10.7 13 3.1-2.7 7.7-7.4 11.3-14.3 4.7-9 5.5-17.4 5.6-22-1.4-4.3-2.7-8.4-4-12.5z"></path>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-castle'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var caveira = {
  id: 'caveira',
  name: 'Caveira',
  role: 'Defender',
  unit: 'BOPE',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'br',
    season: 'Y1S3',
    height: 155,
    weight: 73
  },
  bio: {
    real_name: 'Taina Pereira',
    birthplace: 'RinÃ³polis, Brazil'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#3e7f3f" d="M73 73h204v204H73z"></path><path d="M174.889 275.889 76.25 73h86.083a454.937 454.937 0 0 1 13.145-52.75A501.239 501.239 0 0 1 188.499 73h85.802l-99.412 202.889z"></path><path style="fill:#fff" d="m189.289 78.222 2.116 17.76c2.803 1.317 4.625 2.87 5.788 4.104 1.99 2.112 2.522 3.743 4.974 6.136a22.599 22.599 0 0 0 4.43 3.362l.167-.072-1.673-8.078a2.126 2.126 0 0 1 4.162-.862l1.496 7.22 12.456-5.375-1.948-7.512a2.124 2.124 0 1 1 4.114-1.066l1.782 6.875 22.515-9.715a31.933 31.933 0 0 0 3.095-1.42c2.97-1.559 5.966-3.132 7.794-6.247.578-.985 1.357-2.665 1.556-5.111l-72.824.001zm19.303 40.123-.932-4.498a25.636 25.636 0 0 1-10.698-.798c-.547-.16-.875-.321-1.518-.494a13.54 13.54 0 0 0-3.611-.462v11.559c.325.149.82.339 1.444.431.577.085 1.393.104 3.306-.5a23.2 23.2 0 0 0 3.361-1.361l8.648-3.877z"></path><path style="fill:#fff" d="M230.042 111.862a2.124 2.124 0 1 1-4.114 1.066l-1.556-6.001-12.667 5.494 2.069 9.989a2.126 2.126 0 0 1-4.162.862l-.529-2.501a16.52 16.52 0 0 1-1.146 1.042c-1.005.83-1.932 1.395-2.958 1.958-1.581.868-2.319 1.141-3.562 1.75-.231.113-2.505 1.235-4.458 2.583-1.368.944-3.232 2.45-5.125 4.794v26.34c2.857-1.024 5.851-2.248 10.444-4.127 4.871-1.992 7.334-3.008 8.722-4 4.786-3.419 7.089-8.274 8.25-11.611l15.23-29.728a47.425 47.425 0 0 1 5.575-9.647l-11.737 5.09 1.724 6.647zM88.417 81.708c.615 1.826 1.766 3.144 3.375 4.5 4.268 3.596 10.205 6.149 12.167 6.958l18.003 7.22 1.685-6.808a2.125 2.125 0 0 1 4.125 1.021l-1.827 7.384 12.635 5.067 1.307-6.522a2.124 2.124 0 1 1 4.167.835l-1.462 7.296.743.298a12.365 12.365 0 0 0 1.768-.892c2.281-1.393 3.04-2.893 5.415-5.714 1.684-1.999 2.526-2.999 3.872-4.02a15.986 15.986 0 0 1 5.089-2.557l2.201-17.554H88.001a8.781 8.781 0 0 0 .416 3.488zm69.633 51.632c-1.268-2.168-2.887-3.484-4.237-4.465-3.241-2.355-4.709-2.619-8.188-4.729a46.95 46.95 0 0 1-5.374-3.807l-.612 3.054a2.124 2.124 0 1 1-4.167-.835l2.157-10.765-12.786-5.359-1.605 6.485a2.125 2.125 0 0 1-4.125-1.021l1.764-7.127-11.085-4.646a101.13 101.13 0 0 1 2.805 4.503c.452.769 1.305 2.245 2.361 4.247 1.712 3.246 6.72 13.116 13.375 26.458a99.596 99.596 0 0 1 1.792 3.708c1.419 3.102 1.351 3.38 2 4.667 1.949 3.863 4.973 6.124 6.282 7.081 1.787 1.307 3.322 2.01 4.51 2.544 7.232 3.248 11.008 4.942 16.083 6.542l-.09-24.771a12.989 12.989 0 0 0-.86-1.764z"></path><path style="fill:#fff" d="M158.792 113.083c.032-.291-.041-.463-.097-.556-.613-1.011-3.729-.218-5.514.236-.485.123-.954.301-1.847.528a31.911 31.911 0 0 1-2.144.468c-2.376.43-3.942.713-5.793.303a9.005 9.005 0 0 1-1.769-.593l-.831 4.676c6.96 3.198 12.162 5.388 13.579 5.834.67.211 1.405.323 2.167.125.239-.062.769-.206 1.25-.625 1.063-.925.994-2.411.979-2.646l.062-6.875c-.015-.291-.028-.583-.042-.875zm27.764-.639c-.007-3.099-.024-6.996-.325-12.233-.808-14.042-2.906-24.614-5.176-35.822a410.1 410.1 0 0 0-5.5-23.556 302.054 302.054 0 0 0-10.847 61.541l.375 69.167-5.005 9.475 25.933-10.215c.519-28.747.569-47.726.545-58.357zm-10.223 42.362c-.097 2.851-.25 5.583-.25 5.583-.173 3.094-.38 5.754-.563 7.84a183.552 183.552 0 0 1-.937-15.062c-.737-33.14.059-84.084.059-84.085a164.072 164.072 0 0 1 .885-14.832 140.623 140.623 0 0 1 .999 14.944c.001.001.824 55.756-.193 85.612z"></path><path d="m210.333 161.222-62.167 24.486c-2.716 1.119-8.043 3.815-11.375 9.542-2.032 3.493-2.612 6.894-3 9.167a34.21 34.21 0 0 0-.167 10.375l6.75 62.208h85.014a55.807 55.807 0 0 0 2.667-4.056c3.203-5.366 5.086-10.577 6.222-15l4.597-.639-2.81-16.544c.962.477 2.03.887 3.205 1.176 7.102 1.747 13.421-2.092 15.507-3.493l-15.722-41c2.531-1.108 4.136-2.594 5-3.528.815-.88 3.904-4.218 3.778-8.972 0 0-.048-1.79-.639-3.389-1.692-4.575-8.859-7.74-17.84-8.264l-2.188-3.681c-.557-1.052-3.827-6.988-10.556-8.444-2.547-.551-4.772-.282-6.276.056z"></path><path style="fill:#fff" d="m207.833 168.75-58.604 22.583a15.968 15.968 0 0 0-3.924 2.528c-4.617 4.054-5.509 9.697-5.917 12.278-.324 2.046-.583 5.323.25 9.333l5.972 55.306h39.722c2.034-6.098 4.325-16.385.979-27.653a40.77 40.77 0 0 0-2.007-5.347c-.174-.33-.415-.822-.654-1.44-.336-.87-.504-1.305-.454-1.764.098-.896.881-1.507 1.302-1.781l9.812-5.599c1.516-.93 3.087-.82 3.716-.036.108.134.386.536.319 1.312l-1.434 14.165a20.153 20.153 0 0 0-1.634 4.866c-.318 1.604-.753 3.929-.111 6.778a13.961 13.961 0 0 0 1.722 4.222c2.063-.894 6.491-3.156 9.889-8.056a23.045 23.045 0 0 0 3.611-8.444c2.122-13.794 3.064-24.231 2.667-28.111-.19-1.85-.764-2.99-1.5-3.778-1.484-1.589-3.667-1.789-4.903-1.903-2.497-.229-4.528.474-5.708 1.014l-23.472 9.611c-1.403.614-2.926.338-3.735-.613-.756-.889-.612-2.041-.55-2.387.324-1.819 2.132-2.556 2.26-2.606 8.982-3.769 16.408-6.757 21.914-9.033.974-.403 4.256-1.834 8.639-1.861 2.211-.014 4.434 0 6.778 1.333 2.17 1.235 3.307 2.955 3.944 3.944 2.634 4.088 2.419 8.476 2.222 10.278l-2.778 25.056c-.208 1.476.01 2.594.316 3.41 1.585 4.23 7.918 6.685 15.768 6.063l-11.136-55.331c-.286-1.421-1.322-4.128-3.837-6.03-3.429-2.594-7.936-2.179-10.5-1.694l-43.819 15.306c-1.504.558-3.057.36-3.958-.556a2.663 2.663 0 0 1-.722-1.389c-.205-1.166.421-2.421 1.597-3.243l45.014-15.757c2.737-.958 7.203-1.512 11.722.333 3.481 1.422 5.655 3.872 6.417 4.75 2.855 3.289 3.83 6.761 4.194 8.5l6.611 32.861c.207.578 1.583 4.231 5.611 5.889 4.117 1.694 7.743-.038 8.278-.306l-23.472-59.889c-.331-.81-2.092-4.888-6.769-6.908-4.663-2.016-8.827-.518-9.648-.204zm23.625 9.292 6 15.292a9.776 9.776 0 0 0 1.736-1.083c2.358-1.841 4.97-5.648 3.833-8.694-.731-1.959-2.725-2.836-5.306-3.972a18.786 18.786 0 0 0-6.263-1.543z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-caveira'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var clash = {
  id: 'clash',
  name: 'Clash',
  role: 'Defender',
  unit: 'GSUTR',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'uk',
    season: 'Y3S3',
    height: 179,
    weight: 73
  },
  bio: {
    real_name: 'Morowa Evans',
    birthplace: 'London, England'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path d="M73 73h204v204H73z"></path><path style="fill:#fff" d="M175.5 62.5c-61.856 0-112 50.144-112 112s50.144 112 112 112 112-50.144 112-112-50.144-112-112-112zm0 171.5c-32.861 0-59.5-26.639-59.5-59.5 0-32.861 26.639-59.5 59.5-59.5 32.861 0 59.5 26.639 59.5 59.5 0 32.861-26.639 59.5-59.5 59.5z"></path><path style="fill:#708090" d="M175.5 72.5c-56.333 0-102 45.667-102 102s45.667 102 102 102 102-45.667 102-102-45.667-102-102-102zm0 171.5c-38.384 0-69.5-31.116-69.5-69.5s31.116-69.5 69.5-69.5 69.5 31.116 69.5 69.5-31.116 69.5-69.5 69.5z"></path><path style="fill:#fff" d="M45.211 148.01h260v52.5h-260z"></path><path style="fill:#fff" d="M50.711 153.26h249v42h-249z"></path><path d="M50.711 174.26h20.75v21h-20.75zm20.75-21h20.75v21h-20.75zm20.75 21h20.75v21h-20.75zm20.75-21h20.75v21h-20.75zm20.75 21h20.75v21h-20.75zm20.75-21h20.75v21h-20.75zm20.75 21h20.75v21h-20.75zm20.75-21h20.75v21h-20.75zm20.75 21h20.75v21h-20.75zm20.75-21h20.75v21h-20.75zm20.75 21h20.75v21h-20.75zm20.75-21h20.75v21h-20.75z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-clash'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var doc = {
  id: 'doc',
  name: 'Doc',
  role: 'Defender',
  unit: 'GIGN',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'fr',
    season: 'Release',
    height: 177,
    weight: 79
  },
  bio: {
    real_name: 'Gustave Kateb',
    birthplace: 'Paris, France'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#315978" d="M73 73h204v204H73z"></path><path d="M293.028 136.556h-69.812a61.844 61.844 0 0 0-11.273-11.014l14.084-4.986v-12.611l64.097-14.559-96.625-36.844v41.847l-7.813 2.81a12.422 12.422 0 0 0 1.813-6.459c0-6.904-5.596-12.5-12.5-12.5s-12.5 5.596-12.5 12.5c0 2.367.67 4.572 1.813 6.459l-7.813-2.81V56.542L59.874 93.386l64.097 14.559v12.611l14.084 4.986a61.844 61.844 0 0 0-11.273 11.014h-69.81v76h69.571c7.591 9.705 18.021 17.081 30.054 20.849a1937.576 1937.576 0 0 1 2.819 14.04c2.505 12.72 3.066 16.242 3.444 18.833a218.191 218.191 0 0 1 1.5 12.972l10.639 14.375 10.639-14.375c.255-2.995.702-7.504 1.5-12.972.378-2.591.939-6.114 3.444-18.833.696-3.533 1.65-8.327 2.819-14.04 12.033-3.769 22.463-11.144 30.054-20.849h69.571v-76z"></path><path style="fill:#fff" d="M63.583 142.833h223.5v63.5h-223.5zm105.834 134.111 5.583 7.611 5.25-7.667a488.68 488.68 0 0 1 8-45.111l-26.611-.167a472.588 472.588 0 0 1 7.778 45.334zm.139-170.055 5.444 1.93 5.278-1.93v6.792h-10.722zm17.305-.66v8.083l18.465 7.827 15.223-5.347v-13L272.049 92l-73.334-27.917v37.834zm-23.757 0v8.083l-18.465 7.827-15.222-5.347v-13L77.917 92l73.333-27.917v37.834z"></path><circle style="fill:#fff" cx="174.944" cy="94.528" r="7.361"></circle><circle cx="175" cy="174.708" r="61.5"></circle><path style="fill:#fff" d="M174.917 118.583c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zm0 105.5c-27.338 0-49.5-22.162-49.5-49.5s22.162-49.5 49.5-49.5 49.5 22.162 49.5 49.5-22.162 49.5-49.5 49.5z"></path><path style="fill:#fff" d="M210 165.186h-25.769v-25.769h-18.462v25.769H140v18.462h25.769v25.769h18.462v-25.769H210z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-doc'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var dokkaebi = {
  id: 'dokkaebi',
  name: 'Dokkaebi',
  role: 'Attacker',
  unit: 'SMB',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'sk',
    season: 'Y2S4',
    height: 169,
    weight: 62
  },
  bio: {
    real_name: 'Grace Nam',
    birthplace: 'Seoul, South Korea'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#bdc8c9" d="M73 73h204v204H73z"></path><path d="M99.667 64.917c7.835-6.008 38.113-27.748 81.58-25.352 38.73 2.135 64.464 22.14 72.587 29.018 4.453-2.352 17.284-8.366 33.05-5.224 13.219 2.635 21.172 10.246 28.117 16.89 0 0 18.446 17.651 22.111 42.361.675 4.55 1.881 13.379-2.696 16.587-1.653 1.158-3.503 1.194-4.05 1.185-4.245-.067-6.929-4.007-17.237-15.34-.735-.808-2.044-2.228-4.128-3.585-1.087-.707-3.706-2.373-7.5-2.917-3.484-.499-6.186.202-8.458.792a28.124 28.124 0 0 0-5.708 2.167c2.92 9.336 6.936 26.49 4 47.667-1.102 7.946-3.698 25.251-15.846 43.119-15.439 22.708-36.563 31.997-46.376 36.159-14.051 5.959-25.983 7.641-34.889 8.833-19.918 2.668-35.611.87-42.359-.105-9.343-1.35-22.241-3.316-37.333-10.474-8.742-4.146-26.41-12.789-40.134-32.191C63.493 199.094 60.353 184.342 58.667 176c-5.201-25.732-.277-47.475 3.646-59.729-6.235-1.685-10.548-.313-12.312.396-4.022 1.616-6.764 4.588-10.109 8.214-2.629 2.85-2.161 2.966-4.447 5.341-3.172 3.298-8.213 8.537-12.5 7.222-2.307-.708-3.549-3.054-4.167-4.222-1.629-3.077-1.394-6.202-1.167-8 2.289-18.132 8.611-28.611 8.611-28.611 5.485-9.092 21.447-35.55 49.056-37 9.868-.518 18.289 2.312 24.389 5.306z"></path><path style="fill:#fff" d="M112.917 73c9.081-5.655 32.109-18.307 64-18.042 33.671.28 57.442 14.794 66.194 20.764-.376.201-3.733 2.068-4.333 6.056-.461 3.061.905 6.036 3.222 7.778 2.677 2.013 5.83 1.783 7.708 1.194 1.555-.487 2.271-1.231 4.231-2.889 2.49-2.107 6.518-5.516 10.936-7.819.921-.48 3.519-1.778 7.125-2.708.749-.193 4.995-1.26 9.872-1.072 9.18.353 16.133 4.976 20.453 7.923 6.045 4.124 9.617 8.353 12.731 12.039 7.683 9.095 11.152 17.298 12.278 20.167 2.243 5.716 2.879 9.855 3.111 11.722.318 2.553.361 4.718.333 6.278a17.13 17.13 0 0 1-2.569-1.306c-2.059-1.275-3.318-2.665-3.917-3.319-1.275-1.394-4.579-5.01-6.958-7.181-1.808-1.65-4.06-3.705-7.583-5.25a23.326 23.326 0 0 0-9.694-1.944c-4.697.081-8.083 1.584-10.333 2.611-4.683 2.137-7.968 5.064-10.056 7.333a97.977 97.977 0 0 1 5.042 23.979c.572 7.011 1.887 25.963-7.708 46.818-10.371 22.542-27.418 34.112-34.375 38.703-24.217 15.981-48.387 16.786-62.333 17.25-11.547.384-31.121.823-53.625-8.861-9.796-4.216-30.368-13.068-44.748-35.242-17.43-26.876-14.136-55.385-13.143-63.982a103.865 103.865 0 0 1 5.333-22.889c-1.436-1.705-5.73-6.342-12.986-8.028-1.327-.308-6.587-1.408-12.708.542-4.765 1.518-7.959 4.217-9.625 5.625-3.792 3.205-6.583 6.5-6.583 6.5-.993 1.172-2.623 3.211-5.502 4.873-.745.43-1.391.729-1.831.919A27.572 27.572 0 0 1 24.73 130c-.271-4.05.358-7.811 1.896-12.542 2.569-7.902 6.135-13.785 7.042-15.25 1.354-2.189 4.564-7.113 9.833-12.542 3.793-3.908 8.726-8.901 16.612-12.695 2.767-1.331 6.304-2.994 11.316-3.537 4.891-.53 8.755.27 10.334.655 9.909 2.411 18.355 9.976 19.015 10.577 1.553 1.416 3.023 2.955 5.535 3.458 2.604.522 6.46-.043 8.63-2.984 1.995-2.704 1.414-5.856 1.279-6.585-.588-3.19-2.684-5.043-3.305-5.555z"></path><path style="fill:#bec9ca" d="M145.167 48.444a110.195 110.195 0 0 1 37.888-2.889 260.029 260.029 0 0 0-14.722 8.056c-21.453 12.654-38.738 27.002-52.444 40.667a98.953 98.953 0 0 1 2.889-7.222c1.053-2.36 4.451-9.726 13.722-22.556a243.453 243.453 0 0 1 12.667-16.056zm43.083-2.361a126.415 126.415 0 0 1 30.861 8.083C200.698 64.676 180.82 78.152 161 95.5a353.436 353.436 0 0 0-15.083 14 73.895 73.895 0 0 1 1.275-4.297c2.091-6.339 5.188-12.839 14.146-25.587 1.436-2.044 6.505-9.204 14.516-19.033a405.468 405.468 0 0 1 12.396-14.5zm37.542 11.042a127.867 127.867 0 0 1 23.153 15.153 327.203 327.203 0 0 0-18.056 11.056c-21.119 13.89-38.515 28.838-52.667 43.056a111.876 111.876 0 0 1 4.278-11.333c2.699-6.125 7.393-15.281 22.839-34.398a435.206 435.206 0 0 1 20.453-23.534z"></path><path d="M174.521 213.938c-1.741.103-1.582 1.296-8.354 8.229-3.302 3.381-5.538 5.347-5.03 6.255.337.602 1.692.419 2.794.272 5.639-.753 17.286-1.029 22.278-.111.417.077 1.583.308 1.875-.167.44-.715-1.363-2.567-2.175-3.408-8.615-8.925-8.975-11.214-11.388-11.07z"></path><path d="M117.083 226.542a18.604 18.604 0 0 0 4.417 3.875s2.313 1.449 5.125 2.208c16.354 4.417 49.542 4.5 49.542 4.5s28.413.071 46.25-4.042c4.866-1.122 7.539-3.324 8.625-4.333a16.38 16.38 0 0 0 2.25-2.583 7.98 7.98 0 0 1-.583 3.833c-.957 2.266-2.699 3.404-3.333 3.778.041.285.097.792.056 1.417-.101 1.53-.706 2.639-.889 2.986-2.816 5.331-4.342 11.251-6.653 16.819-.955 2.302-1.174 2.855-1.378 3.385-.552 1.432-1.255 2.813-1.667 4.292-.241.868-.271 1.188-.594 1.396-.819.528-2.275-.47-4.271-1.781-5.387-3.541-4.39-2.587-6.385-4.094-2.111-1.594-3.729-2.815-5.51-4.726-1.498-1.607-3.528-4.148-5.25-7.806a157.296 157.296 0 0 1-44.25.209 28.959 28.959 0 0 1-3.417 5.875c-2.53 3.36-5.25 5.422-7.167 6.875-.459.348.001-.016-4.111 2.819-1.49 1.027-3.222 1.687-4.667 2.778-.432.326-1.146.891-1.847.694-.639-.18-.956-.905-1.083-1.208-1.826-4.339-6.411-19.801-8.583-23.75-.205-.373-.944-1.652-1.375-3.514a12.986 12.986 0 0 1-.333-2.944 7.392 7.392 0 0 1-2.521-3.312 7.348 7.348 0 0 1-.398-3.646z"></path><path style="fill:#fff" d="M129.833 239.583a72.42 72.42 0 0 0 14.75 4.666 35.82 35.82 0 0 1-4.896 9.396 35.813 35.813 0 0 1-6.854 7.104l-3-21.166zm75.306 4.695a67.548 67.548 0 0 0 15.112-4.75l-2.861 22.611a91.751 91.751 0 0 1-3.611-3.778c-2.913-3.226-4.717-5.248-6.306-8.194a27.445 27.445 0 0 1-2.334-5.889zm85.486-49.82c1.447-3.362 7.246-17.861.875-32.958-7.023-16.641-25.964-27.208-46.944-25.389 4.355 1.294 33.755 10.524 43.278 37.722 2.687 7.678 3.124 14.88 2.791 20.625z"></path><path style="fill:#bec9ca" d="M276.389 153.111c.211 2.189 2.224 25.787-9.889 32.056a13.252 13.252 0 0 1-3.667 1.25c1.107 3.238 4.583 14.657-1.083 24.583-8.138 14.257-29.922 16.302-44.583 9.917-20.765-9.044-23.791-33.497-23.917-34.667.376-3.202 1.328-7.923 4-12.917 8.568-16.011 26.785-19.804 27.806-20 12.73-2.445 29.916 1.117 33.778 1.917 1.604.332 6.488 1.415 12.278-.083a24.274 24.274 0 0 0 5.277-2.056z"></path><path d="m216.889 173.222 41-3.889c.411-.349 1.303-1.004 2.528-1.083 0 0 1.375-.089 2.833.875 2.667 1.763 5.931 10.728 3.667 21.292-1.448 6.754-4.504 11.118-5.167 12.042-2.099 2.923-6.148 7.457-12.708 10.208-10.683 4.48-20.378 1.024-22.208.333-.935-.353-12.252-4.828-17.25-16.667-1.933-4.579-2.179-8.503-2.389-11.861 0 0-.374-5.974 1.806-10.917.255-.579.706-1.449 1.639-2.028 1.243-.772 2.593-.564 2.972-.5 1.988.336 3.063 1.875 3.277 2.195z"></path><path style="fill:#fff" d="m216.417 178.5 42.417-.75c.564 1.109 5.297 10.818.333 20.917-4.088 8.317-12.571 12.46-20.083 12.75-12.456.481-23.904-9.566-25.167-20.75-.589-5.218 1.161-9.599 2.5-12.167zM59 194.25c-.213-6.967.697-16.42 5.667-25.833 10.364-19.629 34.094-30.962 60.833-30.083-5.052-1.876-21.108-7.089-39.167-.5-5.988 2.185-20.945 7.643-27.75 23.417-6.659 15.435-.864 29.976.417 32.999z"></path><path style="fill:#bec9ca" d="M74.583 153.083c-.774 7.052.134 12.684.972 16.194.978 4.095 2.14 8.625 5.833 13.111 2.604 3.164 5.472 5.088 7.444 6.194-.545 1.686-4.011 13.048 2.667 23.5 7.094 11.104 19.886 12.182 22.667 12.417 9.461.798 16.585-2.927 19.5-4.5 12.712-6.861 26.409-23.413 22.417-39.833-2.992-12.307-14.824-20.025-16.361-21-.618-.392-3.102-1.941-6.667-3.389-2.163-.878-9.045-3.475-19.222-3.333-7.168.1-14.458 1.536-21.889 3-2.26.445-6.411 1.31-11.444.056a22.634 22.634 0 0 1-5.917-2.417z"></path><path d="m136.444 173.556-42.222-4.111c-.405-.205-1.462-.67-2.778-.444-1.802.309-2.78 1.69-3 2-.412.582-.384.814-1.167 3-.51 1.423-.705 1.837-.944 2.5-.905 2.508-1.115 4.932-1.222 6.167-.024.273-.365 4.53.611 9.056 2.301 10.663 10 17.278 10 17.278 7.597 6.527 18.904 9.174 29.444 5.722 13.661-4.473 18.919-16.859 20.5-22.611 0 0 2.669-9.709-1.208-18.236-.214-.471-.737-1.582-1.917-2.25-1.726-.978-3.594-.294-3.708-.25-1.541.59-2.226 1.857-2.389 2.179z"></path><path style="fill:#fff" d="M94.667 177.889h41.667c1.068 2.214 3.524 8.09 1.889 15-2.279 9.631-11.642 17.614-22.722 17.5-11.432-.118-20.355-8.811-22.444-18.333-1.407-6.407.58-11.828 1.61-14.167z"></path><path d="M291.611 158.222c-3.626-6.882-8.669-10.954-12.167-13.778-2.228-1.799-10.63-8.301-23.611-11.361-3.036-.716-16.455-3.632-32.917 1.25-6.041 1.792-28.912 8.574-35.917 27.917a34.25 34.25 0 0 0-1.944 9.25h-20.611c-.094-2.999-.632-7.638-3-12.611-3.115-6.541-7.735-10.168-12.444-13.778-7.881-6.042-15.403-8.906-19-10.111-4.989-1.672-20.096-6.507-38.222-1.444-3.767 1.052-13.025 4.028-22.222 11.556-4.19 3.429-10.736 8.786-13.472 17.222-1.22 3.762-1.738 8.305-1.778 8.667 0 0-.554 5.027-.028 10.278 2.767 27.582 24.944 40.833 24.944 40.833 13.646 8.154 27.268 6.974 34.667 6.333 7.481-.648 30.061-2.603 43.028-21.153 7.389-10.569 8.33-21.769 8.417-27.125h19.278c-.121 3.823.161 10.092 2.833 17.167.723 1.914 4.174 10.647 13 18.333 8.507 7.409 17.235 9.688 23.111 11.222 3.357.877 14.398 3.48 28.5 1.222 4.089-.655 8.933-1.43 14.389-3.889 21.213-9.558 27.356-33.593 27.667-34.889 1.117-4.668 4.341-18.126-2.501-31.111zM151.25 200.5c-7.465 15.097-22.578 20.052-27.25 21.583-7.048 2.31-13.151 2.52-17.417 2.667-6.583.226-13.05.448-20.25-2.083-16.836-5.92-24.158-22.142-25.417-25.083-3.306-7.723-3.76-14.844-3.917-17.667-.223-4.025-.449-8.099.833-12.75 3.068-11.125 12.481-17.251 16.833-20.083 10.192-6.633 20.112-7.555 24.583-7.917 13.869-1.123 24.929 3.024 31.167 6.167 5.991 3.018 15.238 7.676 20.583 18.083 3.079 5.996 3.635 11.508 3.917 14.583.334 3.628 1.094 12.875-3.665 22.5zm141.139-16.111c-.601 4.299-2.589 17.191-13.167 27.889-3.888 3.932-7.522 6.137-8.611 6.778-9.277 5.454-18.19 5.687-24.694 5.778-5.968.083-16.282.227-27.583-5.583-4.62-2.375-14.137-7.268-19.778-18.139-7.945-15.312-4.157-34.695 5.333-44.944 5.262-5.682 13.693-10.086 14.389-10.444a59.762 59.762 0 0 1 10.278-4.111c5.035-1.492 19.02-5.429 35-.056 8.093 2.721 13.441 6.736 16.333 8.944 4.013 3.065 7.257 5.6 9.653 10.208 2.05 3.945 2.518 7.561 2.958 10.958.278 2.143.722 6.765-.111 12.722z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-dokkaebi'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var echo = {
  id: 'echo',
  name: 'Echo',
  role: 'Defender',
  unit: 'SAT',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 3
  },
  meta: {
    gender: 'm',
    country: 'jp',
    season: 'Y1S4',
    height: 180,
    weight: 72
  },
  bio: {
    real_name: 'Masaru Enatsu',
    birthplace: 'Suginami, Japan'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45v173.696l28-18.183 55.615-36.117h92.77L277 200.513l28 18.183V45H45z"></path><path style="fill:#942838" d="M73 73v127.513l55.615-36.117c-2.324 4.703-3.615 9.835-3.615 15.216 0 22.512 22.386 40.762 50 40.762s50-18.25 50-40.762c0-5.381-1.291-10.513-3.615-15.216L277 200.513V73H73z"></path><path d="m241.81 206.77-4.957 4.936c-6.018 5.992-28.262 25.544-61.852 25.544-33.59 0-55.835-19.552-61.852-25.544l-4.957-4.937-4.939 4.955-4.514 4.528-4.514 4.528-4.929 4.944 4.93 4.942c4.892 4.904 13.207 12.143 25.035 18.778 17.431 9.778 36.184 14.737 55.74 14.737s38.309-4.958 55.74-14.737c11.828-6.636 20.143-13.874 25.035-18.778l4.93-4.942-4.929-4.944-4.514-4.528-4.514-4.528-4.939-4.954z"></path><path style="fill:#942838" d="M99.181 225.722c5.022 5.034 32.384 31.458 75.819 31.458s70.798-26.425 75.819-31.458l-9.028-9.056C237.3 221.139 213.189 244.25 175 244.25s-62.3-23.111-66.792-27.584l-9.027 9.056z"></path><path d="m264.792 229.063-5.018 4.986c-8.233 8.18-38.657 34.869-84.499 34.869h-.26c-45.469-.099-75.739-26.483-83.933-34.566l-4.889-4.823-4.916 4.796-9.111 8.889-5.071 4.948 5.008 5.011c6.247 6.25 16.848 15.475 31.876 23.928 22.038 12.395 45.749 18.763 70.473 18.926.317.002.644.003.959.003 24.97 0 48.946-6.343 71.262-18.852 15.121-8.476 25.745-17.701 31.995-23.946l4.886-4.882-4.817-4.95-9.014-9.264-4.931-5.073z"></path><path style="fill:#942838" d="M264.708 239.014c-6.034 5.995-38.464 37.014-89.708 36.903-50.598-.11-82.657-30.49-88.833-36.583l-9.111 8.889c6.693 6.697 41.776 40.436 97.444 40.802 56.796.374 92.739-34.268 99.222-40.747l-9.014-9.264z"></path><path d="m287.513 251.595-5.008 4.986c-10.412 10.368-48.898 44.197-106.951 44.197l-.53-.001c-57.764-.202-96.058-33.88-106.418-44.196l-4.938-4.918-4.939 4.917-4.556 4.535-4.556 4.535-4.967 4.944 4.951 4.961c7.609 7.625 20.539 18.883 38.929 29.214 27.04 15.191 56.127 22.932 86.453 23.008l.448.001c30.451 0 59.67-7.734 86.846-22.988 18.434-10.347 31.375-21.609 38.985-29.235l4.882-4.893-4.83-4.944-8.861-9.069-4.94-5.054z"></path><path style="fill:#fff" d="M54.556 270.611c8.083 8.1 51.509 49.993 120.444 50.167 69.49.175 113.328-42.172 121.306-50.167l-8.861-9.069c-7.482 7.45-48.151 46.461-112.444 46.236-63.579-.223-103.717-38.652-111.333-46.236l-9.112 9.069z"></path><path d="M218.4 35.892a19.866 19.866 0 0 0-14.142 5.858l-8.387 8.387a21.96 21.96 0 0 0-8.426-1.665h-24.278c-2.916 0-5.74.565-8.347 1.633l-8.356-8.356a19.87 19.87 0 0 0-14.142-5.858 19.866 19.866 0 0 0-14.142 5.858L89.072 70.858A19.87 19.87 0 0 0 83.214 85c0 5.342 2.08 10.365 5.858 14.142l8.323 8.323a21.007 21.007 0 0 0-1.326 7.368v25.833c0 2.689.524 5.323 1.503 7.769l-8.5 8.5c-7.798 7.798-7.798 20.486 0 28.284l29.108 29.108a19.872 19.872 0 0 0 14.142 5.858c5.342 0 10.365-2.08 14.142-5.858l8.261-8.261a21.979 21.979 0 0 0 8.135 1.551h24.278a21.9 21.9 0 0 0 8.629-1.78l8.49 8.49a19.868 19.868 0 0 0 14.142 5.858c5.342 0 10.365-2.08 14.142-5.858l29.108-29.108c7.798-7.798 7.798-20.486 0-28.284l-8.419-8.419a20.912 20.912 0 0 0 1.533-7.85v-25.833c0-2.592-.468-5.107-1.355-7.45l8.241-8.241A19.866 19.866 0 0 0 267.507 85c0-5.342-2.08-10.365-5.858-14.142L232.542 41.75a19.87 19.87 0 0 0-14.142-5.858z"></path><path style="fill:#fff" d="M240.169 149.597c2.778-1.997 4.594-5.248 4.594-8.93v-25.833c0-3.534-1.674-6.671-4.264-8.683l14.079-14.079c3.905-3.905 3.905-10.237 0-14.142L225.47 48.822c-3.905-3.905-10.237-3.905-14.142 0l-14.365 14.365c-2.193-2.861-5.636-4.714-9.519-4.714h-24.278c-3.855 0-7.276 1.825-9.472 4.65l-14.301-14.301c-3.905-3.905-10.237-3.905-14.142 0L96.143 77.929c-3.905 3.905-3.905 10.237 0 14.142l14.126 14.126a10.97 10.97 0 0 0-4.2 8.636v25.833c0 3.654 1.789 6.882 4.531 8.883l-14.457 14.457c-3.905 3.905-3.905 10.237 0 14.142l29.108 29.108c3.905 3.905 10.237 3.905 14.142 0l14.121-14.121a11.973 11.973 0 0 0 9.346 4.483h24.278c3.965 0 7.47-1.931 9.655-4.896l14.535 14.535c3.905 3.905 10.237 3.905 14.142 0l29.108-29.108c3.905-3.905 3.905-10.237 0-14.142l-14.409-14.41z"></path><path d="M159 112h32v32h-32zm-26.677-17.681c-5.247 0-9.5-4.253-9.5-9.5s4.253-9.5 9.5-9.5a9.5 9.5 0 0 1 9.317 11.349l9.498 10.382a22.335 22.335 0 0 0 3.629-12.231c0-12.396-10.049-22.444-22.444-22.444-12.396 0-22.444 10.049-22.444 22.444 0 12.396 10.049 22.444 22.444 22.444 4.458 0 8.608-1.305 12.101-3.546l-10.375-9.563a9.439 9.439 0 0 1-1.726.165zm76.68-9.5c0-5.247 4.253-9.5 9.5-9.5s9.5 4.253 9.5 9.5a9.5 9.5 0 0 1-11.349 9.317l-10.382 9.498a22.335 22.335 0 0 0 12.231 3.629c12.396 0 22.444-10.049 22.444-22.444 0-12.396-10.049-22.444-22.444-22.444-12.396 0-22.444 10.049-22.444 22.444 0 4.458 1.305 8.608 3.546 12.101l9.563-10.375a9.52 9.52 0 0 1-.165-1.726zm-76.68 76.931c-5.247 0-9.5 4.253-9.5 9.5s4.253 9.5 9.5 9.5a9.5 9.5 0 0 0 9.317-11.349l9.498-10.382a22.335 22.335 0 0 1 3.629 12.231c0 12.396-10.049 22.444-22.444 22.444-12.396 0-22.444-10.049-22.444-22.444 0-12.396 10.049-22.444 22.444-22.444 4.458 0 8.608 1.305 12.101 3.546l-10.375 9.563a9.439 9.439 0 0 0-1.726-.165zm76.68 9.5c0 5.247 4.253 9.5 9.5 9.5s9.5-4.253 9.5-9.5a9.5 9.5 0 0 0-11.349-9.317l-10.382-9.498a22.335 22.335 0 0 1 12.231-3.629c12.396 0 22.444 10.049 22.444 22.444 0 12.396-10.049 22.444-22.444 22.444-12.396 0-22.444-10.049-22.444-22.444 0-4.458 1.305-8.608 3.546-12.101l9.563 10.375a9.528 9.528 0 0 0-.165 1.726z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-echo'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var ela = {
  id: 'ela',
  name: 'Ela',
  role: 'Defender',
  unit: 'GROM',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'pl',
    season: 'Y2S4',
    height: 173,
    weight: 68
  },
  bio: {
    real_name: 'Elzbieta Bosak',
    birthplace: 'Wroclaw, Poland'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#228f90" d="M73 73h204v204H73z"></path><path d="M275.833 227.833 248.3 198.052a103.11 103.11 0 0 0 2.45-2.719c2.009-2.315 7.922-9.353 13.503-20.191l17.414 4.135-13.41-12.836c4.194-10.293 7.481-22.946 7.577-37.497.133-20.116-5.883-35.109-8.336-40.647-.891-2.012-3.953-8.696-9.763-16.858l14.515-20.023-22.751 9.832c-6.479-7.08-14.87-14.301-25.499-20.027-4.15-2.236-8.506-4.157-13.003-5.776l-.538-13.488-8.572 10.689c-31.808-8.178-68.927-1.589-95.331 22.63a93.935 93.935 0 0 0-6.284 6.359l-15.251-6.137 10.627 11.673c-14.961 19.399-19.305 40.633-20.556 52.667l-39.787 7.896 39.747 10.718c1.443 14.77 6.027 27.112 10.902 36.533l-12.37 12.554 17.071-4.382c3.421 5.375 6.519 9.166 8.234 11.173.89 1.041 6.08 6.925 14.845 13.647l-33.067 42.707 41.021-37.102c7.591 4.899 16.897 9.666 27.659 12.866-1.802.182-3.613.356-5.441.513A364.969 364.969 0 0 1 117 228.274a8.11 8.11 0 0 0-8.111 8.111c0 3.68 2.453 6.783 5.811 7.775l-.001.005a484.404 484.404 0 0 0 62.217 12.831 484.607 484.607 0 0 0 21.964 2.531c-1.174.303-2.303.585-3.381.844-22.979 5.541-52.242 8.643-58.333 8.792-.875.021-4.512.06-9.217 1.03a50.079 50.079 0 0 0-3.176.763l-.001.017c-1.774.469-3.088 2.07-3.088 3.991a4.134 4.134 0 0 0 2.667 3.86l-.001.011a192.07 192.07 0 0 0 13.023 4.494c13.666 4.173 24.821 5.722 39.681 7.833 8.46 1.202 12.69 1.803 16.194 1.972 2.285.11 12.091.511 16.937 1.287-12.587 3.671-22.31 6.507-34.146 9.157-16.812 3.764-30.688 5.54-37.287 6.369-1.832.23-3.361.41-4.435.534-.939.297-1.397.533-1.375.708.016.129.294.226.834.289 1.017.119 2.004.475 3.027.53 2.896.158 5.746.81 8.633 1.095 3.693.364 7.372.863 11.062 1.266 13.219 1.444 31.695 6.431 31.729 6.292.037-.15-21.329-5.251-31.021-7.167-5.359-1.059-11.327-1.971-12.75-1.932-.012 0-1.009.027-2.292-.22-.152-.029-1.137-.219-1.125-.333.016-.153 1.826-.08 2.125-.069 4.211.146 14.235-1.598 14.472-1.639 19.067-3.317 20.769-3.236 31.568-5.584a417.347 417.347 0 0 0 23.415-5.807 23.545 23.545 0 0 0 6.221-2.086 2.719 2.719 0 0 0 2.469-2.702 2.725 2.725 0 0 0-2.237-2.679l.008-.049-25.74-3.141a757.09 757.09 0 0 1-7.825-1.142c-15.036-2.273-23.033-3.506-33.574-6.227a221.513 221.513 0 0 1-10.481-2.984c12.002-1.435 20.747-1.893 22.759-2.016 9.47-.576 27.724-3.375 66.488-13.469a6.37 6.37 0 0 0 0-12.74 351.42 351.42 0 0 1-44.793-3.431 351.298 351.298 0 0 1-23.461-4.136c3.447-.416 6.923-.86 10.461-1.364a497.483 497.483 0 0 0 64.024-13.466c.04-.012.081-.021.121-.033l.019-.005-.001-.001c3.931-1.242 6.782-4.916 6.782-9.258 0-4.113-2.562-7.621-6.174-9.035a107.678 107.678 0 0 0 4.72-4.072c11.144 7.99 22.286 15.975 33.428 23.959z"></path><path style="fill:#fff" d="M90.194 163.806 99.916 175l-5.222-13.806-4.5 2.612zm15.639 11.458a466.37 466.37 0 0 0 15.944 26.764l-12.111-10.111a81.862 81.862 0 0 1-2.528-9 82.06 82.06 0 0 1-1.305-7.653zm2.209-6.097a94.914 94.914 0 0 0 17.375 2.148l2.75 23.103a38.817 38.817 0 0 1-3.375-2.875c-1.144-1.093-2.349-2.377-4.292-4.833a103.649 103.649 0 0 1-5.614-7.829l-6.844-9.714zm25.583 2.147h2.458a432.37 432.37 0 0 0 18.708 45.436l-13.083-3.875a388.984 388.984 0 0 1-8.083-41.561zm10.583-.314a112.284 112.284 0 0 0 17.833-.834l-3.958 31.625A689.985 689.985 0 0 1 144.208 171zm24.688 4.021-3.021 43.562 15.681.028a1034.823 1034.823 0 0 1-12.66-43.59zM186 207.222h1.611a209.321 209.321 0 0 0 5.014-8.972c3.059-5.805 6.233-11.887 9-20.042a105.376 105.376 0 0 0 2.208-7.375l-29.5-.944L186 207.222zm3.667 10.611a112.725 112.725 0 0 0 25.777-8.055 94.711 94.711 0 0 0-.139-12.167 95.175 95.175 0 0 0-4.097-21.278 192.562 192.562 0 0 1-21.541 41.5zm29.25-46.519 13.75-.342a146.908 146.908 0 0 1-9.027 21.25l-4.723-20.908zm19.305-1.036 5.111-1 2.278 15.833a176.039 176.039 0 0 1-19.819 19.723 179.998 179.998 0 0 0 12.43-34.556zm22.57-45.361-15-3.958a29.194 29.194 0 0 1-6.375 11.521 29.162 29.162 0 0 1-9.821 7.111l.737 10.076-4.889-8.583a30.875 30.875 0 0 1-15.722-.416l-6.833 14.583 1.611-16.944a29.26 29.26 0 0 1-5.333-4.278c-5.073-5.157-7.027-11.013-7.833-14.319a131 131 0 0 0 6.542-2.125c5.976-2.115 10.056-4.047 13-5.375 3.938-1.776 9.634-4.183 17-6.75l3.417-13.25-.042 12.167c3.253-.851 5.948-1.013 7.792-1 2.5.018 3.717.358 4.708 1.125.472.365 1.132 1.011 1.792 2.5 1.441 3.251 1.174 6.657.833 8.667l14.417 2.417c-.393-6.424-2.799-34.048-25.875-56.5-4.703-4.576-24.663-22.947-56.083-24.25-4.134-.171-36.89-.996-63 24.083-12.431 11.94-18.436 25.027-21.292 32.792l11.917 10.5a8.827 8.827 0 0 1 2.243-1.165c1.898-.657 3.554-.479 4.882-.294 4.092.57 7.949 1.612 9.875 2.167l-1.667-16.083 10.042 19.556c6.215 2.176 10.728 4.171 13.778 5.639 1.582.761 4.951 2.43 9.75 4 1.69.553 3.104.945 4.056 1.194-.669 2.655-2.972 10.329-10.347 16.142-4.937 3.891-9.977 5.24-12.736 5.761l-3.917 8.125.083-8a27.91 27.91 0 0 1-8.972-1.278c-7.32-2.312-11.752-7.091-13.639-9.417L99 133.611l7.333-8.5a28.994 28.994 0 0 1-2.042-7.153 28.998 28.998 0 0 1-.069-8.125l-11.944-8.556c-2.124 8.688-2.598 16.039-2.611 21.222-.025 9.76.087 19.874 6.807 27.719.651.76 2.12 2.381 4.36 4.031 5.008 3.691 10.547 5.079 20.083 5.833 10.184.806 17.927.336 18.586.296 0 0 18.705-1.134 36.053-1.212 23.067-.105 41.444 1.167 41.444 1.167.711.049 7.018.487 15.273-.353 10.795-1.099 15.437-3.419 18.124-5.113a30.27 30.27 0 0 0 6.352-5.367 72.466 72.466 0 0 0 4.043-24.583zm-85.459-28.834c-10.33.039-18.146-4.767-24.083-8.417a62.887 62.887 0 0 1-11.417-9c5.425 3.17 18.194 9.656 35.667 9.583 17.135-.071 29.657-6.412 35.083-9.583a66.134 66.134 0 0 1-10.444 8.25c-6.455 4.115-14.319 9.128-24.806 9.167z"></path><path style="fill:#fff" d="M119.167 118.333c-.307 5.981 4.592 10.958 10.333 10.833 5.58-.121 10.192-5.023 9.889-10.833h-20.222zm92.062-.006c-.307 5.981 4.592 10.958 10.333 10.833 5.58-.121 10.192-5.023 9.889-10.833h-20.222z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-ela'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var finka = {
  id: 'finka',
  name: 'Finka',
  role: 'Attacker',
  unit: 'CBRN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'ru',
    season: 'Y3S1',
    height: 171,
    weight: 68
  },
  bio: {
    real_name: 'Lera Melnikova',
    birthplace: 'Gomel, Belarus'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#fead33" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="m157.292 21.792 19.958 9.083 3.458 10.792 20.597-1.5 8.25 12.111 19.333 2.556 7.132 17.729 15.688 3.938 12.083 15.875-6.417 9.125 11.583 4 8.792 15.944-6.354 9.16v32.438L197.417 277H93.167L118 232.917l-5.004 6.593 27.671-47.343-21.778-43.278-4.556-61.722 33.722-38.889 9.237-26.486z"></path><path d="m160.25 29.25 12.75 5.5 2.75 8.667-25.667 37.667L156 98.833l16.333 3.667 13.333 38a129.318 129.318 0 0 0-1.083 11.333c-.283 5.566-.07 8.596-.167 17.583a485.66 485.66 0 0 1-.167 8.583 330.8 330.8 0 0 1 1.75-8.5c1.356-6.176 2.204-9.198 2.917-12.333.916-4.028 1.966-9.809 2.417-17.167l-7.25-20.5 15.667 5 9.333 15.333 16 2.75 8.167 10.583 17.333 7.333 16.5-23.75-.667 25-52.528 89-16.472 26.25h-17.667l61.125-111.125-75.458 96 15-50.75L110.979 277H89.611L118 232.917l28.833-40.333-22.5-44.917L120 88.889l32.792-37.91 7.458-21.729z"></path><path d="m179.542 47.125 19-1.5 6.083 9.125-29.958 42.708-14.584-2.791-4.208-12.709zm29.708 10.542 15.792 2.042L231 74.583l-30.417 44.333-14-4.167-8.302-12.948 30.969-44.134zm26.111 20.194 13.222 3.25 8.5 11.25-31.611 44.611-13.111-1.916-7.472-12.889zm18.667 28.083L265 109.833l6.417 11.361-22.889 32.75-11.278-4.548-7.25-9.507zm-96.695 142.973-35.812 63.812-9.042-6.125z"></path><path style="fill:#fff" d="M45 264.333v13.834l43-60.5zm79.667-60.25L57.417 305H45v-5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-finka'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var flores = {
  id: 'flores',
  name: 'Flores',
  role: 'Attacker',
  unit: 'UNAFFILIATED',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'ar',
    season: 'Y6S1',
    height: 181,
    weight: 72
  },
  bio: {
    real_name: 'Santiago Miguel Lucero',
    birthplace: 'Buenos Aires, Argentina'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#860c04" d="M73 73h204v204H73z"></path><path d="M171.875 73a53.548 53.548 0 0 0-14.018-6.96c-7.356-2.384-13.082-2.457-19.524-2.54-1.505-.019-2.98.02-4.77.417-3.197.71-5.774 2.203-7.175 3.027a30.83 30.83 0 0 0-1.833 1.167L63.5 111.889c-6.898 4.403-11.26 5.498-14.056 5.583-.483.015-2.2.038-4.389.583-3.593.895-5.661 2.498-6.083 2.833-.822.654-1.317 1.204-2.306 2.305a40.76 40.76 0 0 0-3.679 4.753 91.852 91.852 0 0 1 9.763-1.072c6.495-.365 11.84-.616 17.972 1.486 3.092 1.06 8.444 2.976 9.796 7.419.264.869.316 1.638.315 2.164v100.444c.108.745.178 2.025-.458 3.278-.757 1.49-2.135 2.195-2.958 2.583-2.804 1.323-9.84 4.015-19.306 7.194l-5.556 14.389a558.419 558.419 0 0 1 30.444-2.49v13.656h26.472c.204.976.521 2.304 1.014 3.847.176.55.841 2.617 1.75 4.5.789 1.635 4.219 8.743 8.875 8.763a4.961 4.961 0 0 0 1.848-.36 11.66 11.66 0 0 1-1.563-2.185c-2.271-4.117-1.316-8.411-1.037-9.586a14.89 14.89 0 0 1 2.224-4.978h35.646a280.716 280.716 0 0 1 10.771 5.292c6.437 3.337 9.316 5.153 14.938 7.375 1.932.764 4.108 1.624 6.979 2.417 3.373.931 10.139 2.733 18.722 1.833 3.94-.413 11.676-1.318 19.444-6.778 4.975-3.497 8.053-7.518 9.764-10.139h48.153V73H171.875zm47.75 181.792c-4.746 1.942-9.594 3.948-16.333 4.33-9.659.548-17.083-2.458-20.848-4.03-2.448-1.022-6.393-3.165-14.361-7.299 0 0-6.029-3.208-12.206-4.069-2.389-.333-4.421.013-5.107.172-.903.209-1.762.539-1.762.539-.474.182-.874.367-1.19.525.516.059 1.194.152 1.984.302a31.22 31.22 0 0 1 3.2.807c1.623.51 3.822 1.4 7.942 3.712 2.129 1.195 3.678 2.157 3.951 2.326 0 0 5.666 3.511 12.333 6.75 3.673 1.784 9.353 4.046 17.354 5.479-9.605-1.048-20.194-3.736-30.569-9.486a74.416 74.416 0 0 1-2.847-1.66l3.417 3.285a11.762 11.762 0 0 1-1.385-.402c-1.403-.504-2.348-1.149-2.574-1.298-2.089-1.382-7.726-3.45-9.5-4.064-3.157-1.092-5.926-1.528-11.313-2.49a171.927 171.927 0 0 0-11.312-1.635c-2.202-.306-15.679-2.398-23-14.25-3.187-5.16-4.024-10.254-4.25-13.417l.146-27.312c7.882 4.533 20.209 9.84 35.271 9.285a59.398 59.398 0 0 0 6.944-.667l-.361-12.681c-2.374.447-6.793.922-11.639-.875-6.549-2.428-9.861-7.515-12.167-11.056-4.697-7.213-5.784-14.509-6.028-18.611-.621-10.457 3.161-18.26 6.833-25.833 3.935-8.117 8.343-13.558 11.167-17a98.764 98.764 0 0 1 15.958-15.5c7.192-4.677 13.429-6.672 17.303-7.623 24.682-6.066 48.558 6.786 65.183 15.735a166.847 166.847 0 0 1 9.639 5.611v88.494a163.89 163.89 0 0 0-1.154 9.443c-.316 3.424-.669 8.489-2.797 9.576-.471.24-.918.306-.918.306-1.174.172-1.939-.509-3.592-1.216-.376-.161-.943-.345-2.078-.714a23.057 23.057 0 0 0-5.878-1.07 20.617 20.617 0 0 0-6.137.657c-1.507.404-3.715 1.02-5.988 2.775-2.017 1.558-3.032 3.201-3.238 3.542a12.729 12.729 0 0 0-1.276 2.928c-.217.739-2.24 7.617 1.868 11.826 1.594 1.633 3.431 2.168 4.354 2.438 3.181.927 7.268.544 9.479-1.708.756-.77 1.576-2.047 1.427-2.188-.046-.043-.169.035-.625.156-.253.068-.464.11-.604.135-.666.349-1.768.8-3.135.771-2.941-.063-5.792-2.318-6.625-5.333-.995-3.602 1.286-6.857 3.458-8.375 2.097-1.465 4.323-1.471 5.5-1.458 3.785.041 8.211 1.99 10.5 5.833 2.945 4.943.819 10.441-.542 13.958-.553 1.43-1.852 4.681-5 7.583-1.786 1.649-3.687 2.738-6.872 4.041zm5.104 7.047c3.112-1.792 8.158-5.227 12.382-11.173.626-.88 1.492-2.283 2.389-4.349v15.522h-14.771z"></path><path style="fill:#fff" d="M133.2 185.441c-4.756-1.637-7.52-4.668-9.616-7.024-7.944-8.928-9.378-19.649-9.958-24.458-.195-1.617-.754-6.887.125-13.667.189-1.456.935-6.77 3.417-13.403 1.196-3.197 3.137-7.611 6.872-13.403 4.177-6.477 8.508-11.433 16.819-19.789a500.972 500.972 0 0 1 22.153-20.947c-6.113-2.442-14.593-4.793-24.675-4.488-2.328.07-4.528.276-6.585.572l-44.25 31.5a590.844 590.844 0 0 1-6.333 4.875c-6.249 4.744-9.373 7.116-12.472 9.042-6.165 3.832-10.491 5.506-12.222 6.139a58.898 58.898 0 0 1-4.306 1.389c2.148.25 20.122 2.54 22.958 12.597.225.798.362 1.671.375 2.625v103.417a9.747 9.747 0 0 1-1.712 5.266 9.737 9.737 0 0 1-4.233 3.429c-7.123 2.569-12.258 4.396-14.444 5.028-.445.129-1.595.447-2.694 1.389-1.027.88-1.538 1.901-1.733 2.302a7.667 7.667 0 0 0-.739 2.615 165.512 165.512 0 0 1 38.723-1.111V254.5l9.417-8.5V96.083c2.78-2.419 12.762-10.518 24.792-8.542 1.614.265 3.414.736 5.333 1.542a85.389 85.389 0 0 0-14.417 21.75c-4.608 10.015-6.127 18.474-6.625 21.667-1.594 10.219-.757 17.974-.556 19.699a66.72 66.72 0 0 0 3.181 13.926c1.006 2.919 1.944 5.583 3.958 8.75.198.311 2.845 4.415 6.667 7.625 8.642 7.259 20.3 7.431 22.958 7.417l-.125-3.708c-2.107.351-5.861.675-10.053-.768zm-40.367 58.164-4.056 3.812V103.384l4.056-3.689v143.91zm18.334 17.562c1.922-.799 4.973-1.825 8.792-2.042 9.065-.514 16.365 3.882 20.956 6.647 1.39.837.453.36 10.711 7.27 3.345 2.253 4.897 3.282 7.167 4.583 3.048 1.747 5.437 2.864 8.417 4.25 4.154 1.931 6.715 3.122 9.903 4.292 5.049 1.852 10.416 3.821 17.611 4.006 6.536.168 11.356-1.218 12.5-1.562 1.005-.301 6.994-2.158 12.827-6.854 0 0 3.481-2.802 6.388-8.015.116-.207.587-1.052.396-1.214-.112-.095-.401.087-.972.417-.531.306-1.094.56-1.611.889-.668.425-5.132 2.755-10.917 3.861-1.126.215-6.752 1.235-14.11-.033-4.567-.787-7.622-2.08-12.64-4.203-1.857-.786-6.166-2.979-14.708-7.333 0 0-3.731-1.902-12.082-5.717a41.947 41.947 0 0 0-9.681-3.13c4.828 2.024 8.501 4.13 11.014 5.722 3.233 2.049 7.841 5.335 10.292 7.083 1.779 1.269 3.567 2.568 6.25 4.125a63.652 63.652 0 0 0 5.292 2.75 22.178 22.178 0 0 1-5.014-.819c-3.892-1.11-6.025-2.9-10.111-5.528-2.8-1.801-4.786-2.883-8.625-4.973-2.662-1.45-7.177-3.909-12.82-6.027-5.824-2.186-10.58-3.971-17.167-4.056-2.947-.038-7.97-.045-13.444 2.667a25.235 25.235 0 0 0-4.614 2.944z"></path><path style="fill:#fff" d="M287.269 259.48a16.09 16.09 0 0 1-5.893.9c-1.291-.047-2.393-.247-3.584-.546-4.321-1.086-8.443-3.142-10.875-4.472l2.361-2.639V104.444l15.167-13.5-.944-.833a66.817 66.817 0 0 1-8.417 3.806c-2.315.858-6.434 2.36-12.017 3.192-3.308.493-5.776.549-8.441.599a95.862 95.862 0 0 1-14.113-.787c-2.226-.285-9.423-1.274-21.578-4.789-7.706-2.228-19.785-6.16-27.473-9.085-1.275-.485-5.045-1.938-10.262-3.097a71.363 71.363 0 0 0-5.157-.95l7.5-6h-3.667l-32.5 25.667c1.889-.772 4.53-1.839 7.708-3.083 5.669-2.22 6.711-2.523 7.771-2.771 3.894-.911 7.041-.841 9.479-.771 4.037.117 7.061.752 9.958 1.375a75.256 75.256 0 0 1 8.153 2.25c6.134 2.037 10.844 4.089 15.778 6.278 15.662 6.948 18.95 8.788 25.608 9.824 3.239.504 5.935.608 7.669.621v160.478a16.373 16.373 0 0 1 1.833-3.409c.671-.954 1.616-2.272 3.306-3.429a12.025 12.025 0 0 1 3.069-1.487c2.346-.757 4.423-.649 6.083-.458 3.591.413 5.899 1.293 9.907 2.606 5.607 1.837 8.41 2.755 9.593 2.727 4.325-.103 7.565-2.477 11.292-5.208a39.093 39.093 0 0 0 7.889-7.736 16.217 16.217 0 0 1-5.203 3.006zm-22.769-5.786-4.5-3.049V108.9l4.5-1.79v146.584z"></path><path style="fill:#fff" d="M231.292 87.125c-.117-.128.319-.702.688-1.188 2.999-3.956 2.664-3.604 2.965-3.938 3.887-4.315 8.445-6.567 8.445-6.567 1.471-.727 3.305-1.616 5.889-2.044 1.762-.292 2.888-.207 6.503-.076 2.37.086 4.743.097 7.112.202 3.368.149 9.392-.624 21.051-4.738a58.663 58.663 0 0 1-3.611 5.167c-1.505 1.925-2.608 3.336-4.222 4.778-3.063 2.737-6.142 3.958-7.833 4.611-1.393.538-4.9 1.77-10.165 2.025-11.142.539-16.933-3.937-23.55-.171-.592.337-1.042.656-1.292.84-.868.624-1.832 1.261-1.98 1.099zm-8.77 150.699c-.074-.153-.668.02-1.203.117 0 0-1.025.185-2.736-.024-1.788-.218-4.724-2.459-4.917-5.694-.194-3.258 2.527-5.298 2.944-5.611 2.769-2.076 6.031-1.392 7.2-1.147.948.199 3.704.777 5.523 3.224 1.296 1.744 1.469 3.566 1.583 4.958.412 5.012-1.82 8.991-2.529 10.159-3.905 6.436-10.7 8.489-13.221 9.25-2.929.885-5.435 1.068-8.5 1.292-1.438.105-5.002.31-9.604-.118-6.528-.607-11.426-2.141-14.53-3.132-3.043-.972-5.546-1.979-7.143-2.625-4.788-1.936-5.052-2.408-8.333-3.611-5.46-2.002-9.166-2.322-10.347-2.403 0 0-6.296-.43-8.672 2.063-.066.069-.321.337-.266.416.061.087.455-.117.891-.279 0 0 .458-.17 1.616-.367 1.797-.306 4.25.083 4.25.083 3.552.563 6.264 1.604 6.264 1.604 3.418 1.312 5.267 2.491 8.25 4.104 3.39 1.834 8.372 4.499 14.729 6.5a73.017 73.017 0 0 0 6.729 1.75c2.549.551 5.454 1.167 9.333 1.417.625.04 2.624.158 5.25.083 2.957-.084 4.436-.126 6.104-.5 2.21-.496 2.689-1.011 7.833-2.708.767-.253 1.399-.454 1.812-.583a31.688 31.688 0 0 1-7.389 4.5c-1.261.54-2.732 1.061-3.542 1.347-.471.167-.861.3-1.125.389a23 23 0 0 0 4.806-.069c.937-.113 5.785-.755 10.833-4.208 2.9-1.984 4.692-4.093 5.778-5.389.78-.931 1.938-2.328 3.083-4.417 1.8-3.282 2.372-6.088 2.5-6.75.468-2.427.403-4.327.361-5.389-.087-2.182-.148-3.71-.889-5.583-1.21-3.06-3.354-4.817-4.191-5.439-1.527-1.134-2.888-1.596-4.503-2.145-1.66-.564-3.513-1.193-5.944-1.083-1.011.046-2.999.135-5.052 1.296-.351.199-4.69 2.749-5.076 7.77-.075.969-.273 5.56 3.211 7.823 3.357 2.18 7.419.439 8.317-.267.127-.099.583-.457.512-.604z"></path><path d="M213.219 154.222c0-21.263-17.498-38.5-39.083-38.5-21.585 0-39.083 17.237-39.083 38.5 0 9.35 3.385 17.92 9.011 24.589l-6.261 59.633h72.667l-6.215-59.687c5.598-6.661 8.964-15.21 8.964-24.535z"></path><path style="fill:#fff" d="M205.636 154.316c0-17.397-14.103-31.5-31.5-31.5s-31.5 14.103-31.5 31.5c0 8.611 3.458 16.411 9.058 22.097l-5.966 54.698h57.222l-6.007-55.08c5.382-5.652 8.693-13.294 8.693-21.715zM154.167 223.5l5.16-50.238c-5.901-4.382-9.715-11.321-9.715-19.135 0-13.255 10.969-24 24.5-24s24.5 10.745 24.5 24c0 7.846-3.844 14.811-9.786 19.19l5.425 50.183h-40.084z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-flores'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var frost = {
  id: 'frost',
  name: 'Frost',
  role: 'Defender',
  unit: 'JTF-2',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'ca',
    season: 'Y1S1',
    height: 172,
    weight: 58
  },
  bio: {
    real_name: 'Tina Lin Tsang',
    birthplace: 'Vancouver, Canada'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#006f93" d="M73 73h204v204H73z"></path><path d="M229.75 101.75h-109.5c-9.389 0-17 7.611-17 17v109.5c0 9.389 7.611 17 17 17h109.5c9.389 0 17-7.611 17-17v-109.5c0-9.389-7.611-17-17-17zM235.5 229a5 5 0 0 1-5 5h-111a5 5 0 0 1-5-5V118a5 5 0 0 1 5-5h111a5 5 0 0 1 5 5v111z"></path><path d="M61 147.278h228v52.306H61z"></path><path d="M46.444 166.775v37.309h257.889v-37.267l-7.679 7.665-12.386 12.364-12.474-12.374-3.189-3.164-3.169 3.183-5.16 5.184-7.13 7.162-12.478-12.367-3.179-3.151-3.168 3.162-12.378 12.356-7.205-7.186-5.185-5.171-3.198-3.189-3.178 3.209-12.207 12.329-12.469-12.358-3.172-3.144-3.168 3.148-12.432 12.354-12.245-12.333-3.172-3.195-3.193 3.173-12.437 12.36-12.3-12.344-3.159-3.171-3.188 3.143-12.551 12.374-12.202-12.334-3.168-3.202-3.199 3.171-12.479 12.368-12.304-12.349-7.688-7.715z"></path><path style="fill:#fff" d="m284.278 193.194-15.653-15.528-15.458 15.528-15.667-15.528-15.556 15.528-15.569-15.528L191 193.194l-15.667-15.528-15.625 15.528-15.417-15.528-15.625 15.528-15.472-15.528-15.75 15.528-15.361-15.528-15.667 15.528-15.472-15.528v21.917h248.889v-21.917l-15.555 15.528zm-202.195.973a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7zm186.542 0a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z"></path><path d="M304.333 142.778H46.444v14.336l1.318 1.318 15.472 15.472 3.166 3.166 3.182-3.151 12.469-12.347 4.514 4.559 7.681 7.757 3.16 3.192 3.198-3.155 12.542-12.373 12.336 12.35 3.173 3.176 3.184-3.165 12.414-12.343 12.265 12.325 3.171 3.186 3.19-3.167 12.459-12.37 12.496 12.374 3.189 3.158 3.166-3.181 7.722-7.757 4.539-4.559 12.311 12.322 3.178 3.181 3.183-3.175 7.778-7.757 4.611-4.599L250 173.92l3.192 3.161 3.166-3.186 12.253-12.33 4.655 4.602 7.847 7.757 3.169 3.133 3.164-3.138 15.556-15.431 1.331-1.32v-14.39z"></path><path style="fill:#fff" d="M50.944 147.278v7.972l15.472 15.472 15.667-15.514 15.361 15.514 15.725-15.514 15.497 15.514 15.604-15.514 15.438 15.514 15.625-15.514L191 170.722l15.444-15.514 15.5 15.514 15.556-15.514 15.667 15.514 15.417-15.514 15.694 15.514 15.556-15.431v-8.014H50.944zm15.473 12.305a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7zm217.861 0a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-frost'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var fuze = {
  id: 'fuze',
  name: 'Fuze',
  role: 'Attacker',
  unit: 'SPETSNAZ',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'ru',
    season: 'Release',
    height: 172,
    weight: 58
  },
  bio: {
    real_name: 'Shuhrat Kessikbayev',
    birthplace: 'Samarkand, Uzbekistan'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M305 305H45V45h260l-57.167 40.167 41.153 9.792-50.681 27.375 60.736 5.625-81.542 52.542 86.927 26.053-70.677 15.135 41.417 29.34-49.85 3.46C251.878 271.325 278.439 288.163 305 305z"></path><path style="fill:#a62222" d="M184.5 241.889 240.116 277H73V73h175.772l-20.814 18.312 27.583 8.229-52.074 28.973 64.199 8.819-73.833 44.333 68.778 23.278-72.286 6.354 57.147 32.73-62.972-2.139z"></path><path d="M73 73v53.667L202.778 73zm0 149.972V277h129.75z"></path><path style="fill:#fff" d="M73 218.417v4.555L269.222 305H305zm0-13.361v3.416l154.722 36.695 27.5.833zm0-47.223V160l209.278-23.667-72.71 2.084L73 157.833zm0-12.208v2.792l160.528-31.334-29.667-.444zm0-18.958v4.416L305 45h-35.556zm100.833-20.25 10.75 4.833-8.333 7.417zM199.771 222.5l20.021 5.292-7.125-9.959zm9.104-127.125 8.708-7.521 4.75 11.438-9.312 6.458z"></path><path d="M222.052 141.5c-1.938 0-3.875.165-5.778.477l.148-.104-2.008-2.867-7.997-11.42a15.525 15.525 0 0 0-12.707-6.611c-3.189 0-6.26.969-8.88 2.804l-10.381 7.269c-3.234 2.251-4.451 3.165-6.874 4.987-.503.378-1.545 1.161-2.225 2.609-.56 1.193-.613 2.245-.669 3.358-.022.437-.025.878-.01 1.313v31.164l.633.904 17.832 25.467a6.507 6.507 0 0 0 5.327 2.772 6.468 6.468 0 0 0 3.726-1.176l.107-.075a6.451 6.451 0 0 0 2.27-2.841c4.288 5.23 10.092 9.247 16.93 11.374a35.511 35.511 0 0 0 10.555 1.597c19.575 0 35.5-15.925 35.5-35.5S241.627 141.5 222.052 141.5zm-44.302 28.764v-12.108l4.662-1.62 4.515-1.568 1.544 2.205 2.008 2.867.672-.47a35.417 35.417 0 0 0-4.597 17.431c0 2.301.223 4.557.641 6.75l-9.445-13.487z"></path><path style="fill:#fff" d="M174.25 171.367v-15.701l14.026-4.873 3.061 4.371 20.211-14.152-7.997-11.42c-3.801-5.429-11.284-6.748-16.713-2.947l-10.381 7.269c-3.191 2.221-4.387 3.12-6.78 4.919-.404.304-.862.667-1.159 1.298-.267.569-.295 1.123-.341 2.046-.022.447-.016.818-.006 1.073v30.125l17.832 25.467a3 3 0 0 0 4.178.737l.107-.075a3 3 0 0 0 .737-4.178l-16.775-23.959z"></path><path style="fill:#fff" d="M243.083 153.042s-9.149-8.032-21.031-8.042c-1.634-.001-3.269.165-3.269.165a31.875 31.875 0 0 0-3.175.484l-20.799 14.563a31.862 31.862 0 0 0-3.528 7.98c-.184.643-1.228 4.378-1.23 8.807-.003 6.684 2.364 17.333 11.073 24.625 2.018 1.69 5.756 4.354 11.411 5.936-.905-1.959-2.964-7.116-1.784-13.595.788-4.323 2.69-7.436 3.922-9.138l3.386 2.275-3.31 5.701 6.833 2.111-5.361 6.278 10.222.306-7.684 7.583a39.37 39.37 0 0 0 17.475-3.569l-10.931.653 6.583-7.194-10.444.083 4.405-5.95-7.516-1.634 2.389-4.917-5.59-2.367a36.508 36.508 0 0 1 10.201-9.106c-.804 1.219-2.17 3.689-2.083 6.875.04 1.494.424 4.013 3.292 7.792 4.991 6.576 12.233 10.02 16.272 11.602 1.429-1.22 11.27-9.919 11.239-24.352-.002-1.439-.249-14.546-10.968-23.955zm-4.879 24.453c-2.093-1.138-3.01-3.881-1.912-6.203l8.438 3.896c-1.166 2.555-4.246 3.546-6.526 2.307z"></path><path d="M155.305 205.831c-1.636 0-3.288.15-4.92.429l-.265-.399-1.48-2.113-6.329-9.039a12.6 12.6 0 0 0-10.313-5.365c-2.588 0-5.08.787-7.207 2.276l-8.166 5.718-.022.015-.061.043-6.155 4.497-.072.052a4.048 4.048 0 0 0-1.81 3.353v27.205l.467.666 14.975 21.387a4.585 4.585 0 0 0 3.753 1.953c.943 0 1.851-.286 2.625-.829l.879-.616a4.537 4.537 0 0 0 1.524-1.854c5.336 6.57 13.473 10.779 22.577 10.779 16.035 0 29.08-13.045 29.08-29.08 0-16.033-13.045-29.078-29.08-29.078zm-36.534 23.495v-10.171l5.642-1.889 2.394-.802 1.208 1.725 1.48 2.113.372.513.053-.06a29.04 29.04 0 0 0-3.085 20.087l-8.064-11.516z"></path><path style="fill:#fff" d="m116.168 230.105.024-.007v-12.801l11.624-3.893-.01-.014 2.323 3.318 16.397-11.481-6.329-9.039c-3.168-4.524-9.403-5.624-13.927-2.456l-8.166 5.718-.039.027.001.001-6.288 4.593a1.475 1.475 0 0 0-.433.411 1.502 1.502 0 0 0-.26.837v26.372l14.975 21.387a2 2 0 0 0 2.785.491l.879-.616a2 2 0 0 0 .491-2.785l-14.047-20.063z"></path><path style="fill:#fff" d="M155.305 208.411c-1.731 0-3.421.171-5.059.488l-17.659 12.365a26.372 26.372 0 0 0-3.782 13.647c0 14.636 11.864 26.5 26.5 26.5s26.5-11.864 26.5-26.5-11.865-26.5-26.5-26.5z"></path><path d="M128.639 108.003c-1.636 0-3.288.15-4.92.429l-.265-.399-1.48-2.113-6.329-9.039a12.6 12.6 0 0 0-10.313-5.365c-2.588 0-5.08.787-7.207 2.276l-8.166 5.718-.022.015-.061.043-6.155 4.497-.072.052a4.048 4.048 0 0 0-1.81 3.353v27.205l.467.666L97.28 156.73a4.585 4.585 0 0 0 3.753 1.953c.943 0 1.851-.286 2.625-.829l.879-.616a4.537 4.537 0 0 0 1.524-1.854c5.336 6.57 13.473 10.779 22.577 10.779 16.035 0 29.08-13.045 29.08-29.08.001-16.034-13.044-29.08-29.079-29.08zm-36.533 23.495v-10.171l5.642-1.889 2.394-.802 1.208 1.725 1.48 2.113.372.513.053-.06a29.04 29.04 0 0 0-3.085 20.087l-8.064-11.516z"></path><path style="fill:#fff" d="m89.502 132.278.024-.007V119.47l11.624-3.893-.01-.014 2.323 3.318L119.86 107.4l-6.329-9.039c-3.168-4.524-9.403-5.624-13.927-2.456l-8.166 5.718-.039.027.001.001-6.288 4.593a1.475 1.475 0 0 0-.433.411 1.502 1.502 0 0 0-.26.837v26.372l14.975 21.387a2 2 0 0 0 2.785.491l.879-.616a2 2 0 0 0 .491-2.785l-14.047-20.063z"></path><path style="fill:#fff" d="M128.639 110.583c-1.731 0-3.421.171-5.059.488l-17.659 12.365a26.372 26.372 0 0 0-3.782 13.647c0 14.636 11.864 26.5 26.5 26.5s26.5-11.864 26.5-26.5c0-14.635-11.865-26.5-26.5-26.5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-fuze'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var glaz = {
  id: 'glaz',
  name: 'Glaz',
  role: 'Attacker',
  unit: 'SPETSNAZ',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'ru',
    season: 'Release',
    height: 178,
    weight: 79
  },
  bio: {
    real_name: 'Timur Glazkov',
    birthplace: 'Vladivostok, Russia'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#a62222" d="M73 73h204v204H73z"></path><circle style="fill:#fff" cx="175" cy="175" r="56"></circle><path style="fill:#fff" d="M175 79.5c-52.743 0-95.5 42.757-95.5 95.5s42.757 95.5 95.5 95.5 95.5-42.757 95.5-95.5-42.757-95.5-95.5-95.5zm0 184.5c-49.153 0-89-39.847-89-89s39.847-89 89-89 89 39.847 89 89-39.847 89-89 89z"></path><path d="M243.475 171.75h-41.173c-1.483-12.588-11.464-22.569-24.052-24.052v-41.031h-6.5v41.031c-12.588 1.483-22.569 11.464-24.052 24.052h-41.173a.1.1 0 0 0-.1.1v6.3a.1.1 0 0 0 .1.1h41.173c1.483 12.588 11.464 22.569 24.052 24.052v41.031h6.5v-41.031c12.588-1.483 22.569-11.464 24.052-24.052h41.173a.1.1 0 0 0 .1-.1v-6.3a.1.1 0 0 0-.1-.1zM175 180.5a5.5 5.5 0 1 1 0-11 5.5 5.5 0 1 1 0 11zM35.75 167.251h60.5v15.498h-60.5z"></path><path style="fill:#fff" d="M35.75 171.75h60.5v6.499h-60.5z"></path><path d="M253.75 167.251h60.5v15.498h-60.5z"></path><path style="fill:#fff" d="M253.75 171.75h60.5v6.499h-60.5z"></path><path d="M182.749 35.75v60.5h-15.498v-60.5z"></path><path transform="rotate(90 175 66)" style="fill:#fff" d="M144.75 62.75h60.5v6.499h-60.5z"></path><path d="M182.749 253.75v60.5h-15.498v-60.5z"></path><path transform="rotate(90 175 284)" style="fill:#fff" d="M144.75 280.75h60.5v6.499h-60.5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-glaz'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var goyo = {
  id: 'goyo',
  name: 'Goyo',
  role: 'Defender',
  unit: 'FES',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'mx',
    season: 'Y4S3',
    height: 171,
    weight: 83
  },
  bio: {
    real_name: 'CÃ©sar Ruiz HernÃ¡ndez',
    birthplace: 'CuliacÃ¡n Rosales, Mexico'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#115a19" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="m108.611 241.5-17.056 13.722L73 277h204l-17.5-23.722-11.833-4.111-26.5-42.444-5.333-2.5-10.056 5.5a12.642 12.642 0 0 0-2.194-1.931c-1.346-.93-2.526-1.354-3.694-1.764a22.548 22.548 0 0 0-4.583-1.083l-1.597.681-2.708 2.653-6.271-6.444-20.924.611-9.083 1.806-6.917-3.167-5.972 4.958-26.335 38.165-6.889-2.708z"></path><path d="m253.111 258.667-10.5-3.333-27.542-45.278-9.486 6.194-4.944-5.194c-.14-.118-.774-.629-1.67-.556a2.236 2.236 0 0 0-1.08.389l-4.083 3.194-2.111 3.111a11.623 11.623 0 0 0-1.097-1.347 11.855 11.855 0 0 0-2.75-2.153l-6.118-4.517-13.118-.177-3.667 2.111-12.056-.889-3.944-3.444-30.736 44.097-3.24-.312-5.01-2.646-13.236 11.056-22.736 28.181 20.153.056 78 17.292 85.306-18.722h12.333l-16.668-27.113zm-136.861 6.805-14.458 7.569 8.847-20.208 3.444 1.806 5.694.444-3.527 10.389zm113.125-3.451-10.958-17.083-18.611-18.91-.028 15.667-4.917 6.444L199 264.472l-21.306-10.5-5.194-17.944-11.708 25.222-7.167-9.792-11.823 16.207-5.427 9.113.347-7.375a479.966 479.966 0 0 0-1.8-11.487c-.188-1.11-.375-2.183-.589-3.749-.421-3.084-.549-5.175-.765-8.204a718.15 718.15 0 0 0-.694-8.942l17.056-24.479 10.07 8.18 20.556 8.056 14.278-8.667 10.188 1.472 8.799-5.903v6.306l4.014 6.951.438 4.427 5.618 7.566-1.653-9.667-1.5-3.875 4.514 7.403 4.125 13.396-2.021 5.979 2.019 7.855z"></path><path style="fill:#fff" d="M151.167 112.333a232.936 232.936 0 0 1 1.458 8.458c2.135 13.911 2.112 22.187 2.09 24.333-.01 1.04-.033 1.888-.049 2.417a805.703 805.703 0 0 1-1.125-6.042c-1.061-5.816-2.445-13.754-4.333-26.125-1.513-9.911-.468-3.787-3.125-26.333-.153-1.3-.578-4.898.106-9.449.338-2.247.818-3.87.935-4.259.276-.916 1.423-4.545 4.417-8.75 2.173-3.053 5.498-7.722 11.875-10.625 6.496-2.957 12.38-2.362 14.458-2.125 5.327.607 9.16 2.604 11.417 3.806 3.67 1.955 6.15 4.1 7.25 5.111 1.171 1.075 3.45 3.198 5.542 6.542 2.623 4.192 3.702 8.308 4.167 11.292a121.66 121.66 0 0 1 .416 13.084c.243.549.595 1.4.932 2.467.721 2.282 2.307 8.511-2.432 24.033a118.841 118.841 0 0 1-3.583 10.083c.313-2.395.822-6.136 1.542-10.75.753-4.831 1.097-6.516 1.375-9.333.265-2.69.493-6.65.167-11.583a309.91 309.91 0 0 1-.763 5.36c-1.496 9.893-2.464 16.293-4.785 23.778C197.501 132.934 196 137 196 137c-.992 2.687-1.579 4.059-2.262 6.401a49.548 49.548 0 0 0-1.572 7.516 1029.414 1029.414 0 0 1-.167-22.084 838.888 838.888 0 0 0-2.417 9.333c-2.415 9.556-3.762 14.924-5.028 21.667a213.774 213.774 0 0 0-2.056 13.25 113.923 113.923 0 0 0-2.167-14.916 427.28 427.28 0 0 0-3.833 24.855 937.01 937.01 0 0 1-2.833-11.479c-1.679-6.99-2.471-10.639-4.167-17.333a550.888 550.888 0 0 0-1.833-7.042l-.167 23.5a708.281 708.281 0 0 1-1.771-7.479c-1.842-7.978-2.5-11.485-3.896-16.132a211.248 211.248 0 0 0-1.667-5.278c-.792-2.377-1.049-2.98-1.444-4.222-.81-2.542-1.039-4.119-1.652-7.408-2.007-10.772-3.311-14.077-5.32-17.002a22.923 22.923 0 0 0-.581-.814z"></path><path d="M153.271 88.25a16.076 16.076 0 0 1 .118-5.403c.196-.999.55-1.948 1.25-3.806 1.234-3.273 1.952-5.143 3.417-7.347.55-.828 1.049-1.571 1.889-2.444 1.839-1.912 3.747-2.821 4.573-3.205.855-.398 4.047-1.781 9.621-1.433 2.582.161 11.352.709 18.528 7.556 1.327 1.266 4.623 4.679 6.528 9.889.967 2.645 1.152 4.595 1.194 5.111.063.765.2 3.022-.993 7.625-.883 3.406-1.973 7.609-4.976 12.072-1.447 2.151-1.8 2.075-4.462 5.845-1.564 2.216-2.723 4.056-3.708 6.458a27.242 27.242 0 0 0-1 2.889 142.63 142.63 0 0 0 .625-7.806c-.201.512-.515 1.323-.884 2.323-1.313 3.558-1.856 5.547-2.867 8.56-.454 1.353-1.15 3.35-2.096 5.784a102.023 102.023 0 0 0-.194-11.195 409.824 409.824 0 0 0-1.917 16.611c-.233-.731-.581-1.849-.972-3.222-.838-2.938-1.393-4.886-1.917-7.472-.368-1.82-.63-3.505-1.667-5.722a20.13 20.13 0 0 0-.444-.889 129.276 129.276 0 0 1 2.139 15c-.13-.184-.325-.462-.556-.806-1.908-2.844-2.751-4.935-4.533-8.895-1.79-3.979-1.419-2.934-2.606-5.633-1.266-2.878-1.59-3.843-2.667-5.333-.922-1.276-1.133-1.19-2.799-3.257-.92-1.141-1.929-2.394-2.812-3.917-.437-.753-1.136-2.078-2.125-5.333-1.303-4.292-2.187-7.201-2.139-11.174.018-1.459.166-3.481.746-5.875a4.968 4.968 0 0 0-.718.736c-.294.372-.484.724-.681 1.153a16.054 16.054 0 0 0-.895 2.555z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-goyo'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var gridlock = {
  id: 'gridlock',
  name: 'Gridlock',
  role: 'Attacker',
  unit: 'SASR',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'au',
    season: 'Y4S1',
    height: 171,
    weight: 83
  },
  bio: {
    real_name: 'Tori Tallyo Fairous',
    birthplace: 'Longreach, Australia'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path d="M73 73h204v204H73z"></path><circle cx="175" cy="175" r="122.5"></circle><path style="fill:#d31850" d="m258.257 152.45-21.278-36.855 18.349-11.272C235.719 82.054 207.003 68 175 68c-59.094 0-107 47.906-107 107 0 11.456 1.807 22.487 5.14 32.835l19.447-10.192 21.278 36.855-18.851 11.566C114.614 268.107 143.183 282 175 282c59.094 0 107-47.906 107-107 0-11.266-1.746-22.124-4.974-32.323l-18.769 9.773z"></path><path d="M226.889 172.111V65.555A129.568 129.568 0 0 0 175 54.666a129.58 129.58 0 0 0-52 10.889v106.556l28.868-7.406v44.739c.008 1.736-.294 3.258-.897 4.568-1.421 3.084-4.649 5.077-8.387 7.385a39.61 39.61 0 0 1-5.339 2.76l-5.489 2.326v62.239h19.377c4.418 3.806 12.612 9.1 24.003 9.111 11.439 0 19.652-5.301 24.076-9.111h19.266v-61.416l-4.569-2.584a998.404 998.404 0 0 1-8.467-4.844c-2.84-1.643-3.402-1.993-3.647-2.212-.312-.278-1.914-1.792-2.827-4.348a11.44 11.44 0 0 1-.657-3.62v-44.935l28.578 7.348zM175 268.333c-8.008 0-14.5-6.492-14.5-14.5s6.492-14.5 14.5-14.5 14.5 6.492 14.5 14.5-6.492 14.5-14.5 14.5z"></path><path style="fill:#fff" d="M175 230.611c11.941 0 21.794 8.813 23.295 20.222h11.184v-18.278a1023.514 1023.514 0 0 1-8.542-4.887c-3.57-2.066-4.207-2.463-5.124-3.28-.675-.6-3.633-3.325-5.318-8.041a20.437 20.437 0 0 1-1.182-6.57V154.11l-6.59-1.576v58.132a7 7 0 0 1-7 7h-1.208a7 7 0 0 1-7-7v-58.133l-6.646 1.577v55.333c.019 3.93-.981 6.724-1.722 8.333-2.557 5.55-7.329 8.497-11.833 11.278a48.522 48.522 0 0 1-6.556 3.389v18.389h10.948c1.5-11.408 11.353-20.221 23.294-20.221zm0 46.5c-11.253 0-20.653-7.827-22.956-18.278h-11.287v20.889h14c1.117 1.244 8.411 9.099 20.389 9.111 12.01.012 19.331-7.87 20.444-9.111h13.889v-20.889h-11.523c-2.303 10.451-11.703 18.278-22.956 18.278z"></path><path style="fill:#fff" d="M217.833 103.624a158.658 158.658 0 0 0-85.556 0v56.46c1.047-.348 3.238-1.076 6.111-2.028 3.559-1.179 4.139-1.368 5.111-1.833 2.638-1.262 2.653-1.932 5.889-3.972 2.936-1.851 5.464-2.901 7.09-3.568 3.13-1.284 5.61-1.936 6.133-2.071 5.498-1.423 9.958-1.394 12.444-1.361 5.392.072 9.488.962 11.056 1.333 1.425.338 6.617 1.597 10.972 4.028.726.405 2.54 1.463 4.5 2.667 1.579.97 2.682 1.683 2.917 1.833 1.794 1.144 5.383 2.799 13.333 4.957v-56.445zm-42.75 29.682c-6.351 0-11.5-5.149-11.5-11.5s5.149-11.5 11.5-11.5 11.5 5.149 11.5 11.5-5.149 11.5-11.5 11.5zm-42.805-41.028A170.782 170.782 0 0 1 175 86.831a170.74 170.74 0 0 1 42.833 5.447l-.056-22.213c-2.59-.89-6.315-2.061-10.873-3.117-11.628-2.695-20.53-2.754-31.905-2.76-10.801-.005-19.194.039-30.278 2.424a112.433 112.433 0 0 0-12.5 3.454c.02 7.403.038 14.807.057 22.212z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-gridlock'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var hibana = {
  id: 'hibana',
  name: 'Hibana',
  role: 'Attacker',
  unit: 'SAT',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'jp',
    season: 'Y1S4',
    height: 173,
    weight: 57
  },
  bio: {
    real_name: 'Yumiko Imagawa',
    birthplace: 'Nagoya, Japan'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#942838" d="M277 277H73V73h204v105.111c4.417 1.342 7.557 5.204 7.882 9.634.365 4.972-2.888 9.706-7.882 11.255v78z"></path><path d="M321.402 184.402c-1.009-22.906-17.824-44.054-43.883-55.191a9.798 9.798 0 0 0-8.435.349c-.711.376-1.174.736-1.721 1.16a17.402 17.402 0 0 0-2.945 2.905c-2.995-2.104-8.358-6.546-11.458-14.042a30.652 30.652 0 0 1-1.974-7.099c2.774-2.75 7.336-8.06 9.744-15.951a37.964 37.964 0 0 0 1.632-10.987c0-7.414-2.156-14.32-5.863-20.146l1.562-2.528a9.8 9.8 0 0 0-1.629-12.295c-7.002-6.574-14.943-11.009-23.605-13.181a51.123 51.123 0 0 0-12.424-1.518c-18.829-.001-37.792 9.836-52.026 26.989-4.043 4.872-1.426 10.21-1.426 10.211.32 1.149.768 2.042 1.1 2.62-3.268 2.204-9.922 5.951-18.632 5.803a29.798 29.798 0 0 1-6.332-.794c-2.665-4.688-5.69-7.784-7.772-9.623-10.297-9.097-22.446-9.492-25.479-9.5a38.49 38.49 0 0 0-8.687.975l-2.065-2.453a9.147 9.147 0 0 0-1.964-1.779c-2.22-1.485-4.499-1.576-5.547-1.604-.6-.016-1.534-.035-2.695.275a8.816 8.816 0 0 0-2.42 1.069 60.755 60.755 0 0 0-14.336 12.219c-1.73 2.016-5.781 6.738-8.807 13.668-3.957 9.062-4.063 17.888-4.009 23.757 0 0 .184 20.174 12.136 37.811.719 1.062 2.239 3.305 4.891 4.14.998.314 2.017.386 3.253.472 1.988.139 3.642.045 4.793-.071a29.563 29.563 0 0 1 1.514 12.66 29.575 29.575 0 0 1-4.081 12.299c-3.571.696-12.06 2.856-19.614 10.173-9.778 9.471-11.297 21.1-11.611 24.361l-2.751.93a9.8 9.8 0 0 0-6.072 11.248c3.204 14.641 13.695 27.487 18.453 31.2 0 0 15.292 11.933 37.246 12.733 1.531.056 3.847.044 4.167.042 6.769-.04 12.744-.593 18.583-2.312 2.155-.635 3.792-1.281 5.062-2.792 1.041-1.237 1.534-2.696 2.131-4.458a26.02 26.02 0 0 0 1.035-4.16 28.384 28.384 0 0 1 4.936.035c8.924.845 15.328 5.752 18.523 8.675-.069.33-.167.827-.269 1.432 0 0-.518 3.093-.516 6.213.009 11.887 7.597 22.241 7.597 22.241 5.601 7.643 12.569 11.304 16.083 12.854-.083 1.065-.22 4.563 2.146 7.667 1.705 2.237 3.866 3.162 4.833 3.562 1.549.641 3.149.938 6.75.917 5.286-.031 9.293-.715 9.729-.792 3.13-.549 8.418-1.475 13.649-3.615 12.377-5.062 19.511-14.899 22.476-19.094 4.894-6.924 7.122-13.201 8.736-17.75 1.462-4.12 2.289-8.135 3.944-16.167.099-.482.385-1.903.404-3.792.021-2.082.048-4.803-1.515-7.097-1.067-1.566-2.755-2.756-3.548-3.152a11.339 11.339 0 0 0-2.464-1.417c.956-3.81 3.378-10.945 9.859-16.583a29.5 29.5 0 0 1 5.067-3.545 37.541 37.541 0 0 0 8.144 3.387 37.766 37.766 0 0 0 10.275 1.421c11.612 0 21.994-5.252 28.903-13.503l2.943.695a9.8 9.8 0 0 0 11.133-5.397c3.779-8.108 5.51-16.446 5.143-24.78zm-231.93 37.209a8.5 8.5 0 1 1 .001-17.001 8.5 8.5 0 0 1-.001 17.001zm20.167-112.528a8.5 8.5 0 1 1 .001-17.001 8.5 8.5 0 0 1-.001 17.001zM175 179.917c-5.799 0-10.5-4.701-10.5-10.5s4.701-10.5 10.5-10.5 10.5 4.701 10.5 10.5-4.701 10.5-10.5 10.5zm14.806 95.694a8.5 8.5 0 1 1 .001-17.001 8.5 8.5 0 0 1-.001 17.001zm33.491-181.283c-4.833 0-8.75-3.917-8.75-8.75s3.917-8.75 8.75-8.75 8.75 3.917 8.75 8.75-3.918 8.75-8.75 8.75zm49.759 102.469a8.5 8.5 0 1 1 .001-17.001 8.5 8.5 0 0 1-.001 17.001z"></path><path style="fill:#fff" d="M311.611 184.833c-.853-19.361-15.865-37.175-37.944-46.611-18.014 15.14-35.747 21.411-42.958 15.851-1.328-1.024-3.745-3.564-5.292-7.157-2.634-6.117-1.288-11.895-.333-15.75 3.067-12.386 12.081-20.241 16.083-23.333a34.68 34.68 0 0 1-9.938 4.511s-4.246 1.211-8.242 1.211c-15.74 0-28.5-12.76-28.5-28.5s12.76-28.5 28.5-28.5c8.552 0 16.218 3.772 21.442 9.736l5.294-8.569c-4.404-4.135-10.805-8.694-19.281-10.82-18.58-4.661-39.615 4.256-54.524 22.223 3.97 9.008 5.657 16.809 6.449 22.166 2.122 14.338-.991 19.07-1.866 20.292-.767 1.072-2.931 3.799-6.667 5.333-5.581 2.293-10.962.401-14-.667-14.476-5.089-22.171-22.686-23.5-25.833a35.052 35.052 0 0 1 1.212 4.967s.482 2.677.482 5.228c0 15.74-12.76 28.5-28.5 28.5-16.278 0-28.374-14.01-28.5-28.5-.094-10.878 6.565-21.178 17.056-26.472l-6.5-7.722a51.046 51.046 0 0 0-12.028 10.25c-1.71 1.993-4.874 5.735-7.264 11.208-3.457 7.917-3.328 14.948-3.194 19.55.435 14.949 6.586 26.71 10.486 32.909a105.92 105.92 0 0 1 12.25-.167c6.427.284 11.486.507 17.5 2.583 5.739 1.981 11.399 3.936 13.917 9.333 2.369 5.08.617 10.341-.027 12.273-2.721 8.165-9.934 12.145-13.556 14.143-3.957 2.183-7.555 3.112-10.861 3.972a62.072 62.072 0 0 1-11.472 1.861 33.664 33.664 0 0 1 5.49.438c2.21.36 8.699 1.487 14.385 5.896 10.649 8.257 10.742 22.02 10.736 22.708-.021 2.315-.37 9.193-5.056 15.958-.557.804-8.863 12.371-23.444 12.542-12.794.15-23.508-8.51-27.278-18.25a24.785 24.785 0 0 1-1.611-7.514l-9.222 3.528c1.09 4.982 4.443 16.809 15.167 25.778 11.737 9.816 25.33 10.378 32.333 10.667a64.77 64.77 0 0 0 19-2.056 92.948 92.948 0 0 1 3.132-10.925c3.727-10.527 7.997-16.552 10.785-19.936 3.228-3.92 5.749-5.854 8.917-6.667.463-.119 2.63-.647 5.417-.25 9.76 1.392 14.998 12.419 15.417 13.333 1.922 4.195 2.14 7.707 2.436 12.411a60.601 60.601 0 0 1-1.477 17.589c.769-2.565 3.024-8.841 9.167-14 1.826-1.534 8.572-6.812 18.542-6.778 1.278.004 14.068.267 22.458 10.986 5.61 7.167 6.025 14.883 6.042 17.514.062 9.524-4.66 18.174-11.312 23.257-1.049.802-4.404 3.24-9.458 4.688-6.08 1.742-11.264 1.089-13.951.556l.528 9.889c5.938.615 14.542.499 23.434-3.467 17.412-7.767 28.61-27.033 29.76-49.519-21.921-12.08-31.683-29.344-27.667-37.875 1.852-3.932 7.502-7.859 13-9.583 4.776-1.498 8.705-1.105 12.319-.706 4.62.511 12.787 2.102 21.973 7.956-2.669-1.929-8.923-7.019-11.633-15.863-.291-.948-1.255-4.571-1.255-8.387 0-15.74 12.76-28.5 28.5-28.5s28.5 12.76 28.5 28.5c0 3.821-1.049 7.68-1.049 7.681a31.547 31.547 0 0 1-2.687 6.82l9.708 2.292c3.963-8.513 4.43-15.668 4.23-20.21zM175 211.667c-23.196 0-42-18.804-42-42s18.804-42 42-42 42 18.804 42 42-18.804 42-42 42z"></path><path style="fill:#fff" d="M175 135.833c-18.502 0-33.5 14.998-33.5 33.5s14.998 33.5 33.5 33.5 33.5-14.998 33.5-33.5-14.998-33.5-33.5-33.5zm0 54.5c-11.598 0-21-9.402-21-21s9.402-21 21-21 21 9.402 21 21-9.402 21-21 21z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-hibana'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var iana = {
  id: 'iana',
  name: 'Iana',
  role: 'Attacker',
  unit: 'REU',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'nl',
    season: 'Y5S1',
    height: 157,
    weight: 56
  },
  bio: {
    real_name: 'Nienke Meijer',
    birthplace: 'Katwijk, Nederlands'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#8c638c" d="M73 73h204v204H73z"></path><path d="M73 277h162.562l6.528-4.323c18.442-12.209 19.65-12.974 21.785-14.51 3.072-2.212 11.286-8.191 19.333-17.167 3.835-4.277 12.013-14.12 18.395-28.868 9.324-21.544 9.007-40.133 8.891-44.025-.144-4.842-.86-16.505-5.661-30.378a104.538 104.538 0 0 0-3.778-9.396c-8.546-18.582-20.887-30.473-25.077-34.303-4.084-3.733-14.448-12.626-30.228-19.488a110.93 110.93 0 0 0-17.611-5.958 56.885 56.885 0 0 0-5.389-3.75s-5.484-3.364-12.139-5.611c-6.264-2.116-19.554-5.085-31.319-5.181C162.43 53.904 123.422 59.462 73 73a536.428 536.428 0 0 0-38 60.424l-.654 1.216a4.089 4.089 0 0 0-.188 2.337 43.704 43.704 0 0 0 2.738 8.065c.865 1.914 1.632 3.242 2.646 5 1.361 2.358 3.129 5.424 5.812 8.75 2.003 2.484 3.689 4.087 5.788 6.068 6.516 6.151 12.673 10.187 17.192 13.141a147.263 147.263 0 0 0 4.667 2.927L73 277z"></path><path style="fill:#fff" d="M117.167 193.667a36.8 36.8 0 0 0 2.889-4.611c1.454-2.757 2.287-5.2 3.25-8.056.109-.322.449-1.404 1.13-3.566 1.508-4.79 2.217-7.155 4.086-7.815.256-.09.477-.129.618-.147a1234.69 1234.69 0 0 1 53.138-13.473 162.587 162.587 0 0 1-2.833-6.5c-2.395-5.837-3.769-10.152-5.722-16.333-3.55-11.238-4.501-16.119-4.868-18.125-.293-1.599-.5-2.925-.632-3.819l49.722-6.722c.127-5.79-.066-27.71-15.833-43.611-7.826-7.892-16.945-11.738-20.556-13.222-8.502-3.496-14.987-4.12-26.444-5.222-9.151-.88-24.028-2.201-42.648 1.423-6.355 1.237-11.58 2.254-18.324 5.133-2.485 1.061-14.022 6.15-25.538 18.043-7.172 7.405-10.789 13.786-17.324 25.317a241.374 241.374 0 0 0-14.132 29.451 52.37 52.37 0 0 0-1.229 3.479c-.566 1.801-.7 2.571-.586 3.468.089.699.301 1.256.475 1.629l7.278 12.736 13.75-24.292c.182-.347.491-.538.763-.49.191.034.305.175.335.212.215.266.202.701-.014 1.111a682.025 682.025 0 0 1-1.667 5.611c-2.802 9.289-3.664 11.439-4.583 15.167-.729 2.957-1.577 7.238-1.917 12.639l5.028 4.667a65.738 65.738 0 0 1 6.139-19.875c.131-.2.35-.312.559-.28.311.047.431.388.458.464a.821.821 0 0 1 .025.441 129.54 129.54 0 0 0-1.75 23.583 473.887 473.887 0 0 0 9.417 6.292c11.709 7.623 13.081 7.779 17.708 11.514 5.188 4.188 10.172 8.307 13.111 15.444 1.832 4.448 2.234 8.522 2.278 11.278a43.002 43.002 0 0 0 8.666-13.278l5.777.335z"></path><path style="fill:#8c638c" d="m176.083 117.25 30.083-3.208a50.033 50.033 0 0 0-1.125 15.292 31.406 31.406 0 0 0 2.903 3.778s1.935 2.157 4.611 4.214c5.338 4.101 13.075 7.264 14.403 7.8.051.365.101.919.042 1.583-.295 3.317-2.967 5.64-4.292 6.792-1.838 1.598-3.472 3.441-5.431 4.889-.066.049-.292.212-.333.472-.058.365.282.698.389.806.544.546 2.637 2.857 5.708 6.25.064.053.53.451.514 1.083a1.33 1.33 0 0 1-.264.75l-2.5 3.5a.862.862 0 0 0 .042 1.041l2.417 3.417c.15.255.244.504.299.743.63 2.741-3.586 5.616-3.924 5.841a1.157 1.157 0 0 0-.19.195c-.557.726-.061 1.892.023 2.083.157.483.6 1.845 1.181 3.625 1.373 4.209 1.736 5.289 1.694 6.889-.014.539-.068 2.089-.778 3.639-1.893 4.134-7.028 5.167-7.847 5.319l-36.5-2.25a63.995 63.995 0 0 0-9.875 9.833c-4.1 5.092-6.406 9.565-7.708 12.125-1.406 2.764-2.506 5.62-4.708 11.333-.645 1.675-1.382 3.645-1.958 6.333-.487 2.271-.907 4.319-.542 6.958.152 1.1.433 2.993 1.625 4.958.887 1.463 1.892 2.326 3.917 3.875 5.391 4.124 7.756 5.263 11.208 8.333a44.954 44.954 0 0 1 2.778 2.694H80.501V255.25c.186-.416.486-1.076.875-1.875 0 0 1.969-4.044 4.957-8.431 2.34-3.437 8.109-10.826 16.501-19.944l.312-13.771a31.77 31.77 0 0 0 5.91-4.507 31.87 31.87 0 0 0 6.007-8.014l5.743-.139c.586-1.067 1.523-2.771 2.692-4.888 1.373-2.485 1.639-2.959 2.086-3.822 1.152-2.225 1.68-3.524 2.695-5.787a194.288 194.288 0 0 1 3.305-6.99c.107-.227.239-.461.403-.694.919-1.311 2.291-1.83 3.02-2.039l57.827-13.35a167.706 167.706 0 0 1-16.751-43.749z"></path><path style="fill:#fff" d="M237.583 78.167a58.872 58.872 0 0 1 6.472 11.444c2.863 6.723 3.76 12.316 4.312 15.914a75.8 75.8 0 0 1 .841 13.684l-10.458 1.958a38.326 38.326 0 0 0-2.028 6c-1.392 5.617-1.259 10.562-.833 14.083a38.12 38.12 0 0 0 4.389 5.417c5.851 6 12.467 8.793 16.75 10.139.209.066.522.201.743.497.172.229.358.649.104 1.906-.156.774-.423 1.582-.656 2.031-.714 1.374-3.913 4.78-8.719 8.844-.051.035-.512.37-.531.979-.018.593.397.951.448.993l5.875 5.955c.083.099.293.377.322.788.041.571-.298.962-.364 1.035l-2.396 3.604a1.794 1.794 0 0 0 .417.917c.516.606 1.266 1.621 1.5 1.948.305.427.457.64.578.894.626 1.314.106 2.796-.071 3.304-.693 1.978-2.315 2.984-2.866 3.293-.428.112-.607.353-.662.436-.137.207-.156.427-.188.792 0 0-.027.31-.009.563.061.876 1.641 5.647 2.03 6.972.846 2.879.662 5.103.556 5.972-.106.87-.206 1.634-.637 2.548-1.037 2.201-3.026 3.21-3.981 3.695-1.571.798-2.968 1.009-4.562 1.25a21.661 21.661 0 0 1-2.936.241 876.492 876.492 0 0 0-32.71-2.345 62.808 62.808 0 0 0-7.965 7.458c-4.731 5.274-7.35 9.998-9.014 13.042 0 0-4.959 9.072-7.292 20.792-.257 1.289-.687 3.763.133 6.583.608 2.092 1.624 3.414 1.909 3.771a10.453 10.453 0 0 0 3.208 2.674h39.5a46.014 46.014 0 0 0 5.875-1.403c1.14-.352 3.797-1.222 9.556-4.111 3.831-1.922 7.31-3.872 9.113-4.969 15.889-9.671 27.769-24.628 27.769-24.628 5.214-6.565 22.852-29.439 22.903-62.167.025-15.883-4.101-28.489-6.591-34.875-1.133-2.905-4.921-12.203-12.25-22.208-15.443-21.086-36.301-31.246-47.584-35.71z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-iana'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var iq = {
  id: 'iq',
  name: 'IQ',
  role: 'Attacker',
  unit: 'GSG9',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'de',
    season: 'Release',
    height: 175,
    weight: 70
  },
  bio: {
    real_name: 'Monika Weiss',
    birthplace: 'Leipzig, Germany'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#fbbb3f" d="M73 73h204v204H73z"></path><path d="m73 73 102 79.458L277 73zm204 204-102-79.458L73 277z"></path><path d="m94.722 112.167 81.007 58.479 81.132-58.562a452.321 452.321 0 0 1 55.528 3.944c7.273.97 14.313 2.09 21.111 3.326a12299.74 12299.74 0 0 1-21.736 29.438c-2.038 2.743-3.535 4.75-3.535 4.75-3.733 5.006-3.55 4.728-4.231 5.665-3.461 4.766-3.7 5.779-6.651 9.876a97.75 97.75 0 0 1-5.069 6.444 107.827 107.827 0 0 1-9.75 10.611c-2.747 2.613-7.309 6.91-14.126 11.241-2.424 1.54-5.32 3.36-9.527 5.079-2.21.903-5.367 2.171-9.708 2.875-4.807.78-8.543.459-11.25.208-1.504-.139-6.444-.66-12.75-2.75-8.425-2.792-14.305-6.731-19.608-10.338a109.786 109.786 0 0 1-8.309-6.246l-21.458-3.917-21.431 3.625a85.482 85.482 0 0 1-12.486 9.292c-4.125 2.522-10.232 6.195-18.869 8.484-3.367.892-9.34 2.476-16.7 2.03-13.806-.836-23.577-8.271-30.083-13.222-8.973-6.828-15.135-14.757-18-18.444-1.829-2.353-4.84-6.446-7.292-9.861a437.983 437.983 0 0 1-7.368-10.59c-9.457-12.683-15.042-20.247-17.525-23.718-.599-.837-2.521-3.539-5.274-7.039A191.147 191.147 0 0 0 18 119.416a444.111 444.111 0 0 1 11.713-1.976 449.49 449.49 0 0 1 65.009-5.273z"></path><path style="fill:#fff" d="M92.444 119.653a409.98 409.98 0 0 0-61.056 5.084l32.556 44.569c4.596 5.748 10.73 12.387 18.306 18.236 4.712 3.638 8.408 5.755 11.958 7.333 2.225.989 5.051 2.225 8.931 2.958 1.1.208 6.106 1.098 13.25-.056 7.947-1.283 13.528-4.287 18.417-6.972 4.278-2.35 10.177-6.107 16.361-11.917l16.926-2.885c.15-.02.58-.098.907-.463.127-.142.204-.288.25-.403l-76.806-55.484zm-6.402 61.514c-2.787-1.855-6.719-4.508-10.708-8.917-2.836-3.134-7.01-7.747-9.05-15.075-.697-2.505-1.898-7.017-.769-12.729 1.003-5.077 3.366-8.671 4.818-10.558a43.709 43.709 0 0 1 8.792-2.514c1.985-.345 3.658-.487 4.916-.594 2.72-.231 4.224-.359 6.079-.199 1.535.132 3.823.506 6.533 1.654l1.347.986 2.319 22.556-7.986-6 2.889 36.5a66.211 66.211 0 0 1-9.18-5.11zM136.5 176.5c-1.283 2.308-2.59 3.768-2.897 4.105-4.123 4.536-9.331 6.125-13.353 7.353-1.274.389-3.007.911-5.268 1.262-3.213.499-9.379.947-17.205-1.832l1.194-21.882 11.333 13.993 2.194-36.028 27.083 19.361c.139 2.823-.021 8.166-3.081 13.668zm162.573-54.355A534.669 534.669 0 0 0 259 119.667l-76.778 55.472a1.974 1.974 0 0 0 1.386 1.014l16.809 2.902a78.275 78.275 0 0 0 15.104 11.028c7.589 4.252 15.81 8.858 26.826 8.444 8.949-.336 15.848-3.837 19.097-5.528 4.876-2.537 8.251-5.336 11.43-7.974 5.68-4.712 9.429-9.068 11.904-11.971 4.089-4.796 7.181-9.253 8.444-11.083 1.707-2.473 2.159-3.294 4.319-6.41 3.045-4.392 5.448-7.526 6.667-9.125 3.078-4.039 7.924-10.524 16.125-21.743a536.524 536.524 0 0 0-21.26-2.548zm-62.462 67.022c-.724-.097-9.084-1.301-15.889-6.167-1.86-1.33-2.942-2.46-3.667-3.333-2.224-2.678-3.07-5.322-3.778-7.611a30.786 30.786 0 0 1-1.361-9.222l27.167-19.25 2.25 35.875 11.333-13.979 1.292 21.896c-3.414 1.185-9.663 2.823-17.347 1.791zm49.434-33.882c-.339 1.691-1.521 6.749-7.003 13.715-7.158 9.095-16.064 14.35-22.5 17.292l2.75-36.292-7.667 5.708 1.917-22.583 1.208-.833a37.078 37.078 0 0 1 4.417-1.042c9.183-1.579 17.15.632 22.292 2.708a27.113 27.113 0 0 1 4.221 8.849c.4 1.49 1.582 6.403.365 12.478z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-iq'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var jackal = {
  id: 'jackal',
  name: 'Jackal',
  role: 'Attacker',
  unit: 'GEO',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 3
  },
  meta: {
    gender: 'm',
    country: 'es',
    season: 'Y2S1',
    height: 190,
    weight: 78
  },
  bio: {
    real_name: 'Ryad Ramirez Al-Hassar',
    birthplace: 'Ceuta, Spain'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#673081" d="M73 73h204v204H73z"></path><path d="M29.042 285.458a1044.405 1044.405 0 0 1 22.792-61.792c6.501-16.039 23.475-56.756 50.111-94.389 4.671-6.6 12.059-16.523 24.778-25.111 15.711-10.609 30.62-13.147 34.667-13.75a81.284 81.284 0 0 1 19.25-.556l-17.431-5.903 161.375-27.819-66.708 149.694-1.292-18.542a82.37 82.37 0 0 1-6.028 20.181c-2.863 6.427-8.745 17.392-19.889 27.444-1.997 1.802-4.78 4.13-8.764 6.865-19.893 13.658-44.496 20.126-51.665 21.959-34.66 8.865-59.488 12.759-59.488 12.759-20.619 3.236-48.357 6.83-81.708 8.96z"></path><path style="fill:#fff" d="M249.211 158.981c-3.353-18.975-13.535-32.04-19.961-38.731-8.624-8.98-17.281-13.557-19.861-14.861-28.937-14.626-58.152-4.033-60.722-3.056-17.673 6.725-27.952 18.669-37.583 29.861-2.923 3.397-8.199 9.871-18.417 27.583-6.105 10.584-21.225 37.784-40.548 88.071a970.361 970.361 0 0 0-10.202 27.804 1611.654 1611.654 0 0 0 52.312-5.549c4.085-26.339 9.642-47.997 14.549-64.215 7.59-25.085 14.326-39.471 24.056-53a142.284 142.284 0 0 1 6.056-7.833c3.034-3.69 10.287-11.45 22.237-15.109A45.166 45.166 0 0 1 174.251 128c24.853 0 45 20.147 45 45s-20.147 45-45 45-45-20.147-45-45c0-3.487.41-6.877 1.161-10.136-.192.463-.385.913-.577 1.386-3.426 8.422-10.183 25.373-12.75 48.417-2.36 21.184-.29 39.539 2.583 53.333 18.673-3.301 33.967-7.005 45.333-10.083 5.689-1.541 15.445-4.292 27.431-8.972 10.806-4.22 16.301-7.225 20.542-9.889 3.04-1.91 7.745-4.898 13.083-9.861 8.004-7.441 12.461-14.699 13.792-16.95 1.89-3.195 6.617-11.743 8.986-23.911 2.6-13.366.972-23.984.376-27.353zm-46.107-72.002 60.937-10.562c.334.988.771 2.432 1.125 4.208 1.085 5.446.584 9.988-.417 15.625a170.076 170.076 0 0 1-4.5 18.917 233.836 233.836 0 0 1-5.361 15.889 87.61 87.61 0 0 0-10.347-15.806c-2.835-3.45-10.174-11.843-22.208-19.278a92.114 92.114 0 0 0-19.229-8.993zm76.09-13.062 29.222-5.278-43.583 97.736a87.124 87.124 0 0 0-2.167-14.653 87.369 87.369 0 0 0-7.125-19.458 130.88 130.88 0 0 0 5.081-7.624c10.932-17.714 16.135-35.609 18.572-50.723z"></path><path style="fill:#fff" d="M174.25 137.148c-19.882 0-36 16.118-36 36s16.118 36 36 36 36-16.118 36-36-16.118-36-36-36zm0 63c-14.912 0-27-12.088-27-27s12.088-27 27-27 27 12.088 27 27-12.088 27-27 27z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-jackal'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var jager = {
  id: 'jager',
  name: 'JÃ¤ger',
  role: 'Defender',
  unit: 'GSG9',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'de',
    season: 'Release',
    height: 180,
    weight: 64
  },
  bio: {
    real_name: 'Marius Streicher',
    birthplace: 'DÃ¼sseldorf, Germany'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#fbbb3f" d="M277 277h-59.958l-41.959 32.667L132.333 277H73v-28.444l-20.75-5.472a320.895 320.895 0 0 0 7.417-66.972 320.903 320.903 0 0 0-6.889-67.778L73 100.89V73.001h58.408l43.633-30.5 43.736 30.5h58.222v28.556l20.333 6.889a295.293 295.293 0 0 0-7.667 57.444c-1.05 30.618 2.839 56.674 7.333 76.278l-20 6.5C277 258.111 277 267.556 277 277z"></path><path style="fill:#fff" d="M302.924 236.606c-4.135-13.89-4.854-18.354-4.854-18.354-2.129-13.225-2.781-23.432-2.833-24.292a311.77 311.77 0 0 1 .016-38.24s1.239-20.031 5.401-35.898c.971-3.703 2.148-6.52 2.986-8.528 1.556-3.726 2.573-5.323 3.542-6.569a21.573 21.573 0 0 1 4.106-4.028 24.697 24.697 0 0 1-5.217 1.389c-4.658.705-8.334-.127-10.792-.708-9.175-2.169-13.763-3.253-17.75-4.667-8.273-2.933-15.325-5.969-22.375-9.25-6.707-3.122-15.338-7.162-26.434-13.49-10.737-6.123-17.478-10.793-28.517-18.44-3.106-2.084-10.625-7.354-16.883-14.319-4.51-5.02-6.358-8.686-7.413-11.439a31.597 31.597 0 0 1-.906-2.729 37.552 37.552 0 0 1-1.014 2.669c-2.448 5.772-5.722 9.605-7.232 11.159-17.396 17.92-50.018 35.424-50.018 35.424A551.849 551.849 0 0 1 96.85 86.444s-26.689 12.954-45.835 15.493c-5.157.684-9.733-.303-9.733-.303a26.13 26.13 0 0 1-2.302-.607c.962.86 2.371 2.227 3.82 4.101 3.792 4.905 5.198 9.843 6.91 17.472 1.906 8.493 2.859 12.74 3.444 17.667 2.207 18.567 1.909 36.467 1.695 44.418 0 0-.936 34.77-8.788 54.135-1.844 4.548-4.907 7.745-4.907 7.745a22.549 22.549 0 0 1-2.44 2.2c.711-.227 1.76-.528 3.051-.776 4.14-.796 7.451-.401 8.927-.214 14.1 1.793 28.851 7.991 28.851 7.992 12.739 5.353 19.109 8.029 27.944 12.444 0 0 46.618 23.296 63.722 45.654 1.63 2.13 2.556 4.457 2.556 4.458a24.208 24.208 0 0 1 1.236 4.637c.092-.463.254-1.21.514-2.111.062-.217 1.06-3.597 3.143-6.934 4.777-7.65 15.505-15.546 20.495-19.092 8.031-5.718 12.046-8.578 17.494-11.973 8.547-5.327 20.314-12.142 36.548-19.888 0 0 24.137-11.518 42.254-14.855 6.635-1.222 12.568-.128 12.568-.128 1.308.241 2.352.519 2.974.697a18.233 18.233 0 0 1-2.024-1.59c-3.924-3.558-5.29-7.951-6.043-10.48zM179 51.325a251.944 251.944 0 0 0 14.259 11.662c14.635 11.105 26.816 17.832 35.575 22.624 21.693 11.868 38.803 18.097 43 19.597a277.276 277.276 0 0 0 14.251 4.663l-25.795 14.006a80.73 80.73 0 0 1-3.833-.613c-9.814-1.813-17.022-5.03-24.104-8.462-10.277-4.98-24.042-11.65-36.186-20.413-3.075-2.219-8.538-6.195-14.814-12.408A118.246 118.246 0 0 1 179 79.584V51.325zm-40.667 121.786a113.794 113.794 0 0 0-1.142-14.566l29.624 16.084-29.607 16.075a113.858 113.858 0 0 0 1.125-17.593zm3.317-21.249a100.938 100.938 0 0 0 16.814-7.606 100.962 100.962 0 0 0 12.537-8.425v31.966l-29.351-15.935zM171 181.461v32.082a91.062 91.062 0 0 0-12.816-8.768 91.055 91.055 0 0 0-16.646-7.318L171 181.461zm12.582-6.832 29.617-16.081a91.211 91.211 0 0 0-1.532 16.674 91.146 91.146 0 0 0 1.317 15.371l-29.402-15.964zm25.164 22.767a90.4 90.4 0 0 0-14.629 6.224 90.502 90.502 0 0 0-15.118 10.156v-32.532l29.747 16.152zM179 168.014v-32.317a87.614 87.614 0 0 0 12.944 8.97 87.528 87.528 0 0 0 16.664 7.271L179 168.014zm-8-44.807a131.358 131.358 0 0 1-17.554 11.948 131.384 131.384 0 0 1-23.389 10.413l-26.78-14.54a201.352 201.352 0 0 0 42.445-19.083A200.855 200.855 0 0 0 171 94.049v29.158zm-45.287 29.105a117.94 117.94 0 0 1 2.121 20.188 117.965 117.965 0 0 1-2.105 24.438l-26.831 14.568c2-11.11 3.523-24.721 3.269-40.256a207.82 207.82 0 0 0-3.278-33.502l26.824 14.564zm4.226 51.443a118.48 118.48 0 0 1 23.144 9.995A118.484 118.484 0 0 1 171 226.182v29.239a212.089 212.089 0 0 0-30.417-20.671 212.31 212.31 0 0 0-37.461-16.435l26.817-14.56zM179 226.375a117.556 117.556 0 0 1 20.75-14.125 117.646 117.646 0 0 1 20.547-8.583l26.711 14.503A205.376 205.376 0 0 0 179 255.472v-29.097zm45.456-29.552a106.73 106.73 0 0 1 .292-44.545l26.866-14.587a189.69 189.69 0 0 0-.458 73.629l-26.7-14.497zm-4.162-51.23a131.335 131.335 0 0 1-23.167-10.254A131.425 131.425 0 0 1 179 123.016V93.984a200.952 200.952 0 0 0 29.229 20.204 201.185 201.185 0 0 0 38.794 16.893l-26.729 14.512zM125.25 83.5A291.145 291.145 0 0 0 171 51.264v28.319a94.765 94.765 0 0 1-8.722 8.472c-3.765 3.215-7.197 5.634-12 8.722-6.542 4.207-16.982 10.863-31.944 17.667-8.456 3.845-13.362 5.466-15.389 6.111a117.85 117.85 0 0 1-12.863 3.307l-26.2-14.225A291.383 291.383 0 0 0 125.25 83.5zm-66.026 32.712s0-.001 0 0l26.394 14.331a106.87 106.87 0 0 1 2.874 9.853c.706 2.938 1.682 7.552 2.462 14.667.551 5.03 1.69 17.583.401 33.875-.714 9.024-1.811 14.609-2.104 16.063a117.993 117.993 0 0 1-3.633 13.716L59.072 233.13a263.544 263.544 0 0 0 6.595-53.685 263.812 263.812 0 0 0-6.443-63.233zM171 298.105a298.069 298.069 0 0 0-49.333-34.216 298.051 298.051 0 0 0-57.594-24.372l25.785-14c2.933.578 7.019 1.497 11.801 2.955 8.442 2.572 14.296 5.372 21.688 8.945 2.269 1.097 11.944 5.816 23.987 13.306 9.039 5.621 12.976 8.799 15.778 11.278a92.555 92.555 0 0 1 7.889 7.875v28.229zM266.25 246c-17.734 6.654-30.391 13.681-41.667 20-9.916 5.557-18.337 10.316-28.917 18.167a217.375 217.375 0 0 0-16.667 13.7v-27.992a84.97 84.97 0 0 1 5.75-6.125c4.95-4.777 9.915-8.401 19.083-13.917 5.963-3.587 18.906-11.105 33.667-17.389 5.678-2.417 10.89-4.339 17.167-5.889 2.335-.576 4.275-.968 5.558-1.209l25.972 14.102A252.033 252.033 0 0 0 266.25 246zm-1.886-27.51a65.256 65.256 0 0 1-2.364-6.74c-1.276-4.399-1.839-8.081-2.399-13.182-.653-5.944-1.337-12.177-1.434-20.985-.02-1.813-.071-8.828.667-18.083 1.147-14.393 3.142-20.906 4-23.5a74.573 74.573 0 0 1 2.073-5.526l25.883-14.053a255.648 255.648 0 0 0-6.678 61.913 255.534 255.534 0 0 0 6.718 54.527l-26.466-14.371z"></path><path d="M175 27.042c.186.657.477 1.61.906 2.729 1.055 2.753 2.903 6.419 7.413 11.439 6.258 6.965 13.777 12.236 16.883 14.319 11.039 7.647 17.78 12.317 28.517 18.44 11.096 6.328 19.727 10.369 26.434 13.49 7.05 3.281 14.102 6.317 22.375 9.25 3.987 1.413 8.575 2.498 17.75 4.667 1.788.423 4.221.978 7.208.978 1.118 0 2.315-.078 3.584-.27a24.758 24.758 0 0 0 5.217-1.389 21.573 21.573 0 0 0-4.106 4.028c-.968 1.246-1.986 2.844-3.542 6.569-.838 2.007-2.015 4.825-2.986 8.528-4.161 15.868-5.401 35.898-5.401 35.898a311.77 311.77 0 0 0-.016 38.24c.053.859.704 11.067 2.833 24.292 0 0 .719 4.465 4.854 18.354.753 2.529 2.119 6.922 6.042 10.479.796.722 1.52 1.248 2.024 1.59a31.695 31.695 0 0 0-2.974-.697s-2.443-.451-5.947-.451c-1.956 0-4.244.141-6.621.578-18.116 3.337-42.254 14.855-42.254 14.855-16.233 7.746-28.001 14.561-36.548 19.888-5.448 3.396-9.463 6.255-17.494 11.973-4.99 3.545-15.719 11.442-20.495 19.092-2.084 3.337-3.081 6.717-3.143 6.934-.26.901-.422 1.648-.514 2.111a24.208 24.208 0 0 0-1.236-4.637s-.926-2.327-2.556-4.458c-17.104-22.357-63.722-45.654-63.722-45.654-8.835-4.415-15.205-7.092-27.945-12.444 0 0-14.752-6.198-28.851-7.992a29.506 29.506 0 0 0-3.868-.265 26.685 26.685 0 0 0-8.11 1.255 22.549 22.549 0 0 0 2.44-2.2s3.063-3.198 4.907-7.745c7.852-19.365 8.788-54.135 8.788-54.135.214-7.951.512-25.851-1.695-44.418-.586-4.927-1.539-9.174-3.444-17.667-1.712-7.629-3.118-12.567-6.91-17.472a30.631 30.631 0 0 0-3.82-4.101 26.13 26.13 0 0 0 2.302.607s2.524.544 5.936.544a28.98 28.98 0 0 0 3.797-.241C70.161 99.396 96.85 86.442 96.85 86.442a553.618 553.618 0 0 0 19.887-10.148s32.622-17.504 50.018-35.424c1.509-1.555 4.784-5.387 7.232-11.16A37.754 37.754 0 0 0 175 27.042m-84.919 96.821a117.85 117.85 0 0 0 12.863-3.307c2.027-.645 6.933-2.266 15.389-6.111 14.962-6.804 25.403-13.46 31.944-17.667 4.803-3.088 8.235-5.508 12-8.722a94.765 94.765 0 0 0 8.722-8.472v-28.32a291.277 291.277 0 0 1-45.75 32.236 291.445 291.445 0 0 1-61.368 26.138l26.2 14.225m170.208.014 25.795-14.006a276.957 276.957 0 0 1-14.251-4.663c-4.197-1.5-21.307-7.729-43-19.597-8.758-4.791-20.94-11.519-35.575-22.624a252.305 252.305 0 0 1-14.259-11.662v28.258c.518.544 1.333 1.389 2.353 2.397 6.277 6.213 11.739 10.189 14.814 12.408 12.144 8.763 25.908 15.433 36.186 20.413 7.083 3.432 14.29 6.65 24.104 8.462 1.604.297 2.937.493 3.833.614m-39.995 21.716 26.729-14.513a201.212 201.212 0 0 1-38.794-16.893A200.952 200.952 0 0 1 179 93.983v29.032a131.273 131.273 0 0 0 41.294 22.578m-90.237-.025A131.199 131.199 0 0 0 171 123.207V94.048a200.577 200.577 0 0 1-25.278 17.896 201.33 201.33 0 0 1-42.445 19.083l26.78 14.541M59.071 233.13l26.546-14.413a117.816 117.816 0 0 0 3.632-13.716c.293-1.454 1.389-7.039 2.104-16.063 1.29-16.292.15-28.844-.401-33.875-.779-7.115-1.756-11.729-2.462-14.667a106.87 106.87 0 0 0-2.874-9.853l-26.394-14.33v-.001.001a263.812 263.812 0 0 1 6.443 63.233 263.338 263.338 0 0 1-6.594 53.684m231.758-.27a255.525 255.525 0 0 1-6.718-54.527 255.598 255.598 0 0 1 6.678-61.913l-25.883 14.053a74.747 74.747 0 0 0-2.073 5.526c-.858 2.594-2.853 9.107-4 23.5-.738 9.256-.687 16.27-.667 18.083.097 8.808.781 15.041 1.434 20.985.56 5.101 1.123 8.783 2.399 13.182a64.781 64.781 0 0 0 2.364 6.74l26.466 14.371M179 168.014l29.609-16.076a87.528 87.528 0 0 1-16.664-7.271 87.56 87.56 0 0 1-12.944-8.97v32.317m-8.001-.216v-31.966a100.886 100.886 0 0 1-12.537 8.425 100.853 100.853 0 0 1-16.814 7.605L171 167.798m80.156 43.521a189.802 189.802 0 0 1-3.378-36.708 189.854 189.854 0 0 1 3.836-36.921l-26.866 14.587a106.737 106.737 0 0 0-.292 44.544l26.7 14.498m-152.259.187 26.831-14.568a117.896 117.896 0 0 0 2.105-24.438 117.94 117.94 0 0 0-2.121-20.188l-26.824-14.564a207.831 207.831 0 0 1 3.278 33.502 207.879 207.879 0 0 1-3.269 40.256m38.311-20.801 29.607-16.075-29.624-16.084a113.99 113.99 0 0 1 1.142 14.566 113.876 113.876 0 0 1-1.125 17.593m75.776-.112a91.156 91.156 0 0 1-1.317-15.371 91.211 91.211 0 0 1 1.532-16.674l-29.617 16.081 29.402 15.964M179 213.777a90.4 90.4 0 0 1 15.118-10.156 90.4 90.4 0 0 1 14.629-6.224L179 181.245v32.532m-8-.234v-32.082l-29.461 15.996a91.124 91.124 0 0 1 16.646 7.318A91.022 91.022 0 0 1 171 213.543m8 41.929a205.435 205.435 0 0 1 31.667-21.583 205.556 205.556 0 0 1 36.341-15.719l-26.711-14.503a117.646 117.646 0 0 0-20.547 8.583A117.556 117.556 0 0 0 179 226.375v29.097m-8-.051v-29.239a118.484 118.484 0 0 0-17.917-12.432 118.445 118.445 0 0 0-23.144-9.995l-26.817 14.56a212.236 212.236 0 0 1 37.461 16.435A212.17 212.17 0 0 1 171 255.421m8 42.446a217.375 217.375 0 0 1 16.667-13.7c10.58-7.851 19-12.609 28.917-18.167 11.276-6.319 23.933-13.346 41.667-20a251.901 251.901 0 0 1 19.947-6.552l-25.972-14.102c-1.283.242-3.223.633-5.558 1.209-6.276 1.55-11.489 3.472-17.167 5.889-14.761 6.284-27.704 13.802-33.667 17.389-9.168 5.516-14.133 9.14-19.083 13.917a84.97 84.97 0 0 0-5.75 6.125v27.992m-8.001.238v-28.23a92.555 92.555 0 0 0-7.889-7.875c-2.802-2.478-6.739-5.657-15.778-11.278-12.044-7.489-21.718-12.209-23.987-13.306-7.391-3.573-13.246-6.373-21.688-8.945a120.742 120.742 0 0 0-11.801-2.955l-25.785 14a298.051 298.051 0 0 1 57.594 24.372A298.038 298.038 0 0 1 171 298.105m.976-272.793a38.85 38.85 0 0 1-1.212 3.031s-2.126 5.561-6.521 10.088c-16.776 17.281-48.841 34.605-49.163 34.778a550.511 550.511 0 0 1-19.759 10.083c-.261.127-26.426 12.74-44.767 15.172-1.055.14-2.178.211-3.337.211-2.739 0-4.692-.363-5.206-.467a23.237 23.237 0 0 1-3.189-.889l-2.955 5.222c.605.646 1.499 1.619 2.556 2.834 0 0 .893.968 1.607 1.891 3.196 4.134 4.515 8.307 6.264 16.098 1.877 8.366 2.82 12.565 3.384 17.313 1.544 12.991 2.106 27.765 1.672 43.911-.009.341-1.013 34.368-8.533 52.914-1.553 3.83-4.177 6.625-4.198 6.647-1.202 1.352-2.085 2.293-2.705 2.894l2.863 5.273a28.524 28.524 0 0 1 3.648-.893c2.272-.398 4.003-.416 4.398-.416 1.564 0 2.776.154 3.427.237 13.445 1.71 27.793 7.686 27.937 7.746l.001.001c12.652 5.316 19.003 7.984 27.735 12.348.459.23 46.093 23.195 62.507 44.649 1.219 1.593 1.983 3.383 2.077 3.609.225.54.366 1.093.656 2.086.375 1.279.653 2.344.839 3.082h6a34.99 34.99 0 0 1 .877-2.951s.957-3.18 2.749-6.05c3.127-5.008 9.706-11.095 19.554-18.092 7.966-5.672 11.962-8.518 17.319-11.857 11.161-6.957 23.003-13.4 36.203-19.699.237-.113 23.955-11.362 41.38-14.571a33.212 33.212 0 0 1 5.987-.52c.891 0 2.845.033 5.319.394 1.475.215 2.737.488 3.735.739l2.955-5.222a20.688 20.688 0 0 1-2.761-2.445c-3.13-3.317-4.429-6.839-5.039-8.885-3.973-13.344-4.747-17.876-4.755-17.921-2.084-12.949-2.727-22.853-2.794-23.94a308.928 308.928 0 0 1 .016-37.81c.012-.197 1.269-19.884 5.293-35.227.909-3.467 2.02-6.126 2.83-8.067 1.2-2.873 1.996-4.258 2.621-5.156a25.57 25.57 0 0 1 4.542-4.833l-2.863-5.273a31.42 31.42 0 0 1-5.622 1.244c-.622.079-1.731.23-3.06.23-2.662 0-4.913-.532-6.402-.884-9.04-2.137-13.577-3.209-17.386-4.559-7.146-2.533-13.952-5.347-22.068-9.124-6.322-2.942-14.98-6.972-26.177-13.357-10.604-6.047-17.249-10.651-28.257-18.277l-.043-.03c-4.449-2.985-10.876-7.794-16.229-13.752-4.557-5.072-6.319-9.354-6.748-10.353a35.396 35.396 0 0 1-1.198-3.206l-6.004.001zM72.83 110.514a295.281 295.281 0 0 0 54.151-23.972A295.443 295.443 0 0 0 167.5 58.76v19.46a91.66 91.66 0 0 1-7.495 7.174c-3.823 3.264-7.281 5.649-11.62 8.44-6.158 3.96-16.464 10.587-31.5 17.424-5.779 2.628-10.826 4.634-15.001 5.962a114.934 114.934 0 0 1-11.252 2.959l-17.802-9.665zM182.5 78.17V58.918a256.614 256.614 0 0 0 8.643 6.857c15.141 11.489 27.7 18.36 36.011 22.906 19.61 10.728 35.673 17.024 43.502 19.823 2.15.768 4.32 1.514 6.499 2.233l-17.517 9.511a80.847 80.847 0 0 1-2.545-.426c-9.48-1.751-16.39-4.864-23.214-8.17-10.031-4.861-23.767-11.517-35.664-20.101-2.862-2.065-8.189-5.909-14.4-12.057-.441-.437-.881-.88-1.315-1.324zm0 43.162v-20.063a204.925 204.925 0 0 0 24.002 15.963 205.068 205.068 0 0 0 31.801 14.601l-18.335 9.955a128.236 128.236 0 0 1-21.121-9.497 128.26 128.26 0 0 1-16.347-10.959zm-70.517 10.44a204.963 204.963 0 0 0 35.534-16.823 204.403 204.403 0 0 0 19.982-13.617v20.187a128.28 128.28 0 0 1-15.783 10.593 128.213 128.213 0 0 1-21.335 9.65l-18.398-9.99zm-47.9 94.654a267.539 267.539 0 0 0 5.083-46.914 267.532 267.532 0 0 0-4.954-56.609l18.528 10.06a103.91 103.91 0 0 1 2.348 8.25c.653 2.716 1.61 7.146 2.386 14.23 1.147 10.472 1.282 21.958.391 33.217-.623 7.872-1.549 13.183-2.046 15.648-.814 4.04-1.855 8.07-3.101 11.999l-18.635 10.119zm203.587-93.47 18.072-9.813a259.329 259.329 0 0 0-5.131 55.242 259.51 259.51 0 0 0 5.165 47.749l-18.635-10.118a61.9 61.9 0 0 1-1.78-5.241c-1.216-4.192-1.74-7.659-2.282-12.589-.648-5.902-1.318-12.005-1.413-20.641-.034-3.131.005-9.602.656-17.767.772-9.691 2.062-17.321 3.834-22.679a71.428 71.428 0 0 1 1.514-4.143zM149.956 152.39a104.375 104.375 0 0 0 10.236-5.089 103.888 103.888 0 0 0 7.308-4.564v19.179l-17.544-9.526zm32.544 9.741v-19.327a90.48 90.48 0 0 0 17.633 9.753l-17.633 9.574zm-79.004 42.896a212 212 0 0 0 2.171-33.834 211.905 211.905 0 0 0-2.177-26.965l19.087 10.363a114.796 114.796 0 0 1 1.758 17.973 114.711 114.711 0 0 1-1.744 22.095l-5.239 2.845-13.856 7.523zm124.341-50.444 19.008-10.321a193.698 193.698 0 0 0-2.567 30.329 193.79 193.79 0 0 0 2.208 30.209l-18.916-10.27a103.449 103.449 0 0 1-1.82-19.765c.03-6.761.732-13.543 2.087-20.182zm-86.402 29.844c.316-3.79.45-7.592.398-11.364a117.517 117.517 0 0 0-.406-8.236l18.054 9.802-18.046 9.798zm49.482-9.798 17.806-9.668a94.64 94.64 0 0 0-.556 10.263c.002 2.994.148 6.006.438 9.009l-17.688-9.604zM182.5 206.69v-19.562l17.816 9.673a93.51 93.51 0 0 0-7.848 3.732 93.887 93.887 0 0 0-9.968 6.157zm-32.529-9.829 17.529-9.518v19.17a94.297 94.297 0 0 0-7.594-4.785 94.458 94.458 0 0 0-9.935-4.867zm32.529 31.147a114.293 114.293 0 0 1 18.899-12.671 114.36 114.36 0 0 1 18.537-7.883l18.407 9.994a209.482 209.482 0 0 0-29.369 13.377 209.622 209.622 0 0 0-26.474 17.372v-20.189zm-70.755-10.392 18.555-10.075a115.274 115.274 0 0 1 21.062 9.255 115.359 115.359 0 0 1 16.139 11.031v20.387a216.244 216.244 0 0 0-25.208-16.52 216.624 216.624 0 0 0-30.548-14.078zm70.755 53.561a81.82 81.82 0 0 1 4.68-4.908c4.739-4.573 9.569-8.089 18.457-13.436 7.831-4.711 19.953-11.514 33.233-17.168 6.372-2.713 11.191-4.367 16.635-5.711a97.556 97.556 0 0 1 4.154-.931l17.487 9.495a256.65 256.65 0 0 0-12.127 4.206c-18.345 6.884-31.543 14.28-42.148 20.224-9.419 5.279-18.316 10.265-29.291 18.409a222.198 222.198 0 0 0-11.081 8.787v-18.967h.001zM72.953 238.678 90.41 229.2c3.434.716 6.869 1.596 10.229 2.619 8.355 2.546 14.3 5.42 21.184 8.748 3.449 1.667 12.658 6.284 23.662 13.127 8.741 5.436 12.523 8.464 15.307 10.927a89.23 89.23 0 0 1 6.708 6.598v19.414a302.221 302.221 0 0 0-44.139-29.806 302.245 302.245 0 0 0-50.408-22.149z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-jager'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var kaid = {
  id: 'kaid',
  name: 'Kaid',
  role: 'Defender',
  unit: 'GIGR',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'ma',
    season: 'Y3S4',
    height: 195,
    weight: 98
  },
  bio: {
    real_name: 'Jalal El Fassi',
    birthplace: 'Aroumd, Morocco'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#a2794b" d="M73 73h204v204H73z"></path><path d="M309.973 150.095 257.529 92.65h-42.974v-3.816l-16.681 1.053V48.546a9.788 9.788 0 0 0-.217-2.367c-.764-3.533-3.41-6.378-7.128-7.702l-7.755-3.403-14.394-6.316-1.537-.674h-1.678c-4.963 0-9 4.037-9 9V89.89H156l-16.556-1.056v3.816H91.47l-52.444 57.445 112.147 113.623a106.4 106.4 0 0 1-4.896 15.838c-3.945 9.906-8.35 16.59-9.444 18.222-2.731 4.073-5.18 7.725-9.444 11.611-1.615 1.472-2.709 2.265-7.222 6.111a489.121 489.121 0 0 0-6.958 6.042c2.301.259 5.709.636 9.847 1.069 7.434.779 11.151 1.169 11.833 1.167 10.798-.029 19.149-5.605 21.897-7.49 3.557-2.439 6.134-5.002 8.547-7.732 8.957-10.133 15.403-22.272 19.657-31.834l124.983-126.627z"></path><path style="fill:#fff" d="M206.333 97.583c-5.297.329-10.799.569-16.454.724v-10.64h-.004V48.381a1.812 1.812 0 0 0-.036-.51c-.283-1.309-1.966-1.854-2.2-1.926l-22.472-9.861a1 1 0 0 0-1 1v61.231a475.589 475.589 0 0 1-16.75-.732v8.25c4.68.266 9.491.475 14.424.618v4.799l2.326 3.041v26.322a362.027 362.027 0 0 0-36.25-26.072l61.963 56.458v-56.715l1.961-3.076v-4.754c4.957-.143 9.79-.353 14.493-.621l-.001-8.25zm-41.666 111.875 23.125 22.25a159.556 159.556 0 0 1-6.292 30c-2.72 8.705-5.637 17.821-12.292 28.25-5.623 8.812-14.528 22.766-29.479 25.312-2.934.5-5.438.447-7.146.312a94.453 94.453 0 0 0 7.632-8.741c11.235-14.589 15.274-28.721 18.43-40.182 5.049-18.336 5.565-33.542 5.938-44.55.177-5.214.148-9.573.084-12.651z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-kaid'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var kali = {
  id: 'kali',
  name: 'Kali',
  role: 'Attacker',
  unit: 'NIGHTHAVEN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'in',
    season: 'Y4S4',
    height: 170,
    weight: 67
  },
  bio: {
    real_name: 'Jaimini Kalimohan Shah',
    birthplace: 'Amreli, India'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#00bfca" d="M277 277H73V90.389l33.229-33.868L122.5 73h104.778l16.154-16.447L277 90.389V277z"></path><path d="m261.77 75.036-30.568 30.636c-9.449-2.098-16.474-5.134-21.258-7.617-6.822-3.541-8.826-5.809-16.111-8.5-3.831-1.415-10.442-3.789-19.278-3.722-8.36.063-14.613 2.281-18.111 3.556-5.467 1.992-3.632 2.207-17.479 9.04-5.784 2.854-11.136 5.299-18.354 7.016-.616.146-1.179.27-1.712.383l-30.94-30.685L73 90.389V215.25l73.083 60.611 28.819 28.694 29.014-29 73.083-60.514V90.388L261.77 75.036zM175 91.208c9.665 0 17.5 7.835 17.5 17.5s-7.835 17.5-17.5 17.5-17.5-7.835-17.5-17.5 7.835-17.5 17.5-17.5zm0 70.667-47.359-47.313a53.474 53.474 0 0 1 8.942 3.063c3.287 1.463 5.029 2.639 7.5 4.083 3.801 2.222 10.941 6.396 19.816 8.532 2.178.524 5.804 1.361 10.656 1.426 2.581.034 8.632-.109 17.593-3.22 10.062-3.493 11.452-6.469 21.268-10.697a79.41 79.41 0 0 1 8.92-3.212L175 161.875z"></path><path style="fill:#fff" d="M175 126.208c9.665 0 17.5-7.835 17.5-17.5s-7.835-17.5-17.5-17.5-17.5 7.835-17.5 17.5 7.835 17.5 17.5 17.5zm0-26a8.5 8.5 0 1 1-.001 17.001 8.5 8.5 0 0 1 .001-17.001z"></path><path style="fill:#fff" d="M73 90.389v98.861l101.556 101.472L277 189.111V90.389l-102 84.976z"></path><path d="m161.889 216.5 12.528 64.542 12.375-64.584-12.459-24.736zM56.625 124.292 73 133.735V157a137.812 137.812 0 0 0 11.801 13.954c2.194 2.266 4.001 3.942 7.616 7.296 4.515 4.188 5.787 5.13 7.083 5.944 3.578 2.247 6.768 3.158 8.5 3.639 7.541 2.094 13.935 1.161 17.928.537 3.652-.571 4.882-1.137 13.322-3.62a584.865 584.865 0 0 1 15.194-4.25l-97.819-66.062v9.854zm40.125 25.375 38.333 24.688c-1.693 1.774-5.828 5.609-12.272 6.969-7.529 1.589-16.802-.497-22.783-7.74-5.504-6.665-6.771-15.94-3.278-23.917zm98.333 30.805a211.05 211.05 0 0 1 10.64 2.633c8.839 2.43 11.341 3.731 17.902 4.811 5.681.935 9.234.854 11.375.708 1.834-.125 4.761-.34 8.056-1.347 1.642-.502 5.241-1.771 11.944-7.111 1.298-1.034 6.995-5.632 14.833-14.792 3.158-3.69 5.584-6.86 7.167-9v-21.958l16.271-10.562v-9.542l-98.188 66.16zm48.703-1.843c-9.294 5.531-21.505 3.688-28.939-4.532l38.215-24.451c4.559 10.718.477 23.179-9.276 28.983z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-kali'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var kapkan = {
  id: 'kapkan',
  name: 'Kapkan',
  role: 'Defender',
  unit: 'SPETSNAZ',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'ru',
    season: 'Release',
    height: 180,
    weight: 80
  },
  bio: {
    real_name: 'Maxim Basuda',
    birthplace: 'Kovrov, Russia'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#a62222" d="M73 73h204v204H73z"></path><path d="M252.75 46.955V33H97.25v80.667h155.5V99.653c12.269-2.699 21.306-13.482 21.306-26.347 0-12.867-9.037-23.652-21.306-26.351zm0 37.739V62.968c3.929 1.939 6.551 5.777 6.833 10.06.318 4.821-2.381 9.443-6.833 11.666zm-74.738 50.084h-6.442l-.579.14c-2.547.616-7.24 2.342-10.059 6.989-1.655 2.729-2.247 5.881-1.919 10.22.453 5.993 2.465 11.92 5.986 17.641v65.043c-.127 1.101-.721 5.054-4.072 7.804-2.334 1.915-4.844 2.293-6.163 2.491-3.565.537-6.339-.419-7.945-.994-1.86-.666-3.958-1.417-5.736-3.486-1.414-1.646-1.994-3.389-2.25-4.431l13.806 2.556-7.645-10.675a22.485 22.485 0 0 1-1.941-3.065c-1.61-3.068-2.09-5.866-2.524-8.452a42.313 42.313 0 0 1-.499-4.345l-.154-33.379-9.125 16.417c-2.27 3.755-7.651 13.254-9.834 24.285-.942 4.762-1.159 9.154-1.249 11.103-.255 5.539.177 8.169.5 9.695a30.356 30.356 0 0 0 1.417 4.75c.712 1.825 2.732 6.84 7.583 11.208 3.168 2.853 6.145 4.171 8.583 5.25 7.622 3.374 14.2 3.381 16.116 3.338 1.703-.038 4.627-.113 8.264-1.158 5.406-1.552 9.574-4.359 12.662-7.238 3.088 2.879 7.256 5.686 12.662 7.238a29.94 29.94 0 0 0 8.264 1.157c6.992 0 12.653-2.356 16.036-3.763 2.162-.9 5.122-2.131 8.295-4.86 4.17-3.585 7.118-8.343 8.762-14.143 1.206-4.254 1.16-7.6 1.106-11.475-.023-1.64-.19-6.004-1.249-11.104-2.033-9.793-6.531-18.257-9.947-23.634l-9.47-17.124.265 20.196c.027 1.293.212 11.279-.803 18.627-.317 2.297-.807 4.734-2.181 7.409a20.194 20.194 0 0 1-1.941 3.065l-8.006 10.654 13.854-2.542c-.233 1.016-.763 2.68-2.083 4.25-1.552 1.845-3.373 2.582-5.229 3.333-1.544.625-3.607 1.46-6.401 1.442-1.451-.009-4.975-.026-8.068-2.599-3.091-2.571-3.874-6.161-4.072-7.804v-65.042c3.52-5.721 5.533-11.648 5.986-17.641.328-4.339-.264-7.491-1.919-10.22-2.819-4.647-7.512-6.374-10.059-6.989l-.583-.138z"></path><path style="fill:#fff" d="M153.667 53H107.75v-8h45.917v-7H102.25v32h51.417zm94.083-1.673V38h-52.083v7h46.083v8h-46.083v17h52.083V56.37c9.053.651 16.194 7.975 16.194 16.936s-7.141 16.285-16.194 16.936V76.667h-52.083v8.611h46.083v8h-46.083v15.389h52.083V95.281c11.855-.516 21.306-10.156 21.306-21.975 0-11.82-9.451-21.463-21.306-21.979zm-94.083 41.951H107.75v-8h45.917v-8.611H102.25v32h51.417z"></path><path style="fill:#fff" d="M224.917 230.708c-.012-.838-.091-5.08-1.145-10.157-2.015-9.706-6.623-17.799-9.272-21.968.305 3.887.649 11.167-.501 18.727-.643 4.225-1.546 7.176-3.04 10.023a27.356 27.356 0 0 1-2.375 3.75 15.248 15.248 0 0 0 7.438-1.687c.232 1.188.439 2.882.271 4.896-.079.938-.517 5.265-3.375 9.083-5.256 7.022-14.632 6.899-16.376 6.835-2.206-.081-6.874-.251-11.083-3.751-5-4.159-5.738-10.012-5.875-11.375v-66.771c2.658-4.034 5.486-9.767 6-16.562.291-3.852-.331-5.803-1.208-7.25-2.036-3.357-5.7-4.418-6.958-4.722h-.167v-31.111h13.417V38h-32.001v70.667h13.583v31.111h-.083c-1.258.304-4.922 1.365-6.958 4.722-.878 1.447-1.5 3.398-1.208 7.25.514 6.795 3.342 12.528 6 16.562v66.771c-.137 1.363-.875 7.216-5.875 11.375-4.208 3.5-8.877 3.671-11.083 3.751-1.744.064-11.12.188-16.376-6.835-2.858-3.819-3.296-8.145-3.375-9.083a17.784 17.784 0 0 1 .271-4.896 15.248 15.248 0 0 0 7.438 1.687 27.453 27.453 0 0 1-2.375-3.75c-1.494-2.847-2.397-5.797-3.04-10.023-1.151-7.56-.806-14.84-.501-18.727-2.649 4.169-7.257 12.262-9.272 21.968-1.054 5.077-1.133 9.319-1.145 10.157-.051 3.664-.09 6.49.917 10.042.538 1.899 2.171 7.382 7.212 11.716 2.518 2.165 4.864 3.164 6.955 4.034 4.25 1.768 12.01 4.998 21 2.417 7.554-2.169 12.109-7.324 14.042-9.865 1.933 2.541 6.488 7.696 14.042 9.865 8.99 2.581 16.75-.648 21-2.417 2.091-.87 4.437-1.869 6.955-4.034 5.041-4.334 6.673-9.817 7.212-11.716 1.004-3.55.965-6.377.914-10.041zm-48.278-74.569a42.09 42.09 0 0 1-1.875 6.236 36.199 36.199 0 0 1-1.618-4.799c-.118-.451-.261-1.118-.548-2.451-.656-3.048-1.018-5.1-.303-6.305.071-.12.222-.368.51-.58.169-.125.609-.401 1.945-.345.988.042 1.482.063 1.835.267 1.588.916.594 5.49.054 7.977z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-kapkan'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var lesion = {
  id: 'lesion',
  name: 'Lesion',
  role: 'Defender',
  unit: 'SDU',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'hk',
    season: 'Y2S3',
    height: 174,
    weight: 82
  },
  bio: {
    real_name: 'Liu Tze Long',
    birthplace: 'Tseung Kwan O (Junk Bay), Hong Kong'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#a54225" d="M73 73h204v204H73z"></path><path d="m300.833 86.319-17.656-8.209 45.625-60.631-89.951 69.172-23.768-11.985 11.77 21.211-56.798 43.678-35.764-72.639h-6.583l12.792 75.417-45.799-16.087-12.472-27.913-3.745 22.217L17.25 99.042l79.941 65.467-11.247 17.602 21.327-9.347 19.062 15.611-26.632 37.558-22.313 6.428 14.492 4.601-49.979 70.483 97.224-71.284 6.208 13.117 2.799-19.721 15.27-11.196 58.069 95.5-20.806-98.944 81.24 22.865-41.812-35.506 12.572-6.816-23.268-2.267-20.024-17.004 18.458-24.529 14.722 10.397-7.531-19.954 38.83-51.602 26.981-4.182z"></path><path style="fill:#fff" d="m134.325 80.678 12.716 63.988 11 3.833 4.917-3.5-28.633-64.321zm-97.769 28.961 63.944 49.5 2.611-3.972 4.139 2.805-8.194 12.972 12.611-5.555 1.333 3.25 20.667 16.028 24.333.555-3.875-29.389L84.431 128.5l5.791-.111-5.93-13.097-2.098 13.555-5.027-.889.541-2.194zm123.222 48.083 67.606-52.618a46.252 46.252 0 0 1 7.811-5.132l-.639-.417 59.083-46.25-16.806 22.056-3.444-1.667-1.944 4.361L283.854 84l-14.229 2.208.833-2.646-38.556 50.396-.208-.472-4.917 2.111 5 12.875-12.528-9.201-3 4.042 5.562 4.021-31.396 40.806-30.427-2.649c-.069-9.257-.14-18.513-.21-27.769zm67.66-71.18 6.979 12.291 4.75-6.333zm-23.188 96.875-9.917 12.667 2.167 9.611 58.861 18.111-22.528-17.833-9.667 5.222-2.444-4.444 14.889-7.972-13.653-1.257c-5.902-4.703-11.805-9.404-17.708-14.105zm-16.542 17.25 21.896 83.687-38.493-71.382zm-28.569-14.361 25.083 7.361-34.514 26.188-4.667-1.208-2.229 13.562-6.458-13.938-4.708 2.104 4.562 9.583-70.968 53.521 33.524-44.465 7.292 2.389 1.333-4.736-12.806-4 14.667-4.333a8.002 8.002 0 0 0 .542-3.833l25.361-33.528 23.986-4.667z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-lesion'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var lion = {
  id: 'lion',
  name: 'Lion',
  role: 'Attacker',
  unit: 'CBRN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'fr',
    season: 'Y3S1',
    height: 185,
    weight: 87
  },
  bio: {
    real_name: 'Olivier Flament',
    birthplace: 'Toulouse, France'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M315.227 311.494 254.777 305H45V45h260v75.938l32.167-2.826-28.444 49.472 22.686 35.079L291.21 236l24.017 75.494z"></path><path style="fill:#fea52f" d="M282.5 284.083 231.203 277H73V73h204v71.477l24.361-5.977-23.931 30.542 21.611 29.5-34.764 28.597 18.223 56.944z"></path><path style="fill:#fff" d="m222.969 168.814 78.392-30.314-53.917 48.833 51.597 11.208-56.833 11.917 40.292 73.625-82.222-71.528 22.691-43.741z"></path><path d="M154.167 30.333A297.309 297.309 0 0 0 97.723 47 295.59 295.59 0 0 0 73 58.417v220.028l35.458 2.431 27.625-22.083 50.875 7.083-9.998 11.541a49.084 49.084 0 0 0 12.716 1.108c18.029-.799 30.22-11.501 33.657-14.607 3.162-2.858 7.811-7.7 11.889-15l-7.083-7.139a23.303 23.303 0 0 0 1.587-2.126c6.385-9.662 3.985-21.814 2.233-27.944-2.266 2.987-5.774 6.82-10.895 10.094a41.452 41.452 0 0 1-6.147 3.239 62.656 62.656 0 0 1-.333-2.708s-.34-3.367-.315-7c.127-18.142 6.983-33.984 6.983-33.984 2.858-6.604 6.177-14.062 13.709-21.066a50.106 50.106 0 0 1 6.956-5.408 25.343 25.343 0 0 1 4.427 4.587c3.429 4.608 4.471 9.36 5.157 12.649.431 2.068.626 3.797.722 4.944a22 22 0 0 0 4.667-3.667c3.296-3.408 4.586-6.989 5.5-9.611 1.773-5.088 2-9.737 1.819-13.111l6.292-8.167-7.75-11.083 11.417-20.875a302.6 302.6 0 0 0-52.055-15.541l-4.333-13.556-23.611-3.667a399.71 399.71 0 0 0-32.612-41 30.02 30.02 0 0 0-7.39-6.445z"></path><path style="fill:#fea52f" d="m240.333 120 17.028 4.306 4.667-9.167-47.736-13.472-2.959-10.167-25.583-4.417a190.856 190.856 0 0 0-36.166-43.666 525.509 525.509 0 0 0-22.861 6.861c-11.078 3.603-21.191 6.922-33.667 12.444A262.4 262.4 0 0 0 73 72.639v10.556a108.365 108.365 0 0 1 43.199-12.488c4.906-.354 11.494-.49 19.259.336-20.893 6.897-36.584 12.531-43.597 15.264-3.219 1.255-7.369 2.973-12.306 5.722a92.843 92.843 0 0 0-6.556 4.014V134.5l32.25-17.333L73 158.5v101.056a52.011 52.011 0 0 0 15.917-5.472 2910.847 2910.847 0 0 0 75.417-120.528l-40.688 103.215a182.875 182.875 0 0 0 21.632 8.396c3.247 1.029 18.5 5.761 39.889 8 6.4.67 14.624 1.25 24.25 1.208a85.62 85.62 0 0 1-9 12.479 47.92 47.92 0 0 0 10.493-5.543s4.381-3.069 9.653-9.687c.316-.396.843-1.108 1.125-2.146a5.603 5.603 0 0 0 .188-1.688c-3.766-2.93-22.281-17.737-27.535-37.338-1.643-6.131-2.007-12.454-2.007-12.454-.671-11.653 2.154-20.356 2.917-22.583 2.657-7.756 6.533-13.535 9.625-17.354l-47.514 36.882 27.361-51.556 36.889-3.444a25.798 25.798 0 0 0-5.327 10.74c-.486 2.126-1.329 7.068.382 12.899a25.468 25.468 0 0 0 2.833 6.306c1.117-3.367 3.305-8.508 7.727-13.534.901-1.025 2.374-2.682 4.648-4.438 1.204-.93 5.08-3.778 15.667-6.583a103.416 103.416 0 0 1 13.597-2.639A174.717 174.717 0 0 0 240.333 120zm-67.75-10.667 14.125-15.542 33.208 17.958-47.333-2.416z"></path><path style="fill:#fff" d="M184.444 100.736c.386.004.978.02 1.696.075 2.971.229 5.135.913 6.225 1.249 2.71.834 6.633 1.921 11.645 3.305-.346.458-2.553 3.354-4.438 4.781 0 0-1.25.947-2.062.771-.452-.098-.917-.323-.917-.323a4.03 4.03 0 0 1-.34-.184 57.508 57.508 0 0 1-11.809-9.674zm63.473 50.972a21.302 21.302 0 0 1 2.906-1.042 21.693 21.693 0 0 1 7.552-.708c.415 1.734.971 4.808.542 8.125-.24 1.855-.772 3.665-.944 4.25a22.562 22.562 0 0 1-.917 2.556c-.747 1.745-1.179 2.752-1.625 2.722-.626-.042-.636-2.085-1.708-5.194-.522-1.512-1.022-2.487-2.021-4.434a54.1 54.1 0 0 0-3.785-6.275zm-19.229 68.75c.158 1.965.188 5.782-1.688 9.979a20.237 20.237 0 0 1-3.979 5.854 11.8 11.8 0 0 1-2.5-1.208c-2.726-1.744-4.059-4.202-4.646-5.521a32.439 32.439 0 0 0 4.833-2.375 32.85 32.85 0 0 0 7.98-6.729z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-lion'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var maestro = {
  id: 'maestro',
  name: 'Maestro',
  role: 'Defender',
  unit: 'GIS',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'it',
    season: 'Y3S2',
    height: 185,
    weight: 87
  },
  bio: {
    real_name: 'Adriano Martello',
    birthplace: 'Rome, Italy'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#8a8b3a" d="M73 73h204v204H73z"></path><path d="M277 81.917 81.5 253.375c7.433-4.348 15.078-8.696 15.333-8.292.099.157-.942.974-1.292 1.25-3.909 3.092-13.208 11.237-27.134 23.697l27.898-14.544-35.594 32.974 22.847-11.448 6.517-.021-7.554 7.633 21.59-11.403 21.528-15.583L277 164V81.917z"></path><path d="M239.7 232.012c0-.722.005-1.862.029-3.262.104-6.006.415-7.69.764-9 .236-.889.539-1.999 1.25-3.333 1.019-1.913 2.237-3.083 2.729-3.563 2.169-2.117 7.183-7.388 14.063-14.604 5.236-19.699 6.946-36.177 7.5-47.75.388-8.098.706-15.488-.583-25.417-1.039-7.998-3.026-22.234-11.884-37.963-2.506-4.448-7.618-12.669-16.228-21.12-3.088-3.031-9.741-9.474-19.722-14.889-17.688-9.597-34.479-9.811-42.785-9.819-8.323-.009-25.219.17-43 9.819-9.983 5.417-16.639 11.863-19.722 14.889-8.609 8.451-13.721 16.672-16.227 21.121-8.858 15.728-10.846 29.965-11.884 37.962-1.289 9.929-.971 17.318-.583 25.417.554 11.573 2.264 28.051 7.5 47.75 6.88 7.216 11.894 12.487 14.063 14.604.492.48 1.71 1.65 2.729 3.563.711 1.334 1.014 2.445 1.25 3.333.349 1.31.66 2.994.764 9 .024 1.4.029 2.54.029 3.262l-27.043-18.179 26 56.125a96.348 96.348 0 0 0 3.198 5.648c1.267 2.075 17.223 24.535 39.136 55.123l4.208-39.229h38.951l4.208 39.229c21.913-30.588 37.869-53.048 39.136-55.123a98.465 98.465 0 0 0 3.198-5.648l26-56.125-27.044 18.179z"></path><path style="fill:#fff" d="M242.869 89.889c-.952-1.607-4.612-7.655-10.778-14.5-4.314-4.79-10.523-11.567-20.62-17.169-9.355-5.19-18.425-7.362-25.464-8.247a257.176 257.176 0 0 0-3.654 15.864 253.874 253.874 0 0 0-1.632 9.157 212.38 212.38 0 0 0-2.333 23.396c-.881 19.271-3.068 86.056-3.444 86.056-.371-.001-2.116-64.884-3.568-85.935a273.833 273.833 0 0 0-2.674-23.516 248.845 248.845 0 0 0-1.632-9.157 257.176 257.176 0 0 0-3.654-15.864c-7.038.885-16.109 3.057-25.464 8.247-10.097 5.602-16.305 12.38-20.62 17.169-6.166 6.845-9.826 12.893-10.778 14.5-12.542 21.174-12.292 43.434-12.144 56.529.116 10.261 1.354 18.907 2.089 23.916a205.39 205.39 0 0 0 4.889 23.611 135.328 135.328 0 0 0 12.361 16.306 19.605 19.605 0 0 1 1.765 2.825s1.452 2.836 2.034 6.571c.589 3.779.89 13.789.174 27.132l-15.611-10.278 12.111 27.056 4.556 6.722L145.097 305l6.181-76.167a10.041 10.041 0 0 0-.218-1.663s-.41-1.886-1.63-3.731c-11.084-16.761-23.744-19.039-23.744-19.039a28.075 28.075 0 0 0-6.297-.401l-13.944-57.5 19.5 16.444 33.167 6.694v38.556l16.314 5.179v.183l.287-.091.288.091v-.183l16.314-5.179v-38.555l33.167-6.694 19.5-16.444-9.342 38.611 12.833-10.472-14.821 18.884-1.721 7.144 8.403-2.5-35.938 29.292 8.493-.792-13.833 9.611a29.511 29.511 0 0 0-.583 5.718c-.007 1.68.131 2.862.611 6.65.376 2.97.694 5.421.917 7.132a6653.184 6653.184 0 0 0-23.667 14.5l24.889-3 4.069 35.139L230.334 270l4.869-6.444 12.111-27.056-15.611 10.278c-.716-13.343-.415-23.352.174-27.132.582-3.735 2.034-6.571 2.034-6.571a19.548 19.548 0 0 1 1.765-2.825 135.291 135.291 0 0 0 12.361-16.306 205.39 205.39 0 0 0 4.889-23.611c.734-5.009 1.973-13.655 2.089-23.916.146-13.095.397-35.354-12.146-56.528z"></path><path style="fill:#fff" d="m290.292 194.5-2.708 4.333c-1.064 2.215-1.176 4.017-1.125 5.125.176 3.833 2.648 7.085 4.106 9.002.706.929 1.338 1.914 2.06 2.831.921 1.169 1.278 1.504 1.417 2.167.226 1.083-.328 2.1-1.125 3.25-1.44 2.077-2.792 3.314-4.557 4.986-2.344 2.221-3.545 3.364-4.985 4.93-1.489 1.621-2.233 2.431-2.917 3.417-1.864 2.689-3.567 6.494-4.944 7.554a5.389 5.389 0 0 1-1.99.939 4.56 4.56 0 0 1-.351.056 11.476 11.476 0 0 0-.935-.125l-.068-.006c-.318-.03-.753-.07-1.251-.07-.707 0-1.358.08-1.99.246-1.562.408-3.019 1.386-4.329 2.907-.992 1.151-1.491 2.131-1.822 2.78-.043.085-.085.168-.129.251-.288.317-1.214 1.081-2.111 1.821-1.641 1.354-2.32 1.915-3.405 2.504-1.021.555-1.503.806-2.204.934-.39.072-.759.139-1.055.139a.948.948 0 0 1-.335-.047c-.266-.147-1.054-.996-1.688-1.679-.337-.363-.416-.471-.609-.731a23.762 23.762 0 0 0-1.32-1.642c-.862-.995-1.436-1.563-1.991-2.113-.513-.508-.997-.987-1.838-1.948-.595-.679-.914-1.079-1.233-1.649a7.658 7.658 0 0 1-.502-1.093l-2.15-5.86-5.249 3.378c-1.277.822-2.536 1.283-3.74 1.371a7.573 7.573 0 0 1-.562.019c-.598 0-1.128-.055-1.446-.089-.666-.069-1.236-.178-1.84-.292-1.04-.197-2.218-.421-3.733-.421-.384 0-.779.015-1.174.044-.616.045-1.216.122-1.782.229-1.535.29-4.103.774-6.259 2.945-1.621 1.632-2.186 3.399-2.428 4.154-.155.485-.25.905-.312 1.272-.989.071-2.115.347-3.715.903a38.473 38.473 0 0 0-2.497.962 80.957 80.957 0 0 0-3.706 1.706l-.065.032a125.897 125.897 0 0 0-4.752 2.27c-4.164 2.098-7.024 3.829-13.299 7.657a6817.673 6817.673 0 0 0-10.067 6.152 214.52 214.52 0 0 0 12.333-1.125c6.715-.81 10.072-1.215 12.248-2.081.353-.141 3.016-1.211 5.794-1.752 0 0 2.195-.427 4.575-.384.337.006.547.022.687.032 1.24.089 2.239.436 3.042.715.422.147.743.276 1.082.414.905.367 1.931.782 3.569.946.419.042.836.063 1.241.063.921 0 1.802-.11 2.621-.326 1.608-.425 2.627-1.124 3.526-1.741l.188-.129c1.722-1.177 2.444-1.664 3.023-1.901.474-.195.761-.306 1.137-.314h.007s.554-.001 1.092.085c1.24.197 2.555 1.444 2.556 1.444 1.163 1.102 3.822 3.094 7.668 5.85.55.345 1.372.828 2.416 1.317 1.454.681 2.688 1.259 4.389 1.417.693.064 1.729.15 3-.222a7.236 7.236 0 0 0 2.75-1.528 3.14 3.14 0 0 1 1.028.722c.316.34.361.55.667.833.339.315.687.43 1.167.583 1.24.396 1.859.594 2.071.637 2.815.576 6.948 2.482 13.311 3.224 4.129.481 6.011.1 6.59-.028a15.649 15.649 0 0 0 4.722-1.917c2.686-1.641 4.139-3.651 5.978-6.249a38.062 38.062 0 0 0 3.656-6.415l.029-.08c.119-.327.318-.875.704-1.541.582-1.004 1.187-1.583 1.254-1.645.194-.182.267-.235 1.684-1.049l.346-.199c4.506-2.591 5.737-3.415 6.944-4.388 1.105-.89 1.95-1.636 2.766-2.584.496-.577 1.445-1.694 2.177-3.23.909-1.905 1.075-3.596 1.17-4.662.595-6.664.958-12.272 1.125-15 .009-2.583.325-4.602.625-6 .266-1.241.533-2.056.542-3.458.005-.781-.001-2.249-.708-3.958-.165-.4-.871-2.025-2.51-3.489-.335-.299-1.058-.763-2.49-1.678-2.271-1.451-2.319-1.417-3.625-2.292a57.703 57.703 0 0 1-2.906-2.076c-.155-.118-.304-.234-.601-.465-2-1.557-2.261-1.834-2.41-2-.275-.308-.696-.786-1.027-1.514-.415-.913-.45-1.691-.473-1.903-.103-.968-1.28-2.407-6.04-4.46z"></path><path d="M239.667 245.292c.166.452.429 1.09.833 1.812.552.986 1.116 1.68 1.833 2.5 1.859 2.124 2.291 2.285 3.812 4.042 1.231 1.421 1.023 1.402 2.042 2.5 1.539 1.659 2.332 2.514 3.688 2.993 1.56.551 2.977.291 3.958.111 1.514-.278 2.541-.835 3.688-1.458 1.51-.82 2.448-1.594 4.201-3.042 1.826-1.507 2.738-2.26 3.222-3.111.394-.693.635-1.394 1.444-2.333.913-1.06 1.554-1.268 1.806-1.333.519-.136 1.069-.075 1.583-.028.627.058.784.155 1.347.16.104.001.442.001 1.271-.146.922-.163 1.383-.245 1.938-.458a6.955 6.955 0 0 0 1.75-1 8.525 8.525 0 0 0 1.5-1.472c.259-.313.576-.697.889-1.25.405-.716.465-1.112.806-2.028.314-.845.607-1.433.944-2.111a24.29 24.29 0 0 1 1.611-2.74c.493-.727 1.246-1.747 3.089-3.696.874-.924 1.442-1.475 3.495-3.453 3.859-3.718 4.045-3.887 4.521-4.5 2.066-2.666 2.542-4.642 2.66-5.185.189-.866.436-2.061.057-3.472-.207-.773-.519-1.301-1.655-2.927-1.643-2.352-1.864-2.497-2.611-3.611-1.32-1.969-2.172-3.24-2.472-5.028-.149-.887-.244-2.385.417-4.306.088.434.253 1.067.583 1.778.466 1.001 1.045 1.692 2.13 2.817 1.375 1.426 2.063 2.139 3.037 2.933 1.706 1.391 2.449 1.618 7.417 4.792 1.148.734 2.088 1.352 2.625 2.542.522 1.156.485 2.459.472 2.903-.03 1.074-.264 1.866-.324 2.076-.436 1.53-.487 3.167-.857 9.022-.624 9.88-.447 4.768-.806 10.472-.178 2.832-.3 5.313-2.056 7.486-.487.603-.996 1.013-2.014 1.833-.915.737-1.893 1.413-6.299 3.947-1.779 1.023-2.255 1.278-2.951 1.928-.206.193-1.218 1.154-2.167 2.792-.643 1.11-.957 2.012-1.103 2.409-1.526 4.168-4.557 7.605-4.967 8.063-1.341 1.499-2.398 2.654-4.222 3.403-1.055.433-2.144.639-4.362.65 0 0-6.027.03-15.272-3.41-.563-.209-1.151-.469-1.688-.997-.267-.263-.314-.388-.623-.688a5.441 5.441 0 0 0-1.472-1c-.256-.114-2.073-.926-3.389-.139-.666.398-.558.82-1.405 1.3a3.684 3.684 0 0 1-1.63.461c-1.238.067-2.204-.515-2.804-.888-3.45-2.143-4.803-3.143-4.803-3.143-1.253-.925-2.697-2.003-4.573-3.355 0 0-.919-.662-2.688-1.792-1.047-.669-1.321-.809-1.625-.938a7.281 7.281 0 0 0-2.958-.562c-1.297.028-2.241.406-2.927.688-1.089.447-2.041 1.098-3.944 2.398-.857.585-1.335.944-2.171 1.164-.292.077-.985.232-2.088.122-1.368-.137-1.84-.529-3.509-1.108-1.017-.353-2.463-.844-4.323-.978-.675-.049-1.681-.114-2.927.145-1.415.294-2.392.849-2.694 1.014-1.325.722-4.012 1.739-9.958 3.056.346-.188.869-.475 1.5-.833 1.934-1.098 2.581-1.555 3.861-2.306 1.592-.933 2.821-1.531 4.528-2.361.651-.317 1.915-.935 3.556-1.639a34.037 34.037 0 0 1 2.167-.833c2.195-.762 2.715-.699 3.098-.556.491.184.617.449 1.292.609.373.088.931.22 1.383-.005.171-.085.633-.374 1.005-2.77.247-1.591.093-1.785.37-2.651.155-.486.441-1.376 1.213-2.154 1.062-1.069 2.455-1.332 3.639-1.556.169-.032.612-.111 1.221-.156 2.293-.168 3.483.408 5.862.656.502.052 1.657.173 2.889.083 1.357-.1 3.521-.506 6.084-2.154z"></path><path style="fill:#fff" d="M282.25 121.222c-3.202.967-5.322 2.671-6.333 3.5-2.302 1.887-3.596 3.814-4.417 5.056a26.144 26.144 0 0 0-3.71 8.961 10.24 10.24 0 0 1-.79 2.899c-.667 1.515-1.541 2.477-1.889 2.861-2.056 2.273-3.89 4.747-6.028 6.944-4.047 4.16-7.139 7.374-9.622 11.699-.8 1.394-1.835 3.421-2.133 6.152-.046.424-.198 1.987.127 4.016.206 1.285.654 3.085 3.156 7.605a84.2 84.2 0 0 0 3.806 6.222c.601.817 1.4 1.93 2.306 3.278a86.101 86.101 0 0 1 1.861 2.889c1.913 3.114 2.455 4.478 2.708 5.167.166.452.313.852.458 1.417.514 1.995.414 3.724.25 4.861a14.071 14.071 0 0 0-2.556 1.708c-1.321 1.113-2.106 2.197-2.611 2.903a15.97 15.97 0 0 0-1.463 2.469c-.219.47-.379.883-.524 1.259a31.024 31.024 0 0 0-.748 2.186c-.605 1.959-.883 2.954-1.068 3.613-.103.369-.162.579-.231.794-.052.16-.096.284-.129.377-.562 1.565-.842 2.347-1.225 3.079-.24.46-.617 1.096-1.194 1.806a9.285 9.285 0 0 0-3.5-3.806c-.422-.254-2.118-1.227-4.514-1.306-2.122-.07-3.663.599-5.444 1.396-1.158.518-3.237 1.569-5.608 3.602-1.687 1.447-4.252 4.016-6.395 8.054l-.163.307c-.318.602-.618 1.171-1.176 1.846-.509.617-1.019.984-1.21 1.128-.768.576-.739.686-1.927 1.688-3.666 3.092-7.055 4.678-6.792 6.104.392 2.121 8.598 2.431 8.644 2.431h.043l.11-.002a44.551 44.551 0 0 0 7.394-.838c.323-.065 3.189-.668 6.236-2.182.87-.432 1.879-1.01 2.767-1.891.138.16.245.291.311.375 1.142 1.482 1.9 2.465 2.84 4.023.741 1.228 1.484 2.568 1.545 2.678l.005.008c.202.365.365.667.502.923.559 1.036.963 1.784 1.812 2.723.512.566 2.069 2.288 4.689 3.189 1.083.372 2.224.561 3.389.561 1.246 0 2.259-.214 2.865-.341l.065-.014c2.822-.593 4.691-1.952 5.489-2.532 4.528-3.291 6.797-4.94 8.719-6.184 1.131-.732 2.158-1.502 3.151-2.246 1.065-.799 2.072-1.554 3.071-2.155.192-.116.336-.205.561-.36.987-.678 1.718-1.426 2.064-1.853 1.133-1.396 1.325-3.265 1.396-3.958.212-2.066-.307-3.717-1.068-6.144a30.342 30.342 0 0 0-.858-2.38 2.454 2.454 0 0 1-.178-1.018 2.54 2.54 0 0 1 .647-1.559c5.192-5.967 8.975-10.317 10.187-11.586.214-.224.845-.873 1.229-1.917.284-.772.338-1.5.312-2.2-.091-2.393-1.134-4.643-1.562-5.529a36.31 36.31 0 0 0-3.688-6.062 37.774 37.774 0 0 0-4.667-5.104 10.042 10.042 0 0 0 2.271-3.042c.173-.358.837-1.787.979-3.792.188-2.645-.645-4.73-1.167-5.792a12.01 12.01 0 0 1-.229-4.667c.219-1.444.655-2.469 1.354-4.083a34.467 34.467 0 0 1 2.542-4.785 7.968 7.968 0 0 0 1.639 1.708c.39.301 1.259.912 2.486 1.292 1.782.551 3.293.296 4.167.139 3.368-.608 5.543-2.737 6.321-3.5l.166-.165a145.207 145.207 0 0 0 2.517 1.007c2.178.898 3.267 1.347 4.162 1.783 1.591.776 1.371.876 4.156 2.49 2.081 1.206 3.141 1.813 4.073 2.031 2.297.537 4.226-.042 4.823-.229 2.022-.634 3.239-1.769 4.594-3.062 2.89-2.759 4.261-5.748 5.167-7.771a29.072 29.072 0 0 0 1.583-4.521c.748-2.863 1.279-5.005.396-7.021a10.856 10.856 0 0 0-1.542-2.438c-.471-.566-.861-.918-1.333-1.354-1.01-.933-1.977-1.912-2.979-2.854-1.494-1.404-3.483-3.291-5.396-5.938-1.056-1.461-1.469-2.296-1.75-3.167a9.622 9.622 0 0 1-.438-3.521c.035-.581.061-2.297-1.104-3.729-.713-.877-1.589-1.3-2.104-1.542-1.245-.585-2.347-.659-2.684-.684-3.553-.261-11.178-1.581-14.691-2.379-4.708-1.07-4.282-1.716-8.132-2.285-2.621-.384-5.594-.79-9.141.281z"></path><path d="M222.167 241.389a7.745 7.745 0 0 0 2.417-.806c.332-.176 1.421-.786 2.722-2.361 1.003-1.215 1.486-2.221 1.889-2.972 1.821-3.394 4.189-5.622 5.417-6.778 1.333-1.254 2.439-2.278 4.25-3.111 1.481-.681 2.847-1.31 4.361-1.111 3.815.5 4.397 5.703 7.333 5.722 2.013.013 3.706-2.42 4.806-4 1.028-1.477 1.538-2.897 2.014-4.222.431-1.201.362-1.314 1.5-5 .21-.68.515-1.656 1.062-2.884.582-1.306 1.009-1.932 1.14-2.12.337-.484.82-1.166 1.631-1.83.464-.38 1.301-.969 2.208-1.5.35-.205.715-.403 1.021-.833.311-.438.399-.89.438-1.167.65-4.661-.042-7.417-.042-7.417-.297-1.183-.915-3.209-4.667-9.333-.449-.734-1.54-2.415-3.722-5.778-2.467-3.802-4.928-7.571-5.556-11.389a9.623 9.623 0 0 1-.09-2.661c.093-.85.368-2.272 1.479-4.172 1.373-2.348 5.001-7.1 10.306-12.917a214.99 214.99 0 0 1 5.25-6.361c.598-.694 1.398-1.61 2.056-3.056.699-1.535.698-2.481 1-4.056.299-1.555 1.102-4.807 3.132-7.82 1.46-2.167 3.008-3.399 3.368-3.68.653-.509 2.103-1.618 4.184-2.286 3.485-1.118 6.604-.31 7.983.147a158.62 158.62 0 0 0 7.486 1.986c4.058.971 6.088 1.456 7.333 1.542 2.191.15 4.347.881 6.542.792.327-.013 1.194-.06 1.729.49.627.644.432 1.732.368 2.288-.332 2.897 1.268 5.596 2.653 7.931.664 1.12 1.609 2.094 3.5 4.042 5.123 5.278 6.226 4.982 6.963 7.043.954 2.669-.126 5.318-1.829 9.494a19.398 19.398 0 0 1-3.601 5.636c-1.155 1.245-2.289 2.095-3.688 2.293a4.82 4.82 0 0 1-1.372-.008c-1.47-.23-2.44-1.12-2.75-1.389-.987-.857-3.046-2.175-7.667-4.278 2.349.098 4.243-1.11 4.639-2.667.179-.706.116-1.742-.489-2.589-.619-.867-1.519-1.139-1.789-1.216-.422-.121-1.636-.382-4.778 1.278a24.04 24.04 0 0 0-3.528 2.278c-2.73 2.125-2.707 2.928-4.572 3.889-.907.468-3.028 1.561-4.632.698-.975-.524-1.349-1.61-2.058-3.76a25.689 25.689 0 0 1-1.072-4.688c-.017-.106-.053-.235-.139-.264-.278-.094-.848.921-1.222 1.569-.779 1.349-1.677 2.627-2.486 3.958-1.289 2.122-1.207 1.742-2.042 3.181a34.908 34.908 0 0 0-2.306 4.771c-.814 2.081-1.226 3.134-1.438 4.646-.081.582-.626 4.471.729 8.042.198.521.624 1.529.521 2.854-.074.959-.395 1.691-.646 2.25a9.368 9.368 0 0 1-1.917 2.771 5.502 5.502 0 0 0-1.597 2.097 5.273 5.273 0 0 0-.278.847 90.032 90.032 0 0 0 2.261 1.836c2.011 1.703 4.545 5.163 4.545 5.163s2.619 3.576 3.778 6.889c.129.368.325.997.264 1.792-.013.17-.088.996-.694 2-.795 1.317-3.136 3.986-6.556 7.208a127.222 127.222 0 0 1-2.83 3.733c-1.399 1.776-1.923 2.34-2.115 3.406-.165.918.076 1.734.566 3.33.928 3.027 1.712 3.37 1.767 5.254.053 1.838-.654 2.849-.805 3.055-.47.643-1.027.974-1.218 1.089-2.222 1.338-4.18 3.078-6.358 4.487-2.037 1.318-4.337 2.989-8.938 6.333-.611.444-1.803 1.313-3.583 1.688-.835.176-2.156.477-3.667-.042-1.373-.471-2.203-1.369-2.604-1.812-.575-.636-.719-1.028-1.646-2.708 0 0-.816-1.479-1.646-2.854-1.087-1.802-1.988-2.971-3.167-4.5-.06-.077-1.269-1.631-2.833-2.896a3.776 3.776 0 0 0-1.539-.778c-.391-.091-.997-.232-1.544.07-.343.19-.523.485-.882 1.076-.322.529-.412.815-.553 1.081-.315.594-.845 1.018-1.906 1.544-2.554 1.269-4.993 1.757-4.993 1.757a39.38 39.38 0 0 1-6.561.744z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-maestro'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var maverick = {
  id: 'maverick',
  name: 'Maverick',
  role: 'Attacker',
  unit: 'GSUTR',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Y3S3',
    height: 180,
    weight: 82
  },
  bio: {
    real_name: 'Erik Thorn',
    birthplace: 'Boston, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#657785" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="M45 305V135.083a42.763 42.763 0 0 0-12.666-9.583 95.855 95.855 0 0 1 12.667-2.556V88.5a87.753 87.753 0 0 0-20.278-10A93.658 93.658 0 0 1 45 75.25V48.194a99.842 99.842 0 0 0-18.036-8.424A99.109 99.109 0 0 0 17.598 37c2.639-.729 6.16-1.643 10.347-2.556 1.844-.402 9.724-2.093 20.778-3.333 5.494-.617 8.298-.92 11.056-.667 5.703.524 9.947 2.298 12.5 3.389 4.876 2.083 8.426 4.569 12.611 7.5A107.369 107.369 0 0 1 89.821 45h21.264l-5-4.542a83.543 83.543 0 0 0 8.139-.347c8.633-.792 10.344-2.315 17.333-3.333 9.632-1.403 17.375-.113 22.389.722 3.684.614 6.676 1.386 9.722 2.556 2.107.809 4.871 1.891 8 4.111 3.089 2.191 5.04 4.431 6.146 5.716 3.068 3.567 2.916 4.695 6.521 8.728 1.882 2.106 3.263 3.297 5.167 4.056 1.95.777 3.607.765 4.5.778 3.008.044 6.769.909 14.292 2.639.982.226 6.685 1.559 12.377 3.939 4.544 1.9 8.194 4.096 19.414 12.686a635.283 635.283 0 0 1 17.375 13.792 30.843 30.843 0 0 1 3.153 9.889 30.56 30.56 0 0 1 .222 6.278l-102.056-2.333-35.556 69.556 50.667 44.222 24.667 8.222V305H45z"></path><path d="M190.562 305h19.021a473.157 473.157 0 0 1 5.806-111.889l-41.278 13.444c-5.317-4.058-14.212-11.696-20.861-22.597-5.915-9.699-6.541-16.225-6.667-18.792a32.532 32.532 0 0 1 .125-4.833c.322-3.221 1.302-8.286 10.417-23.125A262.86 262.86 0 0 1 164 126.625a269.901 269.901 0 0 1 6.556-9.181 325.904 325.904 0 0 0-10.264 20.972c-6.3 14.141-7.567 19.722-6.25 25.625.74 3.315 2.175 6.195 2.792 7.417 2.732 5.411 6.112 8.773 9.708 12.292a74.683 74.683 0 0 0 9.903 8.139l37.316-7.715a15.632 15.632 0 0 1 2.407-.548c.508-.074 1.938-.276 3.417-.125.815.083 3.97.407 5.972 2.694.404.462.996 1.272 1.889 5.028.907 3.814 1.167 6.555 1.167 6.556.389 4.103.86 8.786 1.389 14.222a46.74 46.74 0 0 0 4.915 2.838c3.126 1.561 6.622 2.868 15.007 4.706 3.88.85 8.844 1.823 14.688 2.678 2.366 4.596 5.206 7.399 7.056 8.944.905.756 2.072 1.72 3.833 2.611 1.503.761 3.286 1.392 8.861 2.028 3.618.413 6.818.778 11.278.653 2.927-.082 5.319-.164 8.429-.997a29.07 29.07 0 0 0 4.654-1.683l9.889 4.833 10.833-11.444-8.882-39.375 11.896-3.5-8.708-2.375-34.083-39.194 5.556-15.167-22.556-10.75c1.964-1.099 8.716-5.181 9.757-12.242.3-2.036.039-3.734-.215-5.313-.94-5.833-3.606-10.282-5.833-13.188-2.763 2.946-6.825 6.527-12.417 9.396a44.567 44.567 0 0 1-5.875 2.5c.996 1.676 2.625 5.001 2.458 9.292a15.964 15.964 0 0 1-.569 3.639l-24.889-12.028 17.25-13.403 18.778-20.153c-19.348 2.339-33.595 5.254-39.115 6.679-5.472 1.412-10.829 3.071-10.829 3.071-2.064.64-3.821 1.215-5.167 1.667a32.942 32.942 0 0 0-3.833-1.278c-2.742-.73-4.619-.849-7.611-1.167-3.533-.376-5.798-.616-8.389-1.111-3.365-.643-5.9-1.127-9-2.611-1.815-.869-4.907-2.387-7.6-5.504-.48-.556-.318-.433-3.233-4.662-2.384-3.458-3.59-5.202-4.26-5.906-2.363-2.484-4.804-3.844-6.198-4.608-.592-.324-2.439-1.308-5.208-2.208-3.872-1.259-7.093-1.558-9.715-1.743-6.57-.464-12.734-.452-17.618-.299a130.072 130.072 0 0 1 11.778 4.931c2.681 1.283 4.669 2.352 6.49 4.466 1.43 1.659 2.189 3.303 2.712 4.457 1.035 2.282.871 2.96 2.561 8.126.252.769.667 2.014 1.343 3.579 1.066 2.468 1.795 3.454 2.617 4.212a8.332 8.332 0 0 0 1.611 1.16 23.704 23.704 0 0 0-5.658-.923c-2.413-.096-3.879.223-6.161.45-2.847.284-4.826.214-8.542.083-2.267-.08-7.533-.363-14.125-1.708-7.45-1.521-12.844-3.634-16.458-5.069-5.805-2.306-10.045-4.564-12.722-6a140.456 140.456 0 0 1-10.278-6.111c-2.447-1.597-3.771-2.462-5.591-3.873-3.596-2.786-4.069-3.782-7.95-6.968-2.889-2.371-4.334-3.557-6.597-4.799-3.893-2.135-7.311-2.859-9.569-3.319-5.89-1.2-10.562-.719-12.343-.484-1.664.22-3.05.521-4.06.775 4.715.297 12.708 1.628 17.528 7.389 3.016 3.605 5.705 10.041 6.75 12.542.717 1.716.899 2.329 1.583 4.125 2.604 6.83 5.383 14.12 10.861 21.111 3.762 4.802 7.36 7.627 8.278 8.333 3.208 2.468 5.916 3.843 8.556 5.167 6.472 3.245 11.974 4.732 16.556 5.944 2.694.713 6.127 1.514 10.167 2.194-4.001 1.488-10.208 3.131-17.722 2.528-7.206-.578-12.416-2.965-15.889-4.556 0 0-5.792-2.653-11.389-7.056-1.698-1.336-3.44-2.724-5.222-5-.944-1.206-1.04-1.564-1.889-2.556-2.085-2.437-4.418-3.682-5.667-4.333-3.594-1.875-6.757-2.241-10.444-2.667a48.336 48.336 0 0 0-7.528-.278 19.791 19.791 0 0 1 6.528 2.778c4.074 2.7 6.082 6.281 7.444 8.778 2.18 3.994 1.347 4.456 4.111 10.333 1.022 2.173 2.277 4.815 4.49 7.94 2.205 3.112 4.347 5.28 6.065 7.005 2.591 2.601 2.872 2.48 6 5.5 3.402 3.284 5.103 4.927 6.608 7.244 2.635 4.058 3.473 7.801 3.725 9.089.642 3.282.505 6.068.278 7.917a24.563 24.563 0 0 1-8.292-.788c-1.012-.276-4.59-1.325-8.673-4.359-5.798-4.309-4.878-6.873-10.868-11.547-1.949-1.52-4.558-3.514-8.512-4.563-3.793-1.006-7.204-.712-8.706-.516a23.095 23.095 0 0 0-3.033.606c1.243.541 3.033 1.488 4.75 3.139.954.917 4.899 4.949 5.675 15.997.349 4.973-.239 7.158-.675 12.67-.545 6.894-1.389 18.781 2.333 31.333 1.531 5.162 3.313 8.682 5.556 13.111 5.458 10.779 11.496 18.094 14.306 21.306 5.509 6.296 10.481 10.38 13.972 13.222 3.551 2.891 7.214 5.565 12.778 9.194 7.599 4.958 33.218 21.139 42.181 28.486 1.263 1.036 3.844 3.246 4.875 6.875.594 2.088.485 3.98.278 5.306.331-.617.893-1.79 1.167-3.333 1.852-10.431-12.082-22.799-20.444-30.222-2.294-2.036-6.015-5.179-9-10.667a34.133 34.133 0 0 1-3.111-8 13.941 13.941 0 0 0 2.222 4.056c1.512 1.907 3.168 2.935 4.109 3.491 7.38 4.367 13.052 6.151 13.052 6.151 3.487 1.097 12.648 4.031 21.228 7.385 5.493 2.147 9.685 4.051 14.16 7.342 2.76 2.03 4.619 3.845 5.539 4.786 1.91 1.953 4.804 4.962 7.046 9.669 1.218 2.557 1.753 4.586 2.422 7.12 1.139 4.318 1.479 7.719 1.729 10.333.229 2.474.412 5.639.325 9.334z"></path><path style="fill:#fff" d="m226.694 127.139 6.5 11.694 16.945 3.111-11.278-11.5zm9.223-20.806 48.889 26.583-6.917 13.222 42.674 41.653 11.896-3.5-3.014 42.875-11.556-33.611-8.389-13.444-7.944 2.056-40.278-35.833c1.044-.905 2.975-2.847 3.826-5.882.267-.952.934-3.817-.659-8.229-1.76-4.875-5.063-8.271-12.904-14.481a247.699 247.699 0 0 0-15.624-11.409z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-maverick'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var melusi = {
  id: 'melusi',
  name: 'Melusi',
  role: 'Defender',
  unit: 'ITF',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'sa',
    season: 'Y5S2',
    height: 172,
    weight: 68
  },
  bio: {
    real_name: 'Thandiwe Ndlovu',
    birthplace: 'Louwsburg, South Africa'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#1c7687" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="M242.337 186.074c-11.621-.514-25.799-2.613-25.754-4.158.05-1.704 17.393-2.496 30.25-3.083a692.573 692.573 0 0 1 31.907-.724 108.646 108.646 0 0 0 3.58-27.721c0-5.21-.375-10.331-1.085-15.344a431.473 431.473 0 0 0-55.713-6.419l-7.771-2.5h61.843a107.752 107.752 0 0 0-10.119-26.98l-105.252-5.089c-3.998-.261-10.94-.743-15.364-1.239-.652-.073-1.941-.224-1.955-.505-.021-.44 3.094-.923 4.458-1.13 3.29-.5 9.279-1.175 20.222-1.535a2443.28 2443.28 0 0 1 30.876-1.265c21.742-.752 35.318-.928 57.374-2.297l1.317-.083c-19.76-26.756-51.517-44.112-87.331-44.112-24.424 0-46.962 8.072-65.095 21.692l.574.028c7.163.322 41.241 1.247 46.042 1.658.337.029 1.046.099 1.076.317.075.536-4.031 1.517-4.889 1.722-5.033 1.203-9.054 1.446-10.986 1.569-7.948.508-4.608.533-13.484 1.079-6.828.42-6.985.293-15.605.801-5.601.33-8.769.575-12.443 1.048-18 17.14-30.112 40.403-33.011 66.448 1.508.136 3.307.284 5.334.416 16.829 1.099 24.731-.402 39.583 1.708 3.999.568 11.411 1.622 11.417 3.069.007 1.753-10.839 3.111-14.242 3.538-9.784 1.226-23.865 1.939-42.704-.252-.04 1.215-.068 2.434-.068 3.659 0 39.151 20.739 73.454 51.827 92.535 17.065-.359 34.263-.802 51.603-1.341a5138.115 5138.115 0 0 0 67.65-2.553 109.134 109.134 0 0 0 23.204-22.209c-28.927-.284-51.58-.281-67.881-.208-11.509.052-35.366.207-67.667-.446-7.8-.158-14.228-.325-18.513-.444-3.16-.038-5.52-.274-7.104-.488-.771-.104-1.709-.25-1.73-.527-.012-.17.318-.445 2.667-1.042 3.237-.822 5.042-1 5.042-1 2.145-.212 8.084-.774 16.25-1.375l27.833-1.708 118.485-3.565a107.955 107.955 0 0 0 9.274-19.81h-27.218c-1.752.007-4.036-.017-6.704-.135zm-77.087 60.718c-13.473.276-19.32.142-34.125.458-2.076.044-4.06.092-5.951.141 14.632 7.352 31.154 11.498 48.646 11.498 19.47 0 37.74-5.133 53.538-14.113-14.198.403-25.937.794-34.565 1.099-15.906.562-18.47.731-27.543.917z"></path><path d="M243.938 305h13.701l3.667 9.444 8.972 3.75 3.264 6.243h-4.958l-4.823-4.104-10.531-1.833-9.292-13.5zm-120.869 11.583-.097 7.972 2.882.976 3.368-7.67L150.694 305h-22.847l-4.778 11.583zm193.959-32.777 4.555-16.167-2.833.333-6.333 7.584-7.417.166v14.972zM45 273.083l-13.528-2.556-8.278 9.167.833 1.861 6-4.111 14.972 7.75v-12.111z"></path><path d="M319.583 169.139 297.5 163.5l-27.972-21.75-12.174-.771-8.982-8.238-18.081-1.033-11.139-14.917-46.444-.875-11.583-10.667L112 116.792 85.583 141.75 57 148.917l-17.917 15.75v3.792l-19.534 5.553.062 4.599 9.944 3.833.445 3.667 14.729 8.056 39.41 1.403 4.819 7.847 32.208 3.917 4.583 6.958 18.25 5.042 20.458 18.75.083 9-7.25 17.542-7.875 2.583-7.042 5.042-40.486-.75-61.194 20.556-10.215 8.819-4.083 12.146 3.812-1.729 4.583-6.375 8.083-5.646 23.667-4.021 22.708-7.875 16.486-2.611.736 1.514-19.493 13.91L75 305.875l-9.354 1.521 4.146 5.042 14.812-3.146 36.533-19.066 16.509-5.08 22.354.021 46.6 18.578 12.004 10.151 1.929 8.918 4.342-4.523-.042-10.438-4.688-8.146-9.542-5.562 1.5-3.021 19.604-2.667 20.458.181 3.833 1.694 22.625 25.458 7.125 1.583 9.667-7.042 1.042-4.042-9.583 2.875-3.333-1.542-19.674-30.418-9.243-2.415-33.181 1.458-7.056-3.222-9.25-1.028-11.556-7.528-3.611-11.694 1.889-6.972-.444-7.889-3.194-6.139.306-8.278 4.347-8.667 20.042-1.292 28.611-17.708 21.25-1.5 3.535-9.375 29.708.375 2.688-2.938h8.333l.854-3.312 11.938-5.167-.25-4.774zM92.396 198.438l-1-2.792 23.083-.708 2.542 4.167-24.625-.667zm37.271 8.812-7.917-13.521 4.917-2.188 5.583 6.292 10.542 5.083 1.125 6.208-14.25-1.874zm27.166 8.208-4.5-1.75-5.667-18.542 1.083-7.042 5.458-.917 2.708 3.542-.25 15.417 2.083 5.333-.915 3.959zm53.313-10.979-13.604.875 6.333-7.417 6.375-4.271 20.208-1.417-19.312 12.23zm46.993-15.507-9.444 1.139 6.5-6.931 5.986.069-3.042 5.723z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-melusi'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var mira = {
  id: 'mira',
  name: 'Mira',
  role: 'Defender',
  unit: 'GEO',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'es',
    season: 'Y2S1',
    height: 165,
    weight: 60
  },
  bio: {
    real_name: 'Elena Maria Alvarez del Manzano',
    birthplace: 'Madrid, Spain'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#673081" d="M73 73h204v204H73z"></path><path d="M45 114.75h260v119H45z"></path><path style="fill:#fff" d="M32 121.25h286v106H32z"></path><path d="M39 128h272v92.5H39z"></path><path style="fill:#fff" d="m131.429 133.75-65.894 81h63.009l65.893-81zm141.368 0-65.894 81h12.79l65.894-81zm-54.061 0-65.894 81h29.763l65.893-81z"></path><path d="M73.389 105.339c-5.266 0-9.55 4.284-9.55 9.55s4.284 9.55 9.55 9.55 9.55-4.284 9.55-9.55-4.284-9.55-9.55-9.55z"></path><circle style="fill:#fff" cx="73.389" cy="114.889" r="5"></circle><path d="M175.194 105.339c-5.266 0-9.55 4.284-9.55 9.55s4.284 9.55 9.55 9.55 9.55-4.284 9.55-9.55-4.284-9.55-9.55-9.55z"></path><circle style="fill:#fff" cx="175.194" cy="114.889" r="5"></circle><path d="M277 105.339c-5.266 0-9.55 4.284-9.55 9.55s4.284 9.55 9.55 9.55 9.55-4.284 9.55-9.55-4.284-9.55-9.55-9.55z"></path><circle style="fill:#fff" cx="277" cy="114.889" r="5"></circle><path d="M73.389 223.45c-5.266 0-9.55 4.284-9.55 9.55s4.284 9.55 9.55 9.55 9.55-4.284 9.55-9.55-4.284-9.55-9.55-9.55z"></path><circle style="fill:#fff" cx="73.389" cy="233" r="5"></circle><path d="M175.194 223.45c-5.266 0-9.55 4.284-9.55 9.55s4.284 9.55 9.55 9.55 9.55-4.284 9.55-9.55-4.284-9.55-9.55-9.55z"></path><circle style="fill:#fff" cx="175.194" cy="233" r="5"></circle><path d="M277 223.45c-5.266 0-9.55 4.284-9.55 9.55s4.284 9.55 9.55 9.55 9.55-4.284 9.55-9.55-4.284-9.55-9.55-9.55z"></path><circle style="fill:#fff" cx="277" cy="233" r="5"></circle></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-mira'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var montagne = {
  id: 'montagne',
  name: 'Montagne',
  role: 'Attacker',
  unit: 'GIGN',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 3
  },
  meta: {
    gender: 'm',
    country: 'fr',
    season: 'Release',
    height: 190,
    weight: 100
  },
  bio: {
    real_name: 'Gilles TourÃ©',
    birthplace: 'Bordeaux, France'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#315978" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="m175 61.084-1.887.872-1.782.823a287.594 287.594 0 0 1-39.678 14.879 287.693 287.693 0 0 1-33.802 7.709l-3.813.63-4.037.667.282 4.082.266 3.856 4.537 65.75 2.269 32.875.051.737.054.78.314.716.296.676c4.972 11.347 16.016 32.911 34.122 49.838 5.351 5.003 15.312 14.316 31.416 21.09a96.642 96.642 0 0 0 8.8 3.208l1.259.391 1.334.414 1.334-.414 1.259-.391c2.967-.92 5.927-2 8.8-3.208 16.104-6.774 26.065-16.087 31.416-21.091 18.105-16.927 29.15-38.491 34.122-49.838l.296-.676.314-.716.054-.78.051-.737 4.083-59.175 2.722-39.45.266-3.856.282-4.082-4.037-.667-3.813-.63a287.63 287.63 0 0 1-33.801-7.709 287.643 287.643 0 0 1-39.678-14.879l-1.782-.823-1.889-.871z"></path><path d="m175 66.041-1.782.823a292.218 292.218 0 0 1-40.301 15.113 292.306 292.306 0 0 1-34.332 7.83l-3.813.63.266 3.856 4.537 65.75 2.268 32.875.051.737.296.676c4.833 11.03 15.557 31.98 33.073 48.357 5.146 4.811 14.725 13.767 30.088 20.23a92.059 92.059 0 0 0 8.389 3.058l1.259.391 1.259-.391a92.059 92.059 0 0 0 8.389-3.058c15.363-6.463 24.942-15.418 30.088-20.23 17.517-16.377 28.24-37.327 33.074-48.357l.296-.676.051-.737 4.083-59.175 2.722-39.45.266-3.856-3.813-.63a292.214 292.214 0 0 1-34.332-7.83 292.09 292.09 0 0 1-40.301-15.113L175 66.041z"></path><path style="fill:#fff" d="M215.889 86.056A295.571 295.571 0 0 1 175 70.723 295.315 295.315 0 0 1 99.278 94l6.806 98.625c3.445 7.862 13.78 29.846 32.083 46.958C143.515 244.584 152.63 252.955 167 259a87.623 87.623 0 0 0 8 2.917 87.32 87.32 0 0 0 8-2.917c14.37-6.045 23.485-14.416 28.833-19.417 18.304-17.113 28.638-39.096 32.083-46.958L250.722 94a295.521 295.521 0 0 1-34.833-7.944z"></path><path d="M109.722 97.569c-3.033 0-5.5 2.467-5.5 5.5s2.467 5.5 5.5 5.5 5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="109.722" cy="103.069" r="2.5"></circle><path d="M175 77.917c-3.033 0-5.5 2.467-5.5 5.5s2.467 5.5 5.5 5.5 5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="175" cy="83.417" r="2.5"></circle><path d="M240.25 97.569c-3.033 0-5.5 2.467-5.5 5.5s2.467 5.5 5.5 5.5 5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="240.25" cy="103.069" r="2.5"></circle><path d="M237.312 139.225a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="237.312" cy="144.725" r="2.5"></circle><path d="M112.722 139.225a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="112.722" cy="144.725" r="2.5"></circle><path d="M115.583 181.431a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="115.583" cy="186.931" r="2.5"></circle><path d="M234.312 181.431a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="234.312" cy="186.931" r="2.5"></circle><path d="M136.944 218.785a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="136.944" cy="224.285" r="2.5"></circle><path d="M213 218.785a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="213" cy="224.285" r="2.5"></circle><path d="M175 244.458a5.506 5.506 0 0 0-5.5 5.5c0 3.033 2.467 5.5 5.5 5.5s5.5-2.467 5.5-5.5c0-3.032-2.467-5.5-5.5-5.5z"></path><circle style="fill:#fff" cx="175" cy="249.958" r="2.5"></circle><path d="M204.75 103h-61v18.5h28.133L175 215.556l3.226-94.056h26.524V103z"></path><path style="fill:#fff" d="M147.25 106.25h54v12h-54z"></path><path d="M150.25 109.75h48v5h-48z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-montagne'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var mozzie = {
  id: 'mozzie',
  name: 'Mozzie',
  role: 'Defender',
  unit: 'SASR',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'au',
    season: 'Y4S1',
    height: 162,
    weight: 57
  },
  bio: {
    real_name: 'Max Goose',
    birthplace: 'Portland, Australia'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#d31850" d="M277 277h-72.149l-47.184-9.167-73.444-1.611 9.653-29.014L73 261.153V73h185l3.333 18.667L277 102v175z"></path><path style="fill:#fff" d="m108.778 234.889 2.444 20.611a119.53 119.53 0 0 1 11.889-2.889c17.216-3.26 32.534-2.229 44.333-.167l19.111 12.778c45.81 19.723 83.115 18.263 92.556 2.222 1.682-2.859 5.918-12.022-3.444-31.611l6.313-69.83 6.632 54.108a100.783 100.783 0 0 0 2.821 12.604c1.371 4.701 2.616 7.689 3.235 9.396 2.559 7.057 2.25 13.807 2.167 15.222-.114 1.93-.708 9.239-5.5 17-1.582 2.563-5.198 7.728-11.611 11.833-2.944 1.885-5.408 2.862-7.611 3.722-1.336.521-7.625 2.918-17.278 3.833-2.692.255-12.526 1.048-24.5-1.431-4.829-.999-9.478-2.422-12.458-3.333-5.192-1.588-8.942-2.988-10.333-3.5-9.045-3.331-20.382-7.506-32.5-9.917-3.283-.653-16.056-3.053-32.875-2.208a140.309 140.309 0 0 0-16.625 1.833l12.458 10.708-88.958 13.819 59.734-64.803z"></path><path d="M288.333 246.25c-1.842-6.158-3.07-12.284-4.583-19.833-.435-2.17-.977-5.034-1.25-8.806a64.31 64.31 0 0 1-.167-4.944c.017-4.991.175-22.665.448-46.719l31.983-41.392-27.806 10.042L277 112.306V80.722l-12.167 5.944L275.194 73h-32.361l-1.389-1.222 16.118-15.549L191.708 73h-88.292L89.499 90.583l24.75-9.292-18.292 21.375 30.333-16a3125.606 3125.606 0 0 0-32.333 35.708l36.625-21.75-45.917 57.208 102.778-5.722 25.668 77.668 33.611-20.111-16.155 22.811 26.988-17.644-13.478 22.005a390.235 390.235 0 0 1 19.298-11.38l-8.514 17.819 12.597-5.028 5.5 7.625a16.06 16.06 0 0 1 2.75 6.083c.2.92.871 4.404-.367 8.158-1.66 5.033-5.801 7.671-8.508 9.342-4.86 3-11.079 4.966-20.75 4.958-3.986-.003-9.739-.296-25.667-4.583-17.725-4.771-20.474-6.762-33-9.5-4.106-.897-11.091-2.4-20.333-3.25-22.251-2.046-39.048 1.396-44.647 2.67a133.933 133.933 0 0 0-17.325 5.191l-1.556-14.056-36.444 38.722L122 281.056l-13.222-9.667a260.444 260.444 0 0 1 11.889-2.5c8.317-1.548 16.227-2.603 20.667-3 16.268-1.454 31.105 1.89 37.778 3.442 15.105 3.513 34.762 10.727 40.055 12.669 1.194.438 4.331 1.601 8.667 2.667.279.068 7 1.696 13.611 2.111 4.997.314 27.596 1.734 39.556-10.556 4.439-4.561 6.833-10.305 6.833-10.306.745-1.786 1.876-4.568 2.083-8.333.126-2.3-.131-4.258-.304-5.53-.392-2.871-1.028-4.963-1.28-5.803z"></path><path d="M267.667 95.5 233.5 66.833l-72.138 12.499-68.445 68.501-43.194 44.306 45.139-7.972 39.222-9.75 16.417 50.861-19.389 6.667c-.07 3.097-.209 5.597-.319 7.264-.136 2.049-.334 4.457-.418 7.667-.029 1.119-.073 3.42.619 6.272.047.195.089.356.118.464a258.628 258.628 0 0 0 27.334 34 389 389 0 0 0 4.806-6.861c.52-.765 1.395-2.061 2.792-3.625a31.286 31.286 0 0 1 1.792-1.847l16.708-15.444 93.569-89.389 6.667-36.889L267.667 95.5zm-104.111 92.556-15.118-.451L177 167.723l-13.444 20.333z"></path><path style="fill:#fff" d="m71.111 180.444 57.444-58.333 38.694-3.556-26.562-7.035a65.008 65.008 0 0 1 6.854-8.646c1.481-1.573 5.173-5.338 10.792-9.208 0 0 6.036-4.159 13.778-7.389 10.017-4.179 31.717-9.446 60.444-12.944l31.778 27.222 12.472 33.806-5.139 34.097-110.375 103.25-3.167 4.583a319.507 319.507 0 0 1-19.764-25.57 5.914 5.914 0 0 1-.417-1c-.316-1.018-.269-1.867-.25-2.222.073-1.367.248-5.167.556-10.292a129.117 129.117 0 0 0 9.219-3.011c3.332-1.229 5.823-2.159 8.948-3.836 0 0 2.493-1.338 5.127-3.143 4.666-3.196 14.879-11.893 27.789-24.107a33.646 33.646 0 0 0 2.355-5.77c.612-2.016.9-3.652 1.151-5.304.6-3.949 1.204-7.923 1.286-13.495.051-3.446.113-7.687-.833-13.208a60.564 60.564 0 0 0-3.514-12.389l-95.667 24-22.999 3.5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-mozzie'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var mute = {
  id: 'mute',
  name: 'Mute',
  role: 'Defender',
  unit: 'SAS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'uk',
    season: 'Release',
    height: 170,
    weight: 80
  },
  bio: {
    real_name: 'Mark Chandar',
    birthplace: 'York, England'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path d="M68.5 73a197.58 197.58 0 0 1 4.792 14.667 198.428 198.428 0 0 1 4.75 21h13.417c1.38 7.277 2.385 17.158 1.018 28.659a93.303 93.303 0 0 1-3.268 15.737h-4.448a208.551 208.551 0 0 1-5.816 14.826c-2.447 5.602-2.719 5.556-6.924 14.528-5.88 12.546-7.718 17.695-8.854 23.708a66.502 66.502 0 0 0-.806 5.534H57.8a133.024 133.024 0 0 0 4.992 44.452h6.781L76.042 277h198.692a123.381 123.381 0 0 1-6.566-20.889h-6.812a161.162 161.162 0 0 1-2.965-15c-.931-6.269-1.855-12.716-1.444-21.111.172-3.517.53-6.404.816-8.341h4.424c1.824-9.016 4.216-16.123 6.149-21.103 2.522-6.497 4.351-9.595 7.89-17.72a264.525 264.525 0 0 0 7.694-19.773h4.561a78.422 78.422 0 0 0 3.036-12.375c1.212-7.543 1.027-13.437.874-17.632a107.2 107.2 0 0 0-1.507-14.389h-13.456a149.888 149.888 0 0 0-9.864-35.666L68.5 73z"></path><path style="fill:#88666f" d="M262.333 268.229H82.395a187.287 187.287 0 0 1-3.729-12.105l-6.729-.014a213.245 213.245 0 0 1-3.738-17.422c-2.204-12.881-2.063-19.247-1.824-22.94.11-1.706.259-3.119.375-4.091h4.542a72.052 72.052 0 0 1 2.583-11.076c1.266-3.977 2.517-6.705 5.696-13.381 6.098-12.808 6.454-13.188 8.096-16.91A147.809 147.809 0 0 0 94 153.061h4.444a94.315 94.315 0 0 0 2.889-14.312c1.469-12.029.374-22.399-1.141-30.083H86.687a158.632 158.632 0 0 0-5.895-26.917h180.695a139.057 139.057 0 0 1 7.069 26.917h13.278a98.02 98.02 0 0 1 1.556 12.778c.25 4.524.579 11.26-1 19.722a71.447 71.447 0 0 1-3.306 11.896h-4.389a354.154 354.154 0 0 1-4.361 10.979c-4.467 10.72-5.94 12.766-9.75 22.292-3.373 8.432-4.717 13.078-5.611 16.75a103.102 103.102 0 0 0-1.708 8.576h-4.523a136.783 136.783 0 0 0 3.717 44.452h6.708a81.983 81.983 0 0 0 3.166 12.118z"></path><path style="fill:#1d1d1b" d="M239.955 206.751c-.901-2.795-2.031-4.709-3.039-6.084-.995-1.358-3.334-4.465-7.5-6.042a14.547 14.547 0 0 0-2.198-.638l-3.855-2.104-4.454-2.431a57.576 57.576 0 0 0 .993-8.658l2.525-2.754 3.667-4 .676-.738.3-.955a75.509 75.509 0 0 0 3.16-15.643c.374-4.05.388-7.875.042-11.694-.304-3.358-.83-6.131-1.565-8.242-1.4-4.019-3.364-6.701-4.203-7.846-1.166-1.591-2.371-3.237-4.553-4.725-.987-.673-1.774-1.039-2.686-1.463a54.936 54.936 0 0 1-3.974-2.015 39.532 39.532 0 0 0-5.824-9.042c-11.602-13.501-29.254-14.959-36.305-14.959l-.454.001h-.099c-19.104.073-30.088 7.76-35.939 14.196a40.557 40.557 0 0 0-6.581 9.826c-.939.494-1.878 1.003-2.805 1.519-2.877 1.601-4.321 2.405-5.613 3.474-2.814 2.328-4.071 4.935-5.286 7.455-2.606 5.406-3.115 10.277-3.36 12.619-.274 2.624-.297 5.53-.07 8.883.394 5.805 1.483 11.7 3.237 17.522l.287.951.661.742 3.924 4.409 2.31 2.596a39.742 39.742 0 0 0 .932 8.637l-4.175 2.23-3.41 2.016a16.48 16.48 0 0 0-1.991.578c-2.339.841-3.896 1.999-4.688 2.597-.209.158-3.198 2.455-5.286 5.913-3.261 5.4-3.054 11.525-2.883 15.284.617 13.566 7.406 23.227 10.402 26.955 3.432 4.271 6.682 6.72 8.35 7.876 2.23 1.544 5.752 3.932 10.839 4.926 1.071.209 2.616.501 4.675.425 1.297-.048 5.369-.252 9.319-2.975a16.283 16.283 0 0 0 2.438-2.063l7.145-4.354 7.871-4.475 6.925 5.332 2.729 2.101 2.741-2.086 6.997-5.325 11.639 6.943 2.222 1.281c.207.154.525.392.91.688 1.257.968 2.134 1.713 2.311 1.861 1.662 1.383 4.48 2.31 5.006 2.483 4.102 1.349 10.536.462 16.216-2.316 4.95-2.422 7.907-5.586 10.222-8.111 3.02-3.294 9.187-10.977 11.528-22.556.64-3.147 2.037-10.459-.403-18.025z"></path><path style="fill:#fff" d="M228.792 200s.828.205 1.563.523c2.095.908 4.062 4.581 4.062 4.581 1.347 2.516 1.844 4.68 1.932 5.075 1.29 5.803.195 11.629-.238 13.71-.786 3.782-3.154 12.675-10.472 20.639-.662.721-3.937 4.23-9.056 7.139-3.275 1.861-5.562 2.486-7.806 2.556a13.926 13.926 0 0 1-3.153-.264c-1.555-.506-2.66-1.197-3.424-1.794-7.662-5.975-5.803-21.656-1.617-31.331 1.349-3.117 2.831-5.362 3.625-6.551 1.846-2.768 5.5-8.12 12.042-11.824 1.4-.792 4.037-2.135 7.292-2.625 2.716-.41 4.51.004 5.25.166zm-118.459.556c1.57-.577 4.135-1.279 7.242-1.004 1.929.171 5.175.815 9.873 4.332 8.137 6.091 12.099 14.245 13.385 17.171 1.509 3.434 5.339 12.148 3.375 21.278-.502 2.333-1.571 7.302-5.761 10.273-.764.542-1.462.896-1.948 1.116-1.475.16-3.66.249-6.222-.222-4.624-.85-7.717-3.017-9.278-4.111-8.062-5.648-15.777-18.322-16.637-31.513-.476-7.295 1.38-11.144 2.303-12.765a18.632 18.632 0 0 1 3.668-4.555z"></path><path style="fill:#fff" d="M225.792 145.417c-.396-4.381-1.102-6.504-1.333-7.167-1.155-3.315-2.751-5.53-3.583-6.667-1.109-1.513-1.945-2.635-3.458-3.667-.986-.673-1.627-.876-3.417-1.75a58.877 58.877 0 0 1-4.222-2.278c-1.022-2.417-2.765-5.836-5.722-9.278-11.582-13.478-29.856-13.404-33.334-13.39-3.991.016-21.139-.018-32.722 12.724-3.371 3.708-5.331 7.463-6.458 10.076-.991.507-2.399 1.244-4.069 2.174-2.64 1.469-3.96 2.204-4.934 3.01-2.056 1.701-2.977 3.61-4.101 5.942-2.22 4.605-2.682 8.687-2.938 11.132-.133 1.274-.344 3.862-.056 8.111.272 4.016 1.004 9.719 3.056 16.528l7.417 8.333a35.136 35.136 0 0 0 1.667 12.584l-7.333 3.917a37.666 37.666 0 0 1 6.778 2.917c13.383 7.392 18.236 20.851 19.472 24.444 2.841 8.255 2.514 14.922 2.415 16.491a39.697 39.697 0 0 1-1.238 7.631l13.49-8.233 9.417 7.25 9.417-7.167 14.25 8.5a32.822 32.822 0 0 1-1.528-5.806c-2.059-12.33 3.602-22.423 5.889-26.5 2.047-3.65 5.716-10.018 13.262-14.994a37.797 37.797 0 0 1 9.335-4.45l-7.431-4.056A52.926 52.926 0 0 0 215.447 179l7.333-8a70.756 70.756 0 0 0 2.972-14.708c.33-3.596.375-7.169.04-10.875zm-33.289 69.83-7.76 7.76-14.12-14.12-14.12 14.12-7.76-7.76 14.12-14.12-14.12-14.12 7.76-7.76 14.12 14.12 14.12-14.12 7.76 7.76-14.12 14.12 14.12 14.12zm26.886-60.664c-.357 3.378-1.074 10.169-6.167 16.111-1.391 1.623-3.822 4.391-8.054 6.005-4.343 1.656-8.237 1.201-10 .873-4.714-.877-8.252-3.461-12.334-6.442-.268-.196-4.465-3.264-8.994-5.221-.691-.298-1.779-.739-3.215-.743-1.553-.004-2.77.503-4.972 1.625-3.627 1.848-5.05 2.773-5.05 2.773-6.637 4.316-10.001 6.49-12.228 7.227-1.439.477-4.329 1.401-8 1-7.294-.797-11.728-6.176-12.75-7.417-2.745-3.331-3.789-6.715-4.417-8.75a29.913 29.913 0 0 1-1.292-7.667c-.163-4.557-.472-13.199 5.463-18.269 5.914-5.052 14.247-3.328 15.62-3.023l27.566 13.75 28.101-13.75c1.083-.324 8.168-2.324 14 1.833 4.016 2.862 5.334 7.144 6.065 9.516 1.294 4.204.966 7.651.658 10.569z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-mute'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var nokk = {
  id: 'nokk',
  name: 'NÃ¸kk',
  role: 'Attacker',
  unit: 'JAEGER CORPS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'dk',
    season: 'Y4S2',
    height: 0,
    weight: 0
  },
  bio: {
    real_name: '[REDACTED]',
    birthplace: '[REDACTED]'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#25387d" d="M73 73h204v204H73z"></path><path d="M73 73v93.917c.104.481.275 1.169.556 1.972 1.162 3.329 3.117 5.537 4.24 6.705 7.75 8.059 18.616 15.853 18.616 15.853s9.457 6.783 20.977 15.22c3.941 2.886 7.177 5.289 9.361 6.917v25.979l22.861 28.16v26.556l25.681 19.361.396-30.451L201.722 263v-27l22.667-16.444v-7.514l23.389-17.375a136.476 136.476 0 0 0 12.681-7.375s7.39-4.852 12.132-10.12c.941-1.045 2.112-2.484 3.077-4.547a17.49 17.49 0 0 0 1.333-4.125V73h-44.438a62.198 62.198 0 0 0-9.125-11.604c-12.202-12.19-26.273-15.955-32.488-17.536-2.989-.76-11.373-2.703-22.447-2.349-7.923.254-21.301.682-34.919 9.072-11.352 6.994-17.8 16.396-21.142 22.417H73z"></path><path style="fill:#fff" d="M109.889 168.167v24.125l12.5 9.389V189.5a18.58 18.58 0 0 0-.264-1.75c-.755-3.783-2.495-6.375-3.931-8.444a202.327 202.327 0 0 0-8.305-11.139zm54.694-117.834a79.583 79.583 0 0 0-19.5 4.625 79.011 79.011 0 0 0-9.417 4.264 126.653 126.653 0 0 0-7.375 11.153c-1.394 2.371-15.266 26.459-16.514 52.958-.387 8.223.558 14.191.889 16.111a70.356 70.356 0 0 0 3.099 11.758c1.668 4.655 2.598 5.69 7.401 15.047 6.267 12.206 7.579 16.08 8.351 18.737a64.598 64.598 0 0 1 2.052 9.902v42.465l12.5 14.924v-54.761c-.192-7.391-1.564-13.07-2.792-16.906-2.584-8.076-5.752-11.821-13.461-28.852-1.002-2.214-2.058-4.603-3.039-7.926-2.029-6.873-2.168-12.434-2.222-15.444-.341-18.906 7.994-38.719 8.338-39.52 2.844-6.622 6.682-15.356 14.94-24.536a77.531 77.531 0 0 1 16.75-13.999z"></path><path style="fill:#fff" d="M188.021 92.552a74.631 74.631 0 0 1 8.201 13.837c3.18 6.989 4.449 12.657 5.827 18.977a147.146 147.146 0 0 1 3.146 23.412l11.694-8.444a111.453 111.453 0 0 0-2.389-17.667c-1.316-6.044-3.939-17.629-11.642-30.527a92.937 92.937 0 0 0-13.469-17.431c-5.828 4.411-16.022 13.333-23.626 28.012a83.191 83.191 0 0 0-9.179 33.755v154.399l12.5 9.604V140.591c-.082-6.962.772-19.665 7.929-33.029a66.522 66.522 0 0 1 11.008-15.01z"></path><path style="fill:#fff" d="M187.347 114.222c-2.529 6.028-3.798 11.292-4.475 15.13-1.007 5.704-1.043 10.158-1.038 11.592.006 1.98.104 3.4.167 4.389.239 3.782.472 9.345.417 17v106.843l12.5-9.669V151.75a149.913 149.913 0 0 0-1.544-16.931c-1.215-8.138-2.504-12.078-3.262-14.173a59.129 59.129 0 0 0-2.765-6.424zm37.877 55.857c1.459-2.614 2.866-4.33 5.074-8.761a83.777 83.777 0 0 0 2.191-4.822s3.234-7.835 4.658-16.823c1.872-11.816.515-30.188-6.648-47.839-4.485-11.05-9.44-17.371-11.333-19.667a67.858 67.858 0 0 0-8.111-8.278 59.173 59.173 0 0 0-11.028 3.833c10.712 11.932 16.369 23.313 19.361 30.667 4.602 11.311 5.566 19.655 5.778 21.667.909 8.641.001 15.259-.346 17.489-.746 4.805-1.545 9.952-4.556 15.781-1.523 2.949-2.779 4.458-5.722 10.14-.515.995-2.102 4.086-3.432 7.089-1.786 4.034-4.111 10.171-5.875 18.472l.126 35.751 12.374-9.001v-20.399a178.537 178.537 0 0 1 3.264-13.17c1.82-6.299 2.729-9.448 4.225-12.129zm3.026 17.643v12.991l12.5-9.544v-22.975a224.854 224.854 0 0 0-3.889 4.972c-2.549 3.355-3.849 5.075-5.083 7.139a43.963 43.963 0 0 0-3.528 7.417zm-93.75-52.444 12.167 9.056c-.228-7.014.112-16.89 2.75-28.334 1.077-4.674 2.686-11.474 6.583-19.667 6.748-14.183 16.038-23.463 22.014-28.528a86.701 86.701 0 0 1 20.264-12.806l-5.833-3.014a59.795 59.795 0 0 0-11.611-1.652 88.344 88.344 0 0 0-14.125 10.479c-27.149 24.72-31.36 59.944-32.209 74.466z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-nokk'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var nomad = {
  id: 'nomad',
  name: 'Nomad',
  role: 'Attacker',
  unit: 'GIGR',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 3
  },
  meta: {
    gender: 'f',
    country: 'ma',
    season: 'Y3S4',
    height: 171,
    weight: 63
  },
  bio: {
    real_name: 'Sanaa El Maktoub',
    birthplace: 'Marrakesh, Morocco'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#a2794b" d="M73 73h204v204H73z"></path><path style="fill:#fff" d="M106.722 146.778A1958666.88 1958666.88 0 0 0 45 111.056v19.167l61.722 16.555zM233.056 27l-16.195 25.778-16.111 55.236 28.833-53.347zm10.236 174.708L305 217.444v18.778l-61.708-34.514zm-93.973 38.028-17.431 59.681-17.66 25.896 5.146-30.104 29.945-55.473z"></path><path d="m205.666 226.137 75.823 55.29-55.262-75.734c5.408-8.962 8.522-19.463 8.522-30.693 0-11.238-3.119-21.746-8.533-30.712l55.22-75.705-75.787 55.271a59.214 59.214 0 0 0-30.4-8.354c-11.242 0-21.754 3.121-30.723 8.539l-75.888-55.4 55.461 75.968a59.21 59.21 0 0 0-8.35 30.394 59.214 59.214 0 0 0 8.333 30.364l-55.395 76.053 75.925-55.407c8.95 5.387 19.43 8.49 30.637 8.49a59.22 59.22 0 0 0 30.417-8.364z"></path><circle style="fill:#fff" cx="175.25" cy="175" r="51"></circle><path style="fill:#fff" d="m127.449 210.429-32.741 44.904 44.761-32.796a59.772 59.772 0 0 1-12.02-12.108z"></path><path d="m94.708 255.333 44.761-32.796-6.413-5.593-38.348 38.389z"></path><path style="fill:#fff" d="m139.566 127.386-44.9-32.761 32.842 44.862a59.886 59.886 0 0 1 12.058-12.101z"></path><path d="M132.992 133.117 94.666 94.625l32.842 44.862a60.138 60.138 0 0 1 5.484-6.37z"></path><path style="fill:#fff" d="m222.879 139.337 32.51-44.781-44.792 32.585a59.804 59.804 0 0 1 12.282 12.196z"></path><path d="m217.11 132.724 38.279-38.168-44.792 32.585a59.69 59.69 0 0 1 6.513 5.583z"></path><path style="fill:#fff" d="m210.713 222.776 44.731 32.557-32.563-44.672a59.807 59.807 0 0 1-12.168 12.115z"></path><path d="m255.444 255.333-32.563-44.672a59.9 59.9 0 0 1-5.647 6.496l38.21 38.176z"></path><path d="M197.083 153.083 175 12.125l-22.083 140.958L12.278 175 153 197.222l22 140.556 22-140.556L337.722 175z"></path><path style="fill:#fff" d="M191.333 158.958 175 56.667l-16.333 102.291-102.25 15.993L158.583 191 175 293.5 191.417 191l102.166-16.049z"></path><path d="M175 175v118.5L191.417 191zm0 0-16.333-16.042L175 56.667zm0 0 16.333-16.042 102.25 15.993zm0 0-16.417 16-102.166-16.049z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-nomad'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var oryx = {
  id: 'oryx',
  name: 'Oryx',
  role: 'Defender',
  unit: 'UNAFFILIATED',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'jo',
    season: 'Y5S1',
    height: 195,
    weight: 130
  },
  bio: {
    real_name: 'Saif Al Hadid',
    birthplace: 'Azraq, Jordan'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#8c638c" d="M277 277H73v-5.278a14707.742 14707.742 0 0 1 63.833-4.243L73 261.5V229l39.889-2.722L73 222.611v-111.5a810.188 810.188 0 0 0 56.948-2.84L73 102.91V88.333L136.778 84 73 77.778V73h204v204z"></path><path d="M277 73v117.375l-32.958 1.75-26.25 24.958-2.167 26.125c8.03 22.654 13.218 39.403 13.042 41.903a10.046 10.046 0 0 1-.578 2.655c-.562 1.429-1.395 2.384-2.131 3.227a16.724 16.724 0 0 1-2.514 2.34l-6.101 4.7a5.928 5.928 0 0 0-.786.733c-.247.276-.427.478-.568.787-.09.197-.12.341-.211 1.058-.136 1.062-.122 1.146-.194 1.444a4.465 4.465 0 0 1-.438 1.111c-3.037 2.533-8.144 6.006-15.035 7.417a33.968 33.968 0 0 1-7 .667c-3.502-.026-7.259-.054-11.236-2-6.398-3.131-9.887-9.525-10.417-11.917-.079-.358-.379-1.918-1.287-3.801a16.345 16.345 0 0 0-1.004-1.783l-18.083-28.556 60.083-3.528-64.958-3.75c-5.364-8.948-9.86-15.316-11.801-17.383a19.616 19.616 0 0 0-3.241-2.756c-1.295-.837-2.042-1.056-3.048-1.566-2.113-1.071-3.328-2.394-5.507-4.768-1.605-1.749-3.076-3.351-4.421-5.831-.917-1.692-2.19-4.559-2.649-8.488-17.149-16.101-30.15-31.356-39.597-43.625-14.096-18.306-22.768-33.197-25.111-37.278-2.372-4.131-8.839-15.615-15.621-31.101-5.187-11.844-7.87-19.893-8.879-23.01-2.143-6.617-3.739-11.611-4.988-18.639-.952-5.353-1.526-10.896-2.157-16.992a406.608 406.608 0 0 1-.826-8.924c11.148 21.235 25.105 43.61 42.681 65.986a425.402 425.402 0 0 0 10.667 13.042l-4.653-9.306-8.181-22.986a170.435 170.435 0 0 1-1.764-25.958c.046-1.461.133-3.507.31-5.948.104-1.435.32-4.126 1.079-10.163.362-2.878.853-6.57 1.5-10.889a544.879 544.879 0 0 0 4.125 14.312c1.907 6.294 6.994 23.078 13.542 39.243 6.116 15.099 17.989 43.753 42.778 72.667a226.186 226.186 0 0 0 9.778 10.694l7.833 4.194 66.333-.833-64.778-3.111 1.879-5.448c.079-.215.254-.783.083-1.479a2.576 2.576 0 0 0-.865-1.365l-19.542-15.986-3.889-23 20.667 1.222L154.5 136a14.784 14.784 0 0 1 1.555 3l2.778.889 6.333-6.056 83.056-2.667-76.778-4.556a169.044 169.044 0 0 1 9.309-7.814c4.845-3.781 7.806-5.671 15.163-10.908a700.486 700.486 0 0 0 11.083-8.056l65.111-2.278-56.389-5.111a224.43 224.43 0 0 1 13.111-7 224.806 224.806 0 0 1 30.889-12.444L277 73z"></path><path style="fill:#fff" d="m156 205.958 9.25 28.917 7.664-15.286L156 205.958zm-8.521-66.396-11.417-11.083-9.896-1.292 1.396 9.958 17.625 13.542 2.292-11.125zM37.25 84.25a264.595 264.595 0 0 0 16.306 36.861c1.796 3.345 6.161 11.304 13.333 22.167 8.57 12.978 22.34 31.908 43.111 53.931.967.035 10.744.223 16.667-7.653 3.975-5.285 3.853-11.063 3.75-12.806a260.97 260.97 0 0 1-10.694-6.806s-9.505-6.377-18.278-13.444c-16.363-13.183-30.119-28.783-35.611-35.056A368.924 368.924 0 0 1 37.25 84.25z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-oryx'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var osa = {
  id: 'osa',
  name: 'Osa',
  role: 'Attacker',
  unit: 'NIGHTHAVEN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'o',
    country: 'hr',
    season: 'Y6S3',
    height: 180,
    weight: 71
  },
  bio: {
    real_name: 'Anja Katarina JankoviÄ',
    birthplace: 'Split, Croatia'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#fd972c" d="M270.5 73h-68.056l-9.944 8.5h-35.222l-9.236-8.5H79.25l-7.274 8.5v72.708l8.941 7.438v61.021l-8.941 7.438v40.877l8 7.519h190.048l8-8v-64.33l-6.246-6.246V160.34l6.246-6.246V80.278L270.5 73zM85.667 96.125a8.25 8.25 0 1 1 0-16.5 8.25 8.25 0 0 1 0 16.5zm177.861-.111a8.25 8.25 0 1 1 0-16.5 8.25 8.25 0 0 1 0 16.5z"></path><path d="M236.281 118.042h21.011l20.731 20.731-.013-17.51-15.499-15.499h-38.508L208.039 89.8h-95.621l-24.833 25.368v28.723l5.083 5.167h67.561V136.78h14.884l54.847 54.847h30.5l17.566 17.566v53.282h25.143l22.536-21.972v-33.036l-89.424-89.425zm-1.863 62.777-54.486-54.486h-19.704v-7.75h27.189l62.236 62.236h-15.235zm66.79 63.056c-6.351 0-11.5-5.149-11.5-11.5s5.149-11.5 11.5-11.5 11.5 5.149 11.5 11.5-5.148 11.5-11.5 11.5z"></path><path d="M216.667 194.743H74.208v-29.41h6.708v-3.688l-7.917-6.586-1.024-.852v-18.374H57.958l-7.708 7.417v98l13.875 13.493h159.139v-52.507l-6.597-7.493z"></path><path d="M260.339 298.028a19.22 19.22 0 0 0-5.18.715l-6.334-6.334v-.251h4.435l1.538-1.538 2.432-2.432 1.538-1.538v-56.546l-1.538-1.538-2.432-2.432-1.538-1.538h-4.243v-11.488l-1.67-1.557-4.222-3.936-4.222-3.936-1.512-1.41h-30.296l-5.25-.039h-1.776v-39.296l3.454-3.454a34.071 34.071 0 0 0 15.563 3.736c18.885 0 34.25-15.365 34.25-34.25s-15.365-34.25-34.25-34.25-34.25 15.365-34.25 34.25c0 4.951 1.067 9.813 3.112 14.27l-8.838 8.838-1.538 1.538v59.481l1.875 1.574 5.148 4.319v5.61h-4.243l-1.538 1.538-2.432 2.432-1.199 1.199-1.199-1.199-2.432-2.432-1.538-1.538h-4.243v-5.61l5.148-4.319 1.875-1.574v-59.481l-1.538-1.538-8.838-8.838a34.201 34.201 0 0 0 3.112-14.27c0-18.885-15.365-34.25-34.25-34.25s-34.25 15.365-34.25 34.25 15.365 34.25 34.25 34.25a34.078 34.078 0 0 0 15.563-3.736l3.454 3.454v39.296h-7.026v.039h-30.296l-1.512 1.41-4.222 3.936-4.222 3.936-1.67 1.557v11.488h-4.243l-1.538 1.538-2.432 2.432-1.538 1.538v56.548l1.538 1.538 2.432 2.432 1.538 1.538h4.243v.251l-6.334 6.334a19.225 19.225 0 0 0-5.18-.715c-10.614 0-19.25 8.635-19.25 19.25 0 10.614 8.636 19.25 19.25 19.25 10.615 0 19.25-8.636 19.25-19.25 0-.205-.004-.412-.011-.62l13.168-13.168 1.538-1.538v-9.795h4.313l1.538-1.538 2.432-2.432 1.499-1.499 1.499 1.499 2.432 2.432 1.538 1.538h4.243v9.054l1.685 1.559.242.224 9.195 8.505 1.509 1.396h38.802l1.465-1.231 9.347-7.854 1.873-1.573v-10.08h3.948l1.538-1.538 2.432-2.432 1.5-1.5 1.499 1.5 2.432 2.432 1.538 1.538h4.121v9.795l1.538 1.538 13.168 13.168c-.007.208-.011.415-.011.62 0 10.614 8.635 19.25 19.25 19.25s19.25-8.636 19.25-19.25c-.006-10.617-8.641-19.252-19.256-19.252zm-38.065-73.431-1.538 1.538-2.432 2.432-1.5 1.499-1.499-1.499-2.432-2.432-1.538-1.538h10.939zm-83.246 0-1.538 1.538-2.432 2.432-1.499 1.499-1.5-1.499-2.432-2.432-1.538-1.538h10.939zm32.748 65.799 2.207-2.207 1.199-1.199 1.199 1.199 2.207 2.207h-6.812z"></path><path style="fill:#fff" d="M260.339 303.278c-2.338 0-4.538.581-6.476 1.594l-10.288-10.288v-2.889l-7.131-3.028v-1.759h14.641l2.432-2.432v-9.284h-31.5v9.284l2.432 2.432h7.196v12.87l14.939 14.939a14.029 14.029 0 0 0-.245 2.561c0 7.732 6.268 14 14 14s14-6.268 14-14-6.268-14-14-14zm-80.245-28.086v9.284l2.432 2.432h7.318v6.741l-1.997 1.997h-25.371l-1.934-1.934V290.5l-4.417-2.292v-1.3h11.714l2.432-2.432v-9.284h-31.5v9.284l2.432 2.432h7.318v12.009l9.438 8.729h34.833l9.347-7.854v-8.75l-6.295-2.861v-1.273h13.318l2.432-2.432v-9.284h-31.5zm-83.247 0v9.284l2.432 2.432h7.318v7.676l-10.288 10.288a13.921 13.921 0 0 0-6.476-1.594c-7.732 0-14 6.268-14 14s6.268 14 14 14 14-6.268 14-14c0-.876-.091-1.73-.245-2.561l14.939-14.939v-9.167l-3.083-1.944v-1.759h10.471l2.432-2.432v-9.284h-31.5zm125.17-25.272h31.5v17.278h-31.5zm-41.923 0h31.5v17.278h-31.5zm-41.323 0h31.5v17.278h-31.5zm-41.924 0h31.5v17.278h-31.5zm83.247-17.641v9.284h31.5v-9.284l-2.432-2.432h-7.318v-9.051l1.65-1.65h26.624l1.65 1.65v9.051h-7.318l-2.432 2.432v9.284h31.5v-9.284l-2.432-2.432h-7.318v-14.455l-8.444-7.871h-33.479v-.039h-3.879l-3.146-2.64v-44.081l7.873-7.873a28.863 28.863 0 0 0 16.393 5.08c16.016 0 29-12.984 29-29s-12.984-29-29-29-29 12.984-29 29a28.859 28.859 0 0 0 4.324 15.233l-11.587 11.587v54.858l7.023 5.893v13.308h-7.318l-2.434 2.432zm21.99-103.311c0-9.389 7.611-17 17-17s17 7.611 17 17-7.611 17-17 17-17-7.611-17-17zm-34.245 100.879h-7.318v-13.308l7.023-5.893v-54.858l-11.587-11.587a28.856 28.856 0 0 0 4.324-15.233c0-16.016-12.984-29-29-29s-29 12.984-29 29 12.984 29 29 29a28.863 28.863 0 0 0 16.393-5.08l7.873 7.873v44.081l-3.146 2.64h-3.879v.039h-33.479l-8.444 7.871v14.455h-7.318l-2.432 2.432v9.284h31.5v-9.284l-2.432-2.432h-7.318v-9.051l1.65-1.65h26.624l1.65 1.65v9.051h-7.318l-2.432 2.432v9.284h31.5v-9.284l-2.434-2.432zm-36.559-83.879c-9.389 0-17-7.611-17-17s7.611-17 17-17 17 7.611 17 17-7.611 17-17 17z"></path><circle style="fill:#090c0c" cx="131.5" cy="128.819" r="11.75"></circle><circle style="fill:#090c0c" cx="219.333" cy="128.819" r="11.75"></circle></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-osa'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var pulse = {
  id: 'pulse',
  name: 'Pulse',
  role: 'Defender',
  unit: 'FBI',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 3
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Release',
    height: 188,
    weight: 85
  },
  bio: {
    real_name: 'Jack Estrada',
    birthplace: 'Goldsboro, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#d7542b" d="M73 73h204v204H73z"></path><path d="M73 189.958c38.484-32.053 71.96-55.719 96.667-72.069 21.886-14.484 33.335-20.874 48.806-24.738C256.072 83.76 290.152 96.098 309 105c-4.367 21.505-15.712 69.731-40.222 109.111-9.602 15.427-18.475 25.079-29.333 32.667-16.107 11.256-31.75 14.593-39.778 16.222-21.337 4.33-37.923 1.671-56.889-1.556-17.299-2.943-41.757-8.773-69.778-21.333v-50.153z"></path><ellipse style="fill:#fff" cx="176.25" cy="172" rx="83.123" ry="82"></ellipse><path style="fill:#0c0c0c" d="m176.25 172 32.806 63.556a71.564 71.564 0 0 0 20.222-14.833c9.615-10.095 14.059-20.713 16.111-26.889L176.25 172z"></path><circle style="fill:#0c0c0c" cx="141.806" cy="189.958" r="7"></circle><circle style="fill:#0c0c0c" cx="160.194" cy="228.556" r="7"></circle><circle style="fill:#0c0c0c" cx="217.028" cy="127.528" r="7"></circle><path style="fill:#0c0c0c" d="M176.25 87c-47.485 0-86.116 38.131-86.116 85s38.632 85 86.116 85 86.116-38.131 86.116-85-38.631-85-86.116-85zm0 3.5c45.273 0 82.021 35.929 82.59 80.458h-20.322c-.568-33.43-28.273-60.458-62.268-60.458-34.012 0-61.728 27.054-62.269 60.507l-3.648.016v-.001H93.659c.533-44.558 37.295-80.522 82.591-80.522zm0 118c-19.568 0-35.577-14.987-36.901-33.959h5.238a1.75 1.75 0 0 0 1.237-2.987s-.435-.435-1.237-.513c-.384-.037-2.252-.062-5.31-.074.556-19.679 16.89-35.467 36.974-35.467 20.435 0 37 16.342 37 36.5s-16.566 36.5-37.001 36.5zm-1.75-76.456c-21.173.894-38.176 17.916-38.723 38.915-4.655-.005-10.923.007-18.295.035.537-30.99 25.699-56.044 57.019-56.95v18zm-38.66 42.497c1.296 20.305 17.994 36.544 38.66 37.417v18c-30.802-.891-55.655-25.137-56.979-55.416h18.319zM178 211.956c20.666-.873 37.363-17.11 38.66-37.415h18.32c-1.325 30.28-26.177 54.525-56.979 55.415v-18zm38.724-40.998c-.548-20.998-17.552-38.019-38.724-38.914v-18c31.308.905 56.463 25.941 57.018 56.914h-18.294zm-123.025 3.583h20.322c1.332 32.162 27.796 58.019 60.479 58.916v20c-43.957-.904-79.455-35.658-80.801-78.916zM178 253.456v-20c32.684-.897 59.147-26.753 60.479-58.915h20.322c-1.346 43.258-36.844 78.011-80.801 78.915z"></path><path style="fill:#0c0c0c" d="M176.25 154.5c-9.755 0-17.692 7.85-17.692 17.5s7.937 17.5 17.692 17.5 17.692-7.85 17.692-17.5-7.937-17.5-17.692-17.5zm0 31.5c-7.838 0-14.192-6.268-14.192-14s6.354-14 14.192-14 14.192 6.268 14.192 14-6.354 14-14.192 14z"></path><path style="fill:#d7542b" d="M181.667 98.333c-13.09 7.047-22.749 14.127-38.222 25.556-30.606 22.604-54.186 43.603-70.445 59.069V73h204c-44.998 2.194-76.336 15.105-95.333 25.333z"></path><path d="M277 73v14.26a137.779 137.779 0 0 0-31.111-2.149c-3.34.15-12.688.693-24.556 3.333-3.782.841-12.965 3.041-24.333 7.667-5.252 2.137-14.531 6.241-29.083 15.472-13.341 8.463-22.77 16.09-41.083 31-9.954 8.104-11.297 9.485-31.278 26.083A4857.104 4857.104 0 0 1 73 187.291v-14.208c30.768-25.944 54.073-45.205 63.136-52.427 5.975-4.761 12.198-9.419 13.052-10.057 4.989-3.73 8.162-6.093 12.771-9.141 5.065-3.349 9.289-5.821 11.667-7.208a276.119 276.119 0 0 1 8.466-4.74c8.998-5.086 17.004-8.203 22.964-10.149a130.086 130.086 0 0 1 11.778-3.222A134.366 134.366 0 0 1 240.084 73H277z"></path><path style="fill:#fff" d="M298.25 93.5c-5.736-1.995-17.257-5.95-30.917-8.111-8.478-1.342-26.633-4.045-48.667.778-16.908 3.701-28.423 10.152-39.556 16.389-11.582 6.489-21.411 14.182-41.069 29.569-2.475 1.937-12.911 10.126-28.853 23.502A1474.815 1474.815 0 0 0 73 187v14c4.827-4.429 65.933-60.265 106.806-86.574 9.376-6.035 21.136-12.736 36.972-16.871 16.579-4.329 30.152-3.894 34.908-3.632 11.539.635 20.32 2.96 28.315 5.077a184.371 184.371 0 0 1 23.833 8.083c-6.032 28.708-14.007 51.745-20.722 68.361 0 0-13.323 32.965-31.15 53.696-5.407 6.288-11.42 11.109-11.42 11.109-1.403 1.125-6.136 4.846-13.042 8.583-14.203 7.688-28.013 10.263-31.667 10.917-30.516 5.459-62.154-4.425-90.833-13.667a422.857 422.857 0 0 1-32-11.75v11.222a574.87 574.87 0 0 0 25.556 9.278c25.806 8.685 39.918 13.435 59 15.556 7.674.853 27.576 2.918 48.222-2 4.635-1.104 14.865-3.615 26.556-10.056a102.306 102.306 0 0 0 9.26-5.78c2.917-2.043 10.551-7.615 18.962-17.109 6.588-7.436 11.186-14.493 15.778-22.444 12.353-21.394 19.485-40.303 21.778-46.556 5.883-16.044 12.755-38.329 17.444-66.028A205.363 205.363 0 0 0 298.25 93.5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-pulse'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var rook = {
  id: 'rook',
  name: 'Rook',
  role: 'Defender',
  unit: 'GIGN',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'fr',
    season: 'Release',
    height: 175,
    weight: 72
  },
  bio: {
    real_name: 'Julien Nizan',
    birthplace: 'Tours, France'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#3b6183" d="M238.5 73.479v25.303h-12V77.081c0-6.046-4.901-10.947-10.947-10.947h-81.606c-6.046 0-10.947 4.901-10.947 10.947v21.701h-11.5V73.479H73V277h204V73.479h-38.5zm-107.375 3.938a3 3 0 0 1 3-3h81.25a3 3 0 0 1 3 3v21.365h-87.25V77.417z"></path><path style="fill:#fff" d="M252.528 204.405v-18.35h-15.89v-9.013l-12.918-4.505 4.966-56.771-28.145-7.83c.216 1.546 1.483 11.849-5.947 20.265-7.028 7.96-16.592 8.291-18.922 8.372-2.101.073-13.485.467-21.195-8.678-7.028-8.336-5.743-18.361-5.505-20.008l-28.159 7.878 4.966 56.771-12.918 4.505v9.013H96.972v18.35l15.889 4.722v8.63H96.972v18.652l15.889 4.416v9.666l25.601 19.141h72.576l25.601-19.141v-9.666l15.889-4.416v-18.652h-15.889v-8.63l15.889-4.721z"></path><path d="M247.778 200.861v-10.056h-11.167v-2.389h-4.722v-8l-13.222-4.611 4.944-56.528-18.278-5.125c-.238 2.841-1.259 10.439-7.167 17.181-8.163 9.313-19.43 9.887-22.33 9.988-3.099.107-16.23.113-25.003-10.377-5.477-6.549-6.441-13.822-6.667-16.792l-18.278 5.125 4.944 56.528-13.222 4.611v8h-4.722v2.389h-11.167v10.056l15.889 4.722v13.556h-4.722v3.368h-11.167v10.292l15.889 4.417v10.896l22.431 16.771h69.417l22.431-16.771v-10.896l15.889-4.417v-10.292h-11.167v-3.368h-4.722v-13.556l15.889-4.722z"></path><path style="fill:#fff" d="m212.604 178.958 5.146-56.25-8.861-2.375c-.822 3.325-3.119 10.632-9.722 16.833-9.859 9.258-22.007 9.188-25.556 9.111-2.85-.062-18.282-.719-28.028-13.153-3.737-4.767-5.362-9.638-6.125-12.792l-8.625 2.375 5.181 56.264-13.583 4.819v61.319l18.944 14.25h65.986l18.889-14.208v-61.375l-13.646-4.818zM135.5 193.753a2.5 2.5 0 0 1 2.5-2.5h72.5a2.5 2.5 0 0 1 2.5 2.5v.011a2.5 2.5 0 0 1-2.5 2.5H138a2.5 2.5 0 0 1-2.5-2.5v-.011zm0 16.304a2.5 2.5 0 0 1 2.5-2.5h72.5a2.5 2.5 0 0 1 2.5 2.5v.011a2.5 2.5 0 0 1-2.5 2.5H138a2.5 2.5 0 0 1-2.5-2.5v-.011zm77.59 32.619a2.5 2.5 0 0 1-2.5 2.5h-72.5a2.5 2.5 0 0 1-2.5-2.5v-.011a2.5 2.5 0 0 1 2.5-2.5h72.5a2.5 2.5 0 0 1 2.5 2.5v.011zm0-16.304a2.5 2.5 0 0 1-2.5 2.5h-72.5a2.5 2.5 0 0 1-2.5-2.5v-.011a2.5 2.5 0 0 1 2.5-2.5h72.5a2.5 2.5 0 0 1 2.5 2.5v.011z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-rook'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var sledge = {
  id: 'sledge',
  name: 'Sledge',
  role: 'Attacker',
  unit: 'SAS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'uk',
    season: 'Release',
    height: 192,
    weight: 95
  },
  bio: {
    real_name: 'Seamus Cowden',
    birthplace: 'John Oâgroats, Scotland'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M161.5 287.667 239.093 305H45V45h260v128.832l-7.333 3.335-48-69.333 15.283 121.357-119.283-16.69 97.684 47.558-81.851 27.608z"></path><path style="fill:#906f79" d="M192.84 277H73V73h204v73.996l-27.333-39.163L264.95 229.19 145.667 212.5l97.684 47.558L192.84 277z"></path><path style="fill:#fff" d="M142.653 289.194 239.093 305l-48.968-20.604 72.292-23.924-98.146-40.826 107.979 16.41-17.083-114.087 41.302 62.687 8.219-9.239v23.229l18.649-60.077-24.879 29.223-68.959-112.724 30.689 169.088-201.57-36.309 171.34 72.174z"></path><path style="fill:#fff" d="m287.486 206.958 15.389 4.598-13.194 13.347zm-21.333 41.445 27.035-.247-13.924 22.705zm29.253 26.409s9.219 6.833 9.25 6.833.344-10.874.344-10.874l-9.594 4.041zm-37.427 13.813 3.469 11-11.333-3.302z"></path><path d="m214.389 132.056 9.375-9.375-28.451-28.451-9.375 9.375-13.248-13.248-6.023 6.727c-.732.874-3.261 3.675-7.639 4.583-3.889.807-7.096-.324-8.778-1.139a14.016 14.016 0 0 1-4.108-3.033l-7.585-4.94-26.172 26.172 29.215 29.215-68.599 68.599L73 273.445l97.052-97.052 21.107 21.107h14.675l29.389-29.389v-15.222l-20.834-20.833z"></path><path style="fill:#fff" d="m73.001 229.808 76.376-76.347 15.081 15.081L73 259.916l.001-30.108zm66.887-125.252-14.27 14.27 69.257 69.257h7.153l23.917-23.917v-7.028l-52.985-52.985c-1.098 1.113-7.106 6.984-16.667 7.013-9.287.029-15.228-5.473-16.405-6.61z"></path><path transform="rotate(45.001 200.566 117.353)" style="fill:#fff" d="M189.899 114.144h21.328v6.423h-21.328z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-sledge'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var smoke = {
  id: 'smoke',
  name: 'Smoke',
  role: 'Defender',
  unit: 'SAS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'uk',
    season: 'Release',
    height: 173,
    weight: 70
  },
  bio: {
    real_name: 'James Porter',
    birthplace: 'London, England'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path d="M73 73h204v204H73z"></path><path style="fill:#88666f" d="M73 181.444c1.354-1.181 3.293-2.522 5.846-3.381 2.529-.85 4.69-.901 6.209-.925a24.4 24.4 0 0 1 3.889.25c.05-.952.397-5.713 4.361-9.194 3.28-2.881 7.004-3.1 8.223-3.154 6.903-.303 11.468 4.749 12.138 5.515-4.553-9.572-13.344-15.121-21.5-14.028-4.882.654-8.34 3.528-10.111 5.306a26.526 26.526 0 0 0-9.056-7.333v-14.889a9.902 9.902 0 0 1 3.958-3.215 9.808 9.808 0 0 1 3.819-.84c.291-.942 2.229-6.87 8.213-9.378 3.128-1.311 5.991-1.113 7.454-.9.605-.7 5.521-6.193 13.389-5.833 6.797.311 10.914 4.766 11.667 5.611L157.291 118c-5.923-13.147-3.557-27.538 5.292-35.5 6.892-6.201 15.522-6.527 18.499-6.5a19.255 19.255 0 0 1 13.168-14.083 19.26 19.26 0 0 1 18.917 4.583c8.892-8.084 21.517-10.682 32.833-6.75 11.518 4.002 19.889 14.146 21.667 26.25 1.325.47 6.464 2.465 9.667 8.083 3.249 5.701 2.279 11.225 2 12.583.488.343 10.882 7.915 9.833 20.333-.789 9.342-7.488 14.747-8.667 15.667.831 1.919 3.335 8.367.917 15.75-1.157 3.531-3.038 6.049-4.417 7.583v30.167l-.556-3.667a30.744 30.744 0 0 0-13.277 10.167c-1.515-1.61-5.476-5.374-11.667-6.5-7.48-1.361-13.302 2.024-16.222 3.722-7.627 4.435-11.132 11.163-12.444 14.111a25.203 25.203 0 0 1 7.444-5.056c1.535-.678 3.665-1.597 6.5-1.833 1.407-.117 6.76-.48 11.556 3.167 5.82 4.425 6.281 11.304 6.333 12.333a26.746 26.746 0 0 1 9.146-.164c2.572.404 6.648 1.096 10.354 4.219a17.107 17.107 0 0 1 2.833 3.056v47.278H73v-95.555z"></path><path style="fill:#fff" d="M197.583 73.333a1968.362 1968.362 0 0 1-110 150.084 2372.431 2372.431 0 0 1 37.917-55.25c33.635-47.551 55.025-74.041 61.5-82 4.39-5.396 8.069-9.827 10.583-12.834zM231 71.083a277.448 277.448 0 0 0-12.292 12.458c-5.394 5.823-10.88 11.746-16.625 19.833-4.031 5.675-9.063 13.647-13.75 23.958A1092.563 1092.563 0 0 0 231 71.083zm28.25 42.125a233.136 233.136 0 0 1-9.908 13.041c-4.802 5.876-8.382 9.666-12.397 13.917-2.803 2.967-4.398 4.54-6.596 6.298a51.76 51.76 0 0 1-8.848 5.702 153.082 153.082 0 0 1 9.079-11.822c4.853-5.719 8.963-9.708 12.037-12.677a215.61 215.61 0 0 1 11.273-10.113 224.497 224.497 0 0 1 5.36-4.346zm17.542 2.834c.305.326-6.561 7.197-15.083 15.708-9.696 9.684-14.544 14.526-18.625 18.25-4.906 4.477-9.095 8.038-16.375 15.083a429.593 429.593 0 0 0-5.333 5.25l4.542-8.583a821.262 821.262 0 0 1 6.292-6.25c1.952-1.919 17.893-17.518 39.45-35.527 2.624-2.194 4.962-4.113 5.132-3.931zm-7.125 29.708a433.544 433.544 0 0 1-29.75 27.417l-22.25 18.417-.25-6.042a908.124 908.124 0 0 1 52.25-39.792z"></path><path style="fill:#fff" d="M262.583 165.667c.859.99 2.542 2.653 5.167 3.667 3.313 1.279 6.206.782 7.958.458 1.492-.276 7.208-1.426 11.208-6.708 4.983-6.579 3.211-14.162 2.958-15.167 1.523-1.512 8.662-8.918 8.792-20.5.159-14.202-10.357-22.66-11.604-23.629.207-2.316.549-9.553-4.187-16.329-2.48-3.548-5.441-5.666-7.417-6.833-.931-3.348-4.9-16.08-17.794-24.431-10.334-6.692-20.632-6.833-24.442-6.694-11.538.42-19.635 5.444-22.764 7.625-1.63-1.223-6.608-4.63-13.792-4.667-6.049-.03-10.483 2.345-12.5 3.625-6.449 4.092-8.879 10.108-9.583 12.083-2.189-.023-6.36.229-10.875 2.5-1.887.949-6.314 3.251-9.208 8.375-3.743 6.626-2.3 13.326-1.875 15.042l5.25-.625c.253-1.2 2.498-11.025 11.805-15.329 5.59-2.585 10.816-1.831 12.861-1.421.318-1.643 1.683-7.633 7.042-11.25 6.304-4.255 15.564-3.492 22.625 2.25 1.08-.932 14.046-11.734 30.695-7.245 12.264 3.307 21.662 13.6 24.152 26.425 1.642.723 4.478 2.262 6.736 5.319 4.717 6.387 2.882 13.936 2.583 15.083.711.328 10.302 4.947 11.836 15.485 1.172 8.052-2.846 16.219-10.169 20.557.409.478 5.421 6.526 3.417 13.167-1.986 6.583-10.091 11.173-18.875 9.167z"></path><path d="M184.396 80.062c.404-7.328 5.599-13.361 12.312-14.646 5.602-1.072 11.479 1.31 15.083 6.083.616-.608 13.317-12.714 30.276-8.315 11.773 3.054 20.812 12.821 23.141 25.002 1.067.43 5.817 2.476 8.375 7.896 2.59 5.488 1.086 10.52.736 11.597 7.077 4.01 11.342 11.479 10.958 19.264-.471 9.571-7.743 15.042-8.736 15.764 3.789 5.58 3.597 12.818-.319 17.736-4.988 6.263-13.241 5.277-13.639 5.222.841.371 8.693 3.688 15.139-.5 3.515-2.284 4.969-5.733 5.667-7.389 2.356-5.591 1.387-10.719.903-12.694 1.47-1.472 7.953-8.286 8.097-18.806.031-2.254-.167-9.25-4.944-15.833a25.626 25.626 0 0 0-5.486-5.528c.198-1.999.384-6.628-2.042-11.708-2.662-5.575-6.907-8.424-8.611-9.444-.951-3.48-3.441-10.731-10.014-17.264-9.475-9.416-20.788-10.734-23.456-10.978-13.673-1.249-23.403 5.33-25.835 7.082-1.644-1.202-6.184-4.179-12.625-4.229-1.736-.014-8.857.144-14.667 5.667-3.348 3.182-4.791 6.749-5.403 8.625-1.877-.212-6.901-.523-12.128 2.382-4.473 2.486-6.703 5.998-7.344 7.077-2.907 4.892-2.79 9.649-2.658 11.417a60.467 60.467 0 0 1 5.367-6.042c3.783-3.721 6.897-6.713 11.55-7.828a19.954 19.954 0 0 1 3.991-.506c2.694-.06 4.884.45 6.312.896z"></path><path d="m239.033 233.174-2.364-2.858-4.79-4.884-2.815-2.87-5.685-5.797-1.918-1.955-2.618.805a46.342 46.342 0 0 0-7.032 2.822l-.898-.888-5.955-5.887v-7.37l16.571-10.304 2.158-1.342-.035-2.541a82.967 82.967 0 0 1 .382-9.142c.551-5.67 1.512-9.392 2.625-13.702.323-1.25.655-2.539.991-3.922 3.059-12.591 4.743-19.526 3.828-28.783-.9-9.092-3.973-16.108-5.13-18.75-1.533-3.498-3.849-8.785-8.546-14.147-5.579-6.369-11.578-9.511-15.547-11.591-8.208-4.3-17.237-6.933-26.837-7.828l-.435-.041-.435.044a72.753 72.753 0 0 0-16.346 3.583c-6.33 2.179-15.895 5.473-24.569 14.565-10.329 10.828-12.824 23.007-13.764 27.592-1.483 7.24-1.299 13.437-1.057 16.487.266 3.358.871 6.248 1.874 11.037 1.099 5.248 1.928 8.448 2.659 11.271.449 1.732.837 3.228 1.214 4.928 1.307 5.883 2.002 12.122 2.065 18.544l.024 2.465 2.09 1.307 16.344 10.22v7.511l-2.266 2.329-3.542 3.639-.874.898a46.118 46.118 0 0 0-7.354-2.93l-2.581-.777-1.903 1.909-8.361 8.389-4.851 4.867-2.363 2.774c-.855 2.802-1.137 5.66-.838 8.494.55 5.211 2.885 8.748 4.761 11.59 1.575 2.385 3.566 4.707 5.758 6.715 1.755 1.607 4.406 4.034 8.69 5.862 1.76.751 4.705 2.007 8.561 2.007.547 0 1.102-.026 1.65-.077a18.32 18.32 0 0 0 4.492-1.001l2.795-1.895 5.033-5.033 8.583-8.583 1.896-1.896-.765-2.57a47.314 47.314 0 0 0-2.832-7.239l.601-.49 1.74-1.42 4.014 3.868 2.991 2.883 3.112-2.751 3.472-3.069.486-.43.477.424 3.458 3.069 3.081 2.735 2.995-2.828 2.699-2.548 1.306-1.233 1.353 1.127.685.57a45.933 45.933 0 0 0-2.804 7.105l-.748 2.498 1.796 1.891 8.417 8.861 4.845 5.101 3.228 2.073a16.752 16.752 0 0 0 5.976 1.102c5.853 0 10.557-2.995 12.818-4.435 3.325-2.117 5.399-4.34 7.228-6.3 2.262-2.424 4.398-4.713 6.017-8.515 1.61-3.781 1.882-7.157 1.9-8.833a22.569 22.569 0 0 0-.881-6.506zm-76.046-57.052c-.452 2.134-.758 3.404-1.776 4.675-.383.478-1.18 1.472-2.536 1.991a4.54 4.54 0 0 1-1.695.301c-.694 0-1.442-.115-2.347-.265-1.076-.179-4.35-.722-6.985-2.902-5.196-4.299-5.056-13.026-4.972-18.24.004-.273.012-.546.022-.818l8.713 4.121 12.047 5.698a22.662 22.662 0 0 1-.471 5.439zm4.015 32.711 7.013-13.352 7.067 13.352h-14.08zm19.789-35.45a18.227 18.227 0 0 1-.17-2.687l5.529-2.623 15.106-7.166c.1 1.982.1 3.954 0 5.904-.248 4.85-.979 7.075-1.589 8.472-.438 1.005-.935 2.144-1.948 3.317-2.024 2.344-4.585 3.133-5.961 3.557-1.731.534-3.366 1.038-4.781 1.038-.64 0-1.176-.103-1.687-.325-1.547-.669-3.582-2.859-4.499-9.487z"></path><path style="fill:#fff" d="M227 135c-.813-8.215-3.517-14.517-4.774-17.387-1.611-3.678-3.655-8.245-7.809-12.988-4.925-5.623-10.108-8.4-14.25-10.569-4.957-2.597-13.492-6.245-25.167-7.333a68.14 68.14 0 0 0-15.333 3.361c-5.972 2.056-14.86 5.117-22.778 13.417-9.248 9.694-11.663 20.761-12.611 25.389-1.521 7.426-1.108 13.602-.979 15.228.239 3.011.76 5.538 1.792 10.47 1.761 8.412 2.846 11.573 3.862 16.145 1 4.503 2.089 11.076 2.172 19.476l18.458 11.542v11.833l-7.083 7.278a38.802 38.802 0 0 1 14.027 14.389l4.833-3.944 6.889 6.639 6.944-6.139 6.917 6.139 6.906-6.521 4.42 3.681a36.162 36.162 0 0 1 5.84-7.91 36.156 36.156 0 0 1 8.472-6.444l-7.292-7.208v-11.75l18.694-11.625c-.03-2.222.008-5.582.403-9.639.748-7.69 2.201-11.989 3.722-18.25 2.985-12.277 4.565-18.785 3.725-27.28zm-73.105 52.263c-1.288-.214-5.547-.921-9.117-3.874-6.861-5.677-6.697-15.947-6.603-21.779.05-3.115.427-5.698.77-7.499l28.778 13.611c.533 4.057.099 7.294-.333 9.333-.49 2.312-.965 4.431-2.667 6.556-.588.734-1.993 2.445-4.442 3.381-2.381.91-4.453.592-6.386.271zm5.661 26.07 14.444-27.5 14.556 27.5h-29zm52.194-46.291c-.284 5.545-1.167 8.229-1.958 10.042-.545 1.25-1.237 2.803-2.667 4.458-2.812 3.256-6.293 4.378-8.042 4.917-3.025.932-6.33 1.951-9.583.542-5.71-2.474-6.822-10.51-7.167-13a22.982 22.982 0 0 1 0-6.25l28.75-13.639c.809 5.298.831 9.73.667 12.93zm-82 52.958-8.361 8.389a42.076 42.076 0 0 1 5.111 2.403c5.444 3.019 8.832 6.479 11.625 9.375 2.657 2.755 5.484 5.729 8.042 10.458a40.682 40.682 0 0 1 2.542 5.708l8.583-8.583c-1.132-3.8-4.252-12.354-12.5-19.5-5.667-4.91-11.469-7.175-15.042-8.25zm63 27.528 8.417 8.861a47.708 47.708 0 0 1 2.917-6.056c3.456-6.047 7.367-9.813 9.542-11.875 2.278-2.161 5.599-5.264 10.81-7.967a42.499 42.499 0 0 1 4.231-1.908l-8.5-8.667c-3.604 1.108-11.138 3.96-17.875 11.083-5.963 6.306-8.477 12.97-9.542 16.529zm-77.458-13.361c.741.039 1.854.145 3.167.458 3.414.816 5.766 2.466 7.417 3.708 7.425 5.586 13.405 12.482 15.292 16.667 1.297 2.875 1.406 5.586 1.406 5.586.028.698-.003 1.268-.031 1.622-.779.28-1.944.621-3.388.755-3.465.322-6.128-.778-8.029-1.589-3.505-1.496-5.729-3.496-7.417-5.042a31.834 31.834 0 0 1-5.042-5.875c-1.707-2.586-3.607-5.464-4.042-9.583-.305-2.891.229-5.274.667-6.707zm92.291 28.291a13.88 13.88 0 0 1 .042-2.708c.312-2.749 1.395-4.848 2.5-6.625 5.201-8.364 13.954-14.508 15.495-15.59 1.31-.92 3.22-2.165 5.947-2.769a14.835 14.835 0 0 1 3.141-.349c.355 1.234.732 3.032.707 5.214-.009.852-.102 3.741-1.541 7.12-1.283 3.012-2.973 4.857-5.167 7.208-1.777 1.904-3.512 3.764-6.355 5.574-2.347 1.495-7.194 4.581-12.729 3.509-.891-.173-1.6-.416-2.04-.584z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-smoke'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var tachanka = {
  id: 'tachanka',
  name: 'Tachanka',
  role: 'Defender',
  unit: 'SPETSNAZ',
  ratings: {
    health: 3,
    speed: 1,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'ru',
    season: 'Release',
    height: 183,
    weight: 86
  },
  bio: {
    real_name: 'Alexandr Senaviev',
    birthplace: 'Saint Petersburg, Russia'
  },
  svg: {
    contents: '<switch><g><g style="opacity:.4"><path d="M305 305H45V45h260v23.056l-28 68.766-19.444 33.068L277 204.501l28 68.293V305z"></path><path d="m305 77.417-13.417 62.437L305 128.812zm-12.347 93.361L305 192.646v-42.681l-12.347 20.813zm-1.091 30.284L305 211.75v50.917z"></path></g><path style="fill:#a62222" d="M277 277H73V73h204v63.821L262.417 170.5l14.583 34V277z"></path><path d="M115.397 33.285c-.334-1.915-.714-4.085-2.15-6.49-1.52-2.546-3.444-4.074-4.455-4.758a14.829 14.829 0 0 0-6.683-2.446l-.725-.079-.711.164-4.608 1.066-4.189.969-.262.061-19.445 4.498-4.189.969-.24.056-3.64.842-4.189.969.969 4.189 5.025 21.725.969 4.189 4.189-.969 3.64-.842 4.189-.969.24-.056 19.445-4.498 4.189-.969.262-.061 4.608-1.066.539-.125.49-.257a13.26 13.26 0 0 0 4.689-4.097c1.911-2.725 2.218-5.451 2.349-6.615.25-2.216-.045-3.907-.306-5.4z"></path><path transform="rotate(-13.026 69.386 42.76)" style="fill:#fff" d="M67.534 31.617h3.736v22.299h-3.736z"></path><path transform="rotate(-13.026 85.354 39.066)" style="fill:#fff" d="M75.394 27.923h19.958v22.299H75.394z"></path><path style="fill:#fff" d="m106.668 45.591-4.608 1.066-5.025-21.725 4.608-1.066c.962.105 2.831.441 4.74 1.733.411.278 1.959 1.369 3.173 3.402 1.029 1.723 1.295 3.248 1.606 5.025.241 1.382.45 2.576.269 4.18-.119 1.059-.341 2.837-1.597 4.628a8.92 8.92 0 0 1-3.166 2.757z"></path><path d="M160.474 44.997c-.628-4.919-3.641-7.946-5.259-9.572-1.552-1.559-4.44-4.461-9.211-5.214a14.529 14.529 0 0 0-2.256-.176c-1.681 0-3.363.288-4.999.856l-.858.298-31.407 29.287 21.022 22.543 31.378-29.26.355-.792c1.147-2.557 1.574-5.312 1.235-7.97z"></path><path style="fill:#fff" d="m151.508 54.758-15.157-16.254 3.808-3.551c1.04-.361 2.917-.85 5.174-.494 3.384.534 5.468 2.628 6.833 4 1.447 1.454 3.599 3.616 4.042 7.083.325 2.548-.423 4.618-.892 5.664l-3.808 3.552z"></path><path transform="rotate(47.002 121.403 67.623)" style="fill:#fff" d="M110.299 65.892h22.224v3.476h-22.224z"></path><path transform="rotate(47.002 133.239 56.586)" style="fill:#fff" d="M122.135 46.829h22.224v19.527h-22.224z"></path><path d="M191.049 70.778c-.898-2.008-2.57-5.746-6.764-8.141-2.095-1.196-4.523-1.866-7.024-1.937l-.908-.026-39.992 16.347 11.663 28.532 39.955-16.332.613-.615c1.979-1.983 3.355-4.409 3.98-7.014 1.157-4.821-.586-8.719-1.523-10.814z"></path><path style="fill:#fff" d="m180.728 87.54-8.409-20.572 4.82-1.97c1.101.031 3.029.239 5.013 1.372 2.974 1.699 4.181 4.396 4.971 6.163.837 1.873 2.083 4.657 1.267 8.056-.599 2.497-2.033 4.168-2.843 4.98-1.605.658-3.212 1.315-4.819 1.971z"></path><path transform="rotate(67.767 147.78 88.998)" style="fill:#fff" d="M136.676 87.256H158.9v3.489h-22.224z"></path><path transform="rotate(67.767 162.996 82.78)" style="fill:#fff" d="M151.891 73.018h22.224v19.527h-22.224z"></path><path d="M202.428 111.306c-1.847-3.901-5.217-5.949-7.72-6.98l-.787-.324H150.9v30.824h42.992l.764-.303c3.19-1.267 5.691-3.347 7.233-6.018 1.744-3.021 1.741-5.86 1.736-9.455-.002-3.147-.005-5.226-1.197-7.744z"></path><path style="fill:#fff" d="M187.972 130.526v-22.224h5.098c1.433.59 4.115 1.979 5.471 4.844.78 1.648.782 3.068.785 5.909.004 3.355.006 5.279-1.16 7.3-1.346 2.331-3.533 3.551-5.096 4.172l-5.098-.001z"></path><path transform="rotate(90 156.938 119.414)" style="fill:#fff" d="M145.826 117.676h22.224v3.476h-22.224z"></path><path transform="rotate(90 173.472 119.414)" style="fill:#fff" d="M162.36 109.914h22.224v19H162.36z"></path><path style="fill:#fff" d="m274.229 152.458 18.549-42.68-5.722 38.444 29.305-24.444-27.708 46.972 23.722 42.396L287 192.948l5.708 38.49-18.479-43.209z"></path><path d="m282.688 141.938-2.875 19.312 16.458-13.646-13.812 23.003 11.458 20.726-13-9.583 3.625 21.167L277 188.875l-2.139-1.569.167-34.306 1.861-.656 5.799-10.406z"></path><path d="M276.889 188.844v-36.5h-25.708v3.5h-30.958v-14.261h-62.028v13.25h-31.679l-.781.323a14.3 14.3 0 0 0-3.691 2.226c-1.347 1.124-2.213 2.291-2.678 2.918a13.528 13.528 0 0 0-.961 1.464l-.123.182c-.15.173-.43.494-.534.539-.07.011-.289-.019-.395-.032-1.159-.15-2.187-1.165-2.575-1.595l-1.557-1.722-52.929 8.76v51.977l.096.444a5.82 5.82 0 0 0 5.816 4.6h3.839a8.943 8.943 0 0 0 1.737-.077 9.904 9.904 0 0 0 2.812-.872c8.374-4.112 13.636-8.75 14.224-9.278 6.254-5.677 9.393-8.526 11.652-10.855a203.748 203.748 0 0 0 12.441-14.088l4.673-.054a285.646 285.646 0 0 1-.299 2.616s-.699 5.859-1.937 10.338a6.52 6.52 0 0 1-.891 1.945l-3.954 5.575 43.905.166a7.659 7.659 0 0 0 3.79-.813v28.563h62.028v-23.389h32.722v-23.972h-8.964v-5.379h7.2v3.5h25.707zm-145.659 8.72.541-3.692 8.601 3.608-9.142.084zm88.992-12.22h4.675v5.379h-4.675v-5.379z"></path><path style="fill:#fff" d="M158 159.083h-30.639a9.997 9.997 0 0 0-2.595 1.561c-.94.786-1.552 1.6-1.989 2.189-.794 1.07-.669 1.188-1.292 1.903-.461.529-1.176 1.35-2.334 1.759-.966.341-1.804.242-2.346.172-2.641-.343-4.508-2.215-5.181-2.958L64.542 171.5v47.917c.033.154.129.495.427.792.472.47 1.083.462 1.198.458h4c.255.018.608.023 1.022-.035 0 0 .778-.11 1.529-.478 8.178-4.016 13.241-8.611 13.241-8.611 6.195-5.623 9.293-8.435 11.458-10.667a198.803 198.803 0 0 0 13.425-15.355l11.381-.131a139.504 139.504 0 0 1-.722 7.444c-.75 6.035-1.473 8.592-1.805 9.693a41.83 41.83 0 0 1-1.251 3.557h36.083c.212.016 1.404.087 2.403-.806 1.118-.998 1.078-2.385 1.069-2.569v-43.626zm-3.917 41.75c-.315.312-.687.414-1.333.583-1.052.275-1.894.25-1.917.25-1.309-.028-11.072.069-24.528.194l2.056-14.028 26.222 11c.044.307.154 1.352-.5 2.001zm101.348-44.24v3.5h-35.264v21h8.98v13.879h-8.869v15.472h28.416v-15.472h-8.963v-13.879h15.7v3.5h17.208v-28zm-49.959-10.76h10.5v88h-10.5zm-43.028 88h38.5v-88h-38.5v88zm7-73.639h24.5v7h-24.5v-7zm0 17.516h24.5v7h-24.5v-7zm0 17.515h24.5v7h-24.5v-7zm0 17.515h24.5v7h-24.5v-7z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-tachanka'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var thatcher = {
  id: 'thatcher',
  name: 'Thatcher',
  role: 'Attacker',
  unit: 'SAS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'uk',
    season: 'Release',
    height: 180,
    weight: 86
  },
  bio: {
    real_name: 'Mike Baker',
    birthplace: 'Bideford, England'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#88666f" d="M73 73h204v204H73z"></path><path d="M232.198 114.561V95.667l9.691-23.838-9.691-14.746H204.25v-5.5h-57.5v5.5h-28.448l-9.691 14.746 9.691 23.838v18.894C100.042 130.465 88.5 153.884 88.5 180c0 47.911 38.839 86.75 86.75 86.75S262 227.911 262 180c0-26.116-11.542-49.535-29.802-65.439z"></path><path style="fill:#fff" d="M175 253.066c-40.289 0-73.066-32.777-73.066-73.066 0-18.563 7.397-37.048 20.295-50.713a8.566 8.566 0 0 1 12.459 11.759c-9.928 10.519-15.622 24.716-15.622 38.953 0 30.842 25.092 55.934 55.934 55.934s55.934-25.092 55.934-55.934c0-14.251-5.738-28.437-15.742-38.919a8.566 8.566 0 1 1 12.393-11.828c13.016 13.638 20.481 32.134 20.481 50.747 0 40.29-32.777 73.067-73.066 73.067z"></path><path style="fill:#fff" d="M175 202.566a8.566 8.566 0 0 1-8.566-8.566v-76.223c0-4.731 3.835-8.566 8.566-8.566s8.566 3.835 8.566 8.566V194a8.566 8.566 0 0 1-8.566 8.566zM227.014 65.5h-31.375v-5.417h-40.278V65.5h-32.2l-4.642 7.374 1.228 3.237 9.684 24.05a5.25 5.25 0 1 0 9.74-3.922l-8.104-20.128h21.711V94.13a3.125 3.125 0 1 0 6.25 0V76.111h13.625V94.13a3.125 3.125 0 1 0 6.25 0V76.111h13.917V94.13a3.125 3.125 0 1 0 6.25 0V76.111h20.146l-8.105 20.128a5.25 5.25 0 1 0 9.74 3.922L232 72.917l-4.986-7.417z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-thatcher'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var thermite = {
  id: 'thermite',
  name: 'Thermite',
  role: 'Attacker',
  unit: 'FBI',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Release',
    height: 178,
    weight: 80
  },
  bio: {
    real_name: 'Jordan Trace',
    birthplace: 'Plano, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#d7542b" d="M73 73h204v204H73z"></path><path d="m235.222 195.333-18-.5-1.389-10.556-3.292-8.819L216 171.25l8.208 6.083 4.958-3.292 7.25 6.167-3.583 8.208 4.875-8.542-6.875-7.042 7.167-4.75L224.625 173l-5.167-6.333.5-.583-.708-10.292 1.792-10.333-6.931-7.653 5.361-4.917 24.5 1.75 24.583-17.583-24.638 16.444-25.194-4.611-5.681 3.542 1.431-13.181 8.597-6.5 2.75-7.708 4.583-2.056-4.931 1.833-2.986 6.903-9.174 5.882-8.007-3.785-10.861.222-5.903 3.083-4.75-7.708-12.042-4.5 5.333-7.833-7.417 8.583 12.375 5.792 3.25 7.542-9.25-.417-10.333-6.667-9.917 7.042-9.097-4.931-3.486.472-14.375-7-4.938 11.479-15.604-.229 16.062.833 5.146-10.208 10.444 5.653-5.236.639-.667 11.417 1.042 7.25-4.917 8.917-5.375-.875-3.208-10.042-15.083 1.333-8.875-10.083 8.625 10.708 14.417-.75 2.25 9.125-10.958 1.292 11.375 8.5-8.264 3.583 10.069-3.444-7.556-6.931 7.417.125 7.208 1.958 3.083-3.875.042 3 2.875 8.958.208 9.417-4.375 7.542-7.062 4.417-8.854-.375-8.123 2.792L95.208 175l14.667 5.292 8.75-2.417 8.042 1.292-1.5 8.042-13-1.917 11.583 3.792-16.417 11.583-2.125 7.167-4.167 5.417 4.792-5.208 2.375-6.583 18.583-11.958 3.458-9.958 3.875-1.5 2.708 6.833.25 9.125-4.583 9.833 4.292 9.667-2.833 5.667-6.333-2.208-10.5 11.75-19.417-3.583-16 5.333 16.069-4.319L117.729 231l10.729-10.333 3.562 2 4 10.854 13.083 3.542-11.84 11.438-8.389-7.708-11.75 13.625 11.773-12.813 8.338 8.396 14.278-12.542 5.611 1.458 10.208-2.639 12.611-.167 8.347-.944-6.146 7.917 5.5 8.062-3.625 6.354 4.229-6.562-4.667-7.896 7.896-8.562 5.375-1.083 8.146-3 5.417 3.583-13.25 12.833-5.417-1.688 5.729 3.021 16.417-12.354 8.021 4.917-7.938-17.917-.208-6.479 7.667 4.521 4.104-7.208 9 4.875-9.312-6.875-4.479 4.208-4.896-5.146 4.854-6.542-2.431-7.368 16.5-.278 11.444 5.167 4.778-2.111-4.889 1.5-10.887-5.723zm-98.75-64.916v-11.111l8.778.028-8.778 11.083zm2.153 100.271-2.111-7.312 2.25-5.167 11.014 15.264-11.153-2.785zm70.333-58.813 1.562-12.292 5.979-14.208-2 11.875 2.125 5.375-7.666 9.25zm2.542 37.833-.604-25.083 5.771 19.229-5.167 5.854z"></path><path style="fill:#fff" d="m147.458 119.958 8.625 4.917 9.75-7.583 16.084 7.5 15.889-4.681 11.277-.167-1.611 15.612 6.028 7.972-4.861 12.694-3.681 15.195 4.125 6.875-2 22.166 3.875 27.459-8-5.5L182 233.458l-26.083 2-19.5-31.125 6.958-16.916-4.667-12.459 4.5-16.25-6.583-20.541z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-thermite'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var thorn = {
  id: 'thorn',
  name: 'Thorn',
  role: 'Defender',
  unit: 'GARDA ERU',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'ie',
    season: 'Y6S4',
    height: 188,
    weight: 78
  },
  bio: {
    real_name: 'Brianna Skehan',
    birthplace: 'County Kildare, Ireland'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#577524" d="M73 73h204v204H73z"></path><path d="M328.125 280.25a205.241 205.241 0 0 0-7.529-28.853l3.932-16.953-6.893 8.821a198.567 198.567 0 0 0-10.746-23.154c-2.97-5.444-6.569-11.943-11.39-18.963l2.686-6.286-6.027 1.618a137.97 137.97 0 0 0-17.991-19.814c-.566-.513-1.13-1.01-1.694-1.506a98.816 98.816 0 0 0-3.183-12.74l2.599-24.643-6.654 14.181a99.671 99.671 0 0 0-18.524-27.443l13.79-5.683-17.761 1.734a100.003 100.003 0 0 0-5.081-4.476c-1.694-7.598-3.979-14.584-6.557-20.97l12.12 3.545-16.943-14.289c-3.916-7.936-8.031-14.748-11.502-20.489a193.671 193.671 0 0 0-10.563-15.678l2.285-9.461-6.856 3.577a197.558 197.558 0 0 0-24.269-25.119 218.171 218.171 0 0 0-21.242 21.285l-.8-12.66-5.684 20.489a210.128 210.128 0 0 0-8.649 11.789 206.966 206.966 0 0 0-11.201 18.435l-7.632-.712 3.87 8.081a156.522 156.522 0 0 0-3.307 7.304c-.522 1.24-1.08 2.575-1.66 4.005l-6.07-7.558 4.563 11.409a131.753 131.753 0 0 0-4.977 16.17 100.162 100.162 0 0 0-14.937 14.745l-9.538-6.88 5.982 11.476a99.16 99.16 0 0 0-14.577 29.093l-17.071-1.486 15.658 6.538a99.642 99.642 0 0 0-1.906 9.581 214.482 214.482 0 0 0-18.916 22.843l-5.197-7.823 2.75 11.317c-.43.628-.864 1.245-1.291 1.883l-14.265-3.478 11.562 7.627a197.415 197.415 0 0 0-5.089 8.485 208.952 208.952 0 0 0-8.983 17.842l-3.517-.592 1.698 4.795a204.138 204.138 0 0 0-4.365 11.288 208.043 208.043 0 0 0-8 29.417 237.725 237.725 0 0 0 21.285 5.798l-7.452 7.452 14.341-6.032c15.917 3.034 33.737 4.658 52.742 3.365 2.068-.141 4.07-.312 6.007-.505l10.382 10.005-5.179-10.593c12.612-1.6 21.663-4.013 25.271-5.043 10.781 4.001 22.442 6.191 34.616 6.191 12.929 0 25.282-2.468 36.615-6.955a216.926 216.926 0 0 0 25.048 4.375l-2.482 5.247 8.265-4.664c4.77.415 9.729.683 14.857.77l6.878 12.061 2.613-12.116c3.658-.103 7.387-.297 11.192-.607 4.287-.349 8.428-.825 12.435-1.391l11.773 7.558-5.65-8.512a213.301 213.301 0 0 0 31.985-8.068zM140.16 249.967a30.87 30.87 0 0 1-4.161-10.856l-.444 13.444c-5.495-3.353-17.658-11.826-25.333-27.778-4.958-10.304-6.136-19.767-6.383-25.697l14.383-9.192L123 200.999l-8.111.333a31.21 31.21 0 0 0 10.365 3.762 208.916 208.916 0 0 0 10.817 18.678 186.471 186.471 0 0 0-5.737 10.672l8.209-6.957 12.569 16.624-10.952 5.856zm37.007-106.745c-6.47-.007-12.489.322-17.988.845L158 139.874l-4.625 5.021a321.649 321.649 0 0 0-9.541 1.271 72.34 72.34 0 0 1 1-18 66.528 66.528 0 0 1 17.944-5.611 66.402 66.402 0 0 1 13.833-.778 114.677 114.677 0 0 1-5.111 15.722l10.5-15.333c3.313.281 7.192.849 11.444 1.944a68.86 68.86 0 0 1 2.845.805 71.008 71.008 0 0 1 10.059 4.076 127.307 127.307 0 0 1 .652 15.841l-2.5-.167-11.833-13.5 6.167 13.333a188.018 188.018 0 0 0-21.667-1.276zm62.03 81.626a67.472 67.472 0 0 1-2.68 4.946l-3.101-11.711-.37 16.977a74.389 74.389 0 0 1-16.464 16.189l-15.333-7.417 14.939-22.074 3.727 13.824-.86-18.599a214.735 214.735 0 0 0 6.789-13.152l16.738-1.666-12.829-6.998 2.662-6.585 13.75 9.25c-.463 7.698-2.175 17.217-6.968 27.016z"></path><path style="fill:#fff" d="M205.333 87c-4.075-6.14-7.673-10.95-10.272-14.595-2.742-3.846-2.378-3.6-5.122-7.506a223.42 223.42 0 0 0-11.162-14.565L182 46.611a1147.884 1147.884 0 0 1 14.111 21.278 1149.295 1149.295 0 0 1 19.212 30.75 109.246 109.246 0 0 1 12.232 5.917 183.082 183.082 0 0 0-12.778-29.111 182.72 182.72 0 0 0-14.411-22.304l3.188-10.362-13.444 9.778 3.699-7.611a186.582 186.582 0 0 0-10.477-11.389l-3 4.667-8.667-10.333a203.651 203.651 0 0 0-18.889 20.778c-11.066 14.002-17.57 26.013-19.667 30-.24.457-.486.924-.734 1.399l-8.044-1.843 5.216 7.389c-3.348 6.784-6.964 15.125-9.771 25.611a133.32 133.32 0 0 0-3.934 22.025l-8.177 8.42 7.639.322a139.36 139.36 0 0 0 .139 11.789l3.244-.848a95.293 95.293 0 0 1-.466-8.596c-.048-5.384.27-21.467 10.556-45.444C141.628 68.934 162.314 44.656 171 35l3.333 3.111a104.52 104.52 0 0 0-10.556 10.222c-5.036 5.614-8.152 10.311-12 16.111-5.189 7.821-8.616 14.144-9.894 16.547-4.266 8.023-6.903 14.358-8.542 18.323-2.314 5.6-4.505 10.901-6.676 18.353-3.254 11.167-4.364 19.956-4.718 23.083a131.993 131.993 0 0 0-.797 11.536l6.013-1.573c.284-5.044.684-9.346 1.057-12.712.906-8.165 1.744-11.738 2.111-13.222.869-3.509 1.738-5.942 3-9.444a9319.488 9319.488 0 0 1 7.107-19.653 208.963 208.963 0 0 0-4.201 17.234 209.336 209.336 0 0 0-3.968 36.462l4.839-1.266a96.167 96.167 0 0 1 .444-17.778c.432-3.65 1.93-14.513 8.556-29.889 3.816-8.855 8.315-16.833 12.958-23.88l-2.958-6.453 15.333 11-6.216-13.297a184.055 184.055 0 0 1 9.771-11.925 180.668 180.668 0 0 1 24.611 37.667 109.71 109.71 0 0 1 9.704 2.834 23.52 23.52 0 0 0-.724-2.874c-.98-3.058-2.339-5.138-3.254-6.517zm-5.555-24.334c.91.638 3.738 2.709 7.777 8.445a67.02 67.02 0 0 1 5.222 8.778v5.444a21.665 21.665 0 0 1-2.111-2.222c-1.498-1.82-2.31-3.42-2.556-3.889-1.196-2.291-4.841-8.222-11.278-18.333a25.09 25.09 0 0 1 2.946 1.777z"></path><path style="fill:#fff" d="M145.222 124.556a82.131 82.131 0 0 1 17.333-4.778c4.94-.792 15.231-2.346 27.952.342 19.542 4.13 31.727 15.504 35.715 19.324A76.617 76.617 0 0 1 237.444 153a142.949 142.949 0 0 1 12 5.889 143.3 143.3 0 0 1 19.333 12.778c-2-8.217-6.431-21.891-16.868-35.881-3.598-4.822-12.655-16.044-27.146-24.914-29.712-18.187-61.415-13.727-71.097-11.983a166.718 166.718 0 0 0-8.444 25.667zm-20.594 129.97c2.012-.442 3.989-.896 5.928-1.36-4.235-3.293-26.88-21.564-29.778-53.167-1.863-20.324 5.38-35.918 8.889-42.417a100.293 100.293 0 0 1-1.11-13.583h-6.89l7.044-7.161a100.174 100.174 0 0 1 2.039-15.139c-5.017 4.362-29.457 26.523-32.417 63.966-3.243 41.028 21.833 68.388 25.889 72.667a326.817 326.817 0 0 0 14.167-2.5c.469-.093.917-.195 1.383-.289l-10.216-12.322 15.072 11.305z"></path><path style="fill:#fff" d="M193.389 160.5c4.34.324 8.287.99 11.793 1.807l2.596-11.196c-16.479-2.397-30.424-2.512-40.784-2.021-2.485.118-5.139.249-7.992.467a11.134 11.134 0 0 1-1.002-2.224 11.393 11.393 0 0 1-.5-4.5 38.825 38.825 0 0 0-3.417 4.667 38.462 38.462 0 0 0-1.525 2.688A129.128 129.128 0 0 0 137.111 153a135.54 135.54 0 0 0-21.667 7.299 64.249 64.249 0 0 0-2.722 5.373 88.166 88.166 0 0 0 3.166-.894c3.837-1.162 6.505-2.254 7.921-2.81 5.692-2.234 10.546-3.409 16.523-4.857 8.537-2.068 14.99-2.894 21.889-3.778 4.143-.531 8.971-1.048 14.822-1.239 3.012-.098 5.581.077 10.719.427 2.051.14 5.013.377 8.305 2.01.538.267.971.514 1.267.691-1.729-.215-4.22-.485-7.225-.667-4.955-.299-11.412-.363-23.749.999-7.286.804-15.025 1.659-25.362 3.889a212.557 212.557 0 0 0-29.281 8.584c-.204.506-.411 1.001-.608 1.527a62.828 62.828 0 0 0-1.182 3.522c3.846-1.479 10.759-3.909 19.626-5.967 7.125-1.653 16.589-3.315 27.944-3.889a329.034 329.034 0 0 0-14.944 4.222 329.318 329.318 0 0 0-34.369 12.738 64.832 64.832 0 0 0-.964 7.928 112.347 112.347 0 0 1 19.88-9.436c2.489-.895 11.341-3.975 24.343-5.786 19.635-2.735 37.779-1.046 51 1.222l1.887-8.137a111.988 111.988 0 0 0-8.109-2.974 112.667 112.667 0 0 0-9.889-2.701 77.692 77.692 0 0 1 7.057.204z"></path><path style="fill:#fff" d="m234.5 200.25-11.726-6.841a186.685 186.685 0 0 0 10.67-35.631 89.32 89.32 0 0 0-9.07-10.69 97.46 97.46 0 0 1-4.875 29.246 97.487 97.487 0 0 1-13.528 26.5 154.547 154.547 0 0 0 12.062-61.506c-.403-.332-.793-.668-1.207-.997a85.89 85.89 0 0 0-4.327-3.218 88.453 88.453 0 0 1-.167 7.667c-.165 2.539-.671 8.613-2.778 17-5.006 19.93-13.491 36.557-19.174 46.258l-8.13.071 3.874 6.794a73.55 73.55 0 0 1-1.593 2.336 148.927 148.927 0 0 1-7.088 9.041l6.158 5.328a126.021 126.021 0 0 0 3.064-3.939c7.681-10.315 12.828-20.512 16.333-29.333a73.061 73.061 0 0 1-3.833 14c-.903 2.349-2.236 5.453-6.833 13.667a381.248 381.248 0 0 1-5.069 8.773l7.069 6.116a187.01 187.01 0 0 0 23.796-37.113l-4.796-3.526H234.5zm-77.722 29.306c-8.084-10.403-13.045-18.326-14.222-20.222a214.216 214.216 0 0 1-14.128-26.813l-5.261 1.896a176.876 176.876 0 0 0 24.278 45.25 176.642 176.642 0 0 0 29.474 31.012 62.718 62.718 0 0 0 7.583-.423c-12.122-11.626-21.228-22.34-27.724-30.7z"></path><path style="fill:#fff" d="M184.778 247.444a93.583 93.583 0 0 1-7.333-9.889c3.5 3.182 7.238 6.416 11.222 9.667a275.367 275.367 0 0 0 11.679 9.006 61.72 61.72 0 0 0 5.766-2.673c-7.504-3.579-12.58-7.41-15.889-10.333-1.552-1.372-2.67-2.503-7.111-6.556-4.693-4.283-7.887-7.073-8.734-7.83-7.063-6.311-12.103-15.235-16.71-23.392-3.963-7.018-8.768-16.665-13-28.778l-13.061 4.708a289.174 289.174 0 0 0 7.723 14.133c1.919 3.29 8.174 13.868 18.115 27.381 7.416 10.081 17.647 22.825 31.136 36.75a60.706 60.706 0 0 0 6.727-1.627l.006-.002a93.451 93.451 0 0 1-10.536-10.565zM269.75 282a182.592 182.592 0 0 0 34.75-15.166 109.099 109.099 0 0 1-26.583 17.084 159.371 159.371 0 0 0 42.639-8.528 249.368 249.368 0 0 0-11.333-34.278c-1.832-4.435-3.777-9.139-6.276-14.296.523 4.567.763 9.779.387 15.518a86.596 86.596 0 0 1-1.583 11.75c.266-4.964.244-10.595-.333-16.75a113.986 113.986 0 0 0-3.924-20.78c-.296-.509-.593-1.019-.902-1.537a275.883 275.883 0 0 0-2.633-4.334l-6.069 2.207 7.611-15.639-9.747 1.462c-6.233-8.192-14.779-17.537-26.404-26.026a124.904 124.904 0 0 0-22.015-12.853l-2.333 9.944c1.816.99 4.289 2.406 7.129 4.254 2.375 1.546 6.108 4.213 11.204 8.385 4.9 4.011 12.21 10.057 19.667 19.167 5.397 6.594 12.742 17.08 18.5 31.833a165.239 165.239 0 0 0-9.36-14.339c-.87-1.192-6.214-8.472-13.14-15.827-12.994-13.799-27.445-23.496-35.226-28.326l-1.523 5.77c11.672 6.778 20.081 14.049 25.638 19.528 15.708 15.487 23.557 31.375 27.861 40.278a162.647 162.647 0 0 1 8.083 20 212.31 212.31 0 0 1-15.389 2.167 212.225 212.225 0 0 1-29.167 1 91.493 91.493 0 0 1-4.369 4.623c2.145.089 4.307.164 6.508.21 9.251.193 18.07-.023 26.41-.535a136.87 136.87 0 0 1-8.993 2.285c-10.665 2.327-20.623 3.148-29.552 3.142a91.223 91.223 0 0 1-12.503 8.774 187.545 187.545 0 0 0 29.877 3.032l6.112 11.742 2.422-9.519L267.417 277l2.333 5z"></path><path style="fill:#fff" d="M265.417 218.5a22.989 22.989 0 0 0-1.732-2.354 104.694 104.694 0 0 1-4.629 8.187 105.302 105.302 0 0 1-8.389 11.556c3.179-6.275 5.697-11.217 7.667-15 .505-.969 1.48-2.834 2.556-5.444.227-.55.434-1.079.629-1.592-2.409-2.399-6.648-6.877-12.352-12.936-.818 7.266-3.413 21.11-13.167 35-3.083 4.39-15.448 20.986-38.511 28.307a73.967 73.967 0 0 1-22.135 3.443 94.846 94.846 0 0 1-7.854 5.917 96.036 96.036 0 0 1-22.417 11.167c8.289 2.633 23.484 6.26 42.25 3.75 25.818-3.454 43.129-16.484 50.333-22.667 19.133-16.418 26.668-35.754 29.417-44.233a22.965 22.965 0 0 0-1.666-3.101zM157.167 247a105.816 105.816 0 0 1-19.667 10.333c-14.109 5.609-27.484 7.365-39.199 7.706l1.199 5.794-9.5-13.916-4.404 8.03a442.115 442.115 0 0 1-6.275-.288 185.956 185.956 0 0 1-23.655-2.742 212.053 212.053 0 0 1 20.25-41.25 106.53 106.53 0 0 1-1.917-7.5 106.886 106.886 0 0 1-2.417-21.583 201.411 201.411 0 0 0-22.417 32.583 199.065 199.065 0 0 0-6.911 13.794l2.022 3.651-8.694-2.652 3.26 6.897a203.228 203.228 0 0 0-9.844 31.477 215.305 215.305 0 0 0 17.263 4.416c9.005-.103 22.418-.457 34.515-1.583 10.86-1.011 13.244-1.955 23.389-3.278.851-.111 3.117-.402 6-1.278a35.94 35.94 0 0 0 4.907-1.892 21.879 21.879 0 0 1-3.962 2.836c-3.211 1.791-6.026 2.275-7.778 2.611-4.256.816-8.351 2.334-12.581 3.278-3.799.848-8.561 1.95-14.731 3.442 5.296.349 10.103.465 14.312.447 14.446-.064 30.797-.282 50.5-7.5 14.018-5.135 24.571-11.924 31.486-17.083L157.167 247zM35 271.736a400.499 400.499 0 0 1 10.667-26.403c.799-1.785 3.555-7.904 8.667-18 6.838-13.505 9.361-17.284 10.667-19.167a111.416 111.416 0 0 1 3.722-5.056l-1.583 3.499-1.584 3.501c-1.961 4.335-8.971 18.664-12.944 27.111-3.336 7.09-5.601 11.905-8.333 18.778a251.104 251.104 0 0 0-5.951 16.647 1809.4 1809.4 0 0 1-3.328-.91zM52.222 275a89.82 89.82 0 0 1-8.685-1.534 40.278 40.278 0 0 1 1.629-8.716c.716-2.354 1.482-4.089 2.167-5.583 1.435-3.133 3.88-8.187 7.667-14.917-2.156 5-4.242 10.881-5.833 17.583a106.092 106.092 0 0 0-1.667 8.583c.496.266 1.26.657 2.216 1.075 3.321 1.454 6.38 2.102 12.84 2.841 2.733.313 6.149.651 10.111.917A90.593 90.593 0 0 1 52.222 275zm104.222-11.167c-3.352 2.371-7.521 3.965-15.722 7.056-3.546 1.336-5.357 2.015-7.222 2.556a64.261 64.261 0 0 1-11.944 2.265l41-17.377c-2.39 2.692-4.625 4.448-6.112 5.5z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-thorn'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var thunderbird = {
  id: 'thunderbird',
  name: 'Thunderbird',
  role: 'Defender',
  unit: 'UNAFFILIATED',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'ca',
    season: 'Y6S2',
    height: 172,
    weight: 70
  },
  bio: {
    real_name: 'Mina Sky',
    birthplace: 'Nakoda Territories, Canada'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#7f3c32" d="M73 73h204v204H73z"></path><path d="M179.266 168.362V83.779l73.087-42.197v84.583z"></path><path style="fill:#fff" d="M194.244 141.967V92.828l42.847-24.738v49.139z"></path><path d="M171.303 168.362V83.779L98.216 41.582v84.583z"></path><path style="fill:#fff" d="M156.325 141.967V92.828L113.478 68.09v49.139z"></path><path d="m95.087 132.931 73 42-73 42-73-42z"></path><path style="fill:#fff" d="m52.757 174.932 42.33-25.541 42.328 25.536-42.328 25.545-42.33-25.54z"></path><path d="m254.913 132.931 73 42-73 42-73-42z"></path><path style="fill:#fff" d="m212.582 174.932 42.331-25.541 42.328 25.536-42.328 25.545-42.331-25.54z"></path><path d="M171.303 182.638v84.583l-73.087 42.197v-84.583z"></path><path style="fill:#fff" d="M156.325 209.033v49.139l-42.847 24.738v-49.139z"></path><path d="M179.266 182.638v84.583l73.087 42.197v-84.583z"></path><path style="fill:#fff" d="M194.244 209.033v49.139l42.847 24.738v-49.139z"></path><circle style="fill:#fff" cx="175.284" cy="231.24" r="10.807"></circle><circle style="fill:#fff" cx="175.284" cy="118.623" r="10.807"></circle><circle style="fill:#fff" cx="175.284" cy="174.931" r="10.807"></circle></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-thunderbird'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var twitch = {
  id: 'twitch',
  name: 'Twitch',
  role: 'Attacker',
  unit: 'GIGN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'fr',
    season: 'Release',
    height: 168,
    weight: 58
  },
  bio: {
    real_name: 'Emmanuelle Pichon',
    birthplace: 'Nancy, France'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#315978" d="M73 73h204v204H73z"></path><path d="M175 107.833c-5.238 0-9.5 4.262-9.5 9.5V127.5h-19.75c-9.787 0-17.75 7.963-17.75 17.75v5.076c-3.222 1.031-7.075 2.501-11.324 5.004-2.365 1.393-5.308 3.128-8.517 6.358-1.511 1.521-5.525 5.563-7.895 12.214-.854 2.398-1.188 4.528-1.693 7.752-.547 3.497-1.229 7.85-1.402 13.321-.114 3.602-.463 14.564 3.604 27.565.845 2.701 2.429 6.344 5.585 13.602a53.813 53.813 0 0 0 5.223 9.35c1.727 2.47 3.163 4.029 4.958 5.379a20.692 20.692 0 0 0 7.504 3.528c1.541.375 3.062.557 4.65.557 1.916 0 3.677-.268 5.23-.504a95.829 95.829 0 0 0 3.315-.591c1.823-.346 3.858-.733 5.554-.899.027.182.02.254-.127.916-.245 1.102-.616 2.768-.27 5.037a13.217 13.217 0 0 0 1.871 5.005l1.587 2.551 2.994.257 12.861 1.104 12.861 1.104.519.045.519-.046 25.778-2.264 3.472-.305 1.455-3.167a16.143 16.143 0 0 0 1.108-3.324c.259-1.203.379-2.495.355-3.842-.024-1.38-.187-2.37-.383-3.166l.223.012a8.106 8.106 0 0 1 1.442.215c2.115.482 3.866.755 7.044 1.25 2.203.344 3.795.592 5.479.592.345 0 .686-.01 1.033-.031 1.91-.116 3.809-.49 5.643-1.112l.06-.02.06-.022a20.013 20.013 0 0 0 4.997-2.659c2.543-1.86 4.068-3.905 4.993-5.282 2.921-4.346 5.591-9.42 7.935-15.082 1.599-3.861 2.33-6.059 2.664-7.338l.026.008c1.053-3.492 2.364-7.839 3.2-13.915 1.177-8.561.673-15.213.372-19.187a87.783 87.783 0 0 0-1.342-9.976c-.803-4.158-1.382-7.162-3.251-10.704-1.926-3.65-4.177-5.894-5.821-7.533-3.768-3.757-8.251-6.817-13.325-9.097a76.089 76.089 0 0 0-6.827-2.772v-4.966c0-9.787-7.963-17.75-17.75-17.75H184.5v-10.167c0-5.236-4.262-9.498-9.5-9.498zm21.886 34.605h7.812c1.166 0 2.115.895 2.115 1.995l.062 3.817-7.812-.854a15.301 15.301 0 0 0-2.177-4.958zm-53.844 5.729.062-3.376c0-1.226.998-2.224 2.224-2.224h8.214a10.771 10.771 0 0 0-2.5 4.85l-8 .75z"></path><path style="fill:#fff" d="M246.583 190.75a81.661 81.661 0 0 0-1.25-9.292c-.784-4.06-1.243-6.343-2.667-9.042-1.47-2.787-3.176-4.515-4.75-6.083-2.173-2.166-5.908-5.345-11.583-7.889A70.006 70.006 0 0 0 216 154.603v-9.353c0-6.479-5.271-11.75-11.75-11.75H178.5v-16.167a3.5 3.5 0 1 0-7 0V133.5h-25.75c-6.479 0-11.75 5.271-11.75 11.75v9.564c-.298.082-.585.153-.889.241-3.856 1.115-8.252 2.418-13.389 5.444-2.294 1.351-4.696 2.789-7.306 5.417-1.407 1.417-4.619 4.719-6.5 10-.652 1.831-.916 3.468-1.417 6.667-.52 3.321-1.171 7.483-1.333 12.583-.122 3.849-.355 13.791 3.333 25.583.749 2.394 2.286 5.929 5.361 13a47.821 47.821 0 0 0 4.639 8.306c1.388 1.986 2.385 3.072 3.647 4.021a14.76 14.76 0 0 0 5.316 2.493c2.729.664 4.898.356 7.558-.049 2.75-.419 6.824-1.401 10.104-1.604.446-.028 1.391-.072 2.415.39 1.161.524 1.807 1.423 2.085 1.818.2.285.843 1.255 1.093 2.885.405 2.649-.753 3.621-.391 6.001a7.258 7.258 0 0 0 1.034 2.739l5.389.463v-5.63a2 2 0 0 1 4 0v5.973l5.16.443v-7.041a2 2 0 0 1 4 0v7.384l5.16.443v-9.883a2 2 0 0 1 4 0v9.882l5.16-.453v-7.373a2 2 0 0 1 4 0v7.021l5.16-.453v-5.943a2 2 0 0 1 4 0v5.592l5.472-.481c.232-.505.506-1.21.694-2.083.088-.41.243-1.251.221-2.472-.043-2.444-.721-2.523-.555-4 .202-1.804 1.37-3.082 1.778-3.528.374-.409.823-.9 1.583-1.278 1.118-.555 2.192-.508 3.361-.444 1.192.065 2.072.27 2.472.361 1.886.43 3.461.675 6.611 1.167 2.514.392 3.8.587 5.222.5a15.65 15.65 0 0 0 4.083-.806c.793-.288 2.104-.84 3.5-1.861 1.816-1.328 2.895-2.803 3.555-3.786 6.509-9.683 9.861-20.797 9.861-20.797 1.065-3.529 2.244-7.501 3-13 1.071-7.769.644-13.86.336-17.916zm-101.229 23.597c0 2.328-1.903 4.215-4.25 4.215s-4.25-1.887-4.25-4.215 1.903-4.215 4.25-4.215 4.25 1.887 4.25 4.215zm10.271 17.236c-7.832 6.911-20.022 7.41-28.486 1.25-6.182-4.499-9.907-12.21-9.168-20.258.945-10.295 8.709-15.878 9.835-16.659l8.68 3.903a4.947 4.947 0 0 0-.319 1.708v8.014h-8.014a5 5 0 1 0 0 10h8.014v8.014a5 5 0 1 0 10 0v-8.014h8.014a5 5 0 1 0 0-10h-8.014v-5.37l16.917 7.606c.115 1.228.976 12.364-7.459 19.806zm15.875-88.805h-9.471a7.029 7.029 0 0 0-7.029 7.029v1.971c-2.79.168-4.129.212-6.639.472-2.477.257-5.837.626-9.861 1.47v-8.47c0-3.998 3.252-7.25 7.25-7.25h25.75v4.778zm3.5 88.264a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm3.5-88.264V138h25.75c3.998 0 7.25 3.252 7.25 7.25v8.238c-3.182-.668-6.065-1.004-10.1-1.408-2.312-.231-4.427-.442-6.4-.637v-1.636a7.029 7.029 0 0 0-7.029-7.029H178.5zm33.255 71.569c0 2.328-1.903 4.215-4.25 4.215s-4.25-1.887-4.25-4.215 1.903-4.215 4.25-4.215 4.25 1.887 4.25 4.215zm9.466 18.32c-8.494 6.384-21.082 6.049-29-1.089-7.88-7.104-7.356-17.537-7.26-18.977l17.606-7.939v4.88h-8.014a5 5 0 1 0 0 10h8.014v8.014a5 5 0 1 0 10 0v-8.014h8.014a5 5 0 1 0 0-10h-8.014v-8.014c0-.449-.078-.876-.189-1.29l8.705-3.926c1.17.896 8.237 6.495 9.056 16.377.651 7.856-2.893 15.449-8.918 19.978z"></path><path d="M174.579 78.541c-28.798 0-45.686 20.005-48.779 24.016-4.124 5.351-3.128 13.058 2.22 17.182a12.306 12.306 0 0 0 7.478 2.55 12.17 12.17 0 0 0 9.702-4.766c.458-.594 11.375-14.481 29.391-14.481l.22.001c17.222.117 27.307 12.078 29.154 14.475a12.171 12.171 0 0 0 9.706 4.772c2.688 0 5.343-.904 7.474-2.547 5.35-4.126 6.347-11.832 2.226-17.181-3.067-3.978-19.806-23.825-48.37-24.019l-.422-.002z"></path><path style="fill:#fff" d="M135.497 114.288a4.25 4.25 0 0 1-3.363-6.846c2.702-3.503 17.396-20.901 42.444-20.901l.367.001c24.853.168 39.419 17.44 42.087 20.901a4.251 4.251 0 0 1-6.732 5.19c-2.245-2.913-14.504-17.449-35.413-17.591l-.298-.001c-21.533 0-34.33 15.785-35.724 17.593a4.242 4.242 0 0 1-3.368 1.654z"></path><path d="M174.792 56.966c-9.156 0-27.221 1.678-45.334 12.914-8.916 5.529-16.694 12.605-23.117 21.03a12.172 12.172 0 0 0-2.398 9.063 12.164 12.164 0 0 0 4.714 8.105 12.312 12.312 0 0 0 7.423 2.508c3.8 0 7.444-1.804 9.746-4.825 4.604-6.04 10.172-11.108 16.546-15.062 12.951-8.033 25.974-9.232 32.584-9.232h.092c7.4.033 18.689 1.48 30.337 8.19 6.978 4.02 13.036 9.318 18.005 15.747a12.176 12.176 0 0 0 9.696 4.758c2.697 0 5.357-.91 7.491-2.561 5.34-4.128 6.327-11.836 2.199-17.18-6.938-8.974-15.403-16.373-25.163-21.994-16.297-9.388-32.093-11.414-42.475-11.46h-.151l-.195-.001z"></path><path style="fill:#fff" d="M116.081 102.586a4.25 4.25 0 0 1-3.377-6.826c5.829-7.646 12.885-14.067 20.972-19.082 16.367-10.152 32.665-11.712 41.117-11.712l.311.001c9.414.042 23.739 1.879 38.518 10.393 8.853 5.099 16.532 11.812 22.825 19.953a4.251 4.251 0 0 1-6.726 5.199c-5.611-7.26-12.456-13.244-20.342-17.787-13.166-7.584-25.927-9.221-34.314-9.258-7.428-.013-22.145 1.276-36.909 10.434-7.204 4.469-13.493 10.191-18.692 17.012a4.245 4.245 0 0 1-3.383 1.673z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-twitch'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var valkyrie = {
  id: 'valkyrie',
  name: 'Valkyrie',
  role: 'Defender',
  unit: 'SEALS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'us',
    season: 'Y1S2',
    height: 170,
    weight: 57
  },
  bio: {
    real_name: 'Meghan J. Castellano',
    birthplace: 'Oceanside, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#bd8833" d="M73 73h204v204H73z"></path><path d="M66.833 197.278a170.186 170.186 0 0 1 28.722 11.389c14.787 7.482 24.708 15.224 31.889 20.889 10.567 8.337 24.332 20.657 38.306 37.917l9.396 17.09 9.771-17.479a237.49 237.49 0 0 1 27.25-28.417c7.294-6.438 18.978-16.633 36.583-26.438a189.634 189.634 0 0 1 34.812-15.042L277 183.749v-19.542l6.562-4.708 38.979-67.306-18.041 14.328 30.347-52.132-19.625 15.5L342.514 16l-113.076 93.062-30.146-13.771a125.118 125.118 0 0 1-24.125-32.694A123.56 123.56 0 0 1 151.5 95.124l-30.333 13.931L8.167 16 35.25 69.694 15.528 54.25l30.625 52.222-18.055-14.28 38.68 67.308L73 163.889v20.528l-6.167 12.861z"></path><path style="fill:#fff" d="m26.5 38.889 88.333 72.917a69.74 69.74 0 0 0-7.861 15c-1.536 4.076-4.221 11.399-4.306 21.278-.066 7.65 1.458 13.345 1.958 15.097.765 2.681 1.969 6.057 4.75 11.292 2.891 5.44 7.666 13.225 15.375 21.875.105-.144.217-.324.312-.542a2.947 2.947 0 0 0 .239-1.313l-.03-3.729a380.054 380.054 0 0 0-6.604-37.083 60.683 60.683 0 0 1 3.111-7.819c4.625-9.618 10.975-16.287 15.972-20.556a272.944 272.944 0 0 1 11.164 18.845c6.713 12.454 10.999 22.745 15.225 32.967a504.3 504.3 0 0 1 7.111 18.188 143.513 143.513 0 0 0-6.806-11.778c-4.763-7.409-8.186-11.235-9.278-12.431-6.183-6.77-9.65-8.063-10.833-8.458-2.105-.702-6.263-2.09-9.259.209-2.278 1.748-2.659 4.687-2.745 5.708l.087 29.166a39.264 39.264 0 0 1 6.24 10.156l6.677 13.26 13.833 29.5a225.743 225.743 0 0 0-32.042-29.042c-7.385-5.499-19.724-14.574-37.903-22.625a180.185 180.185 0 0 0-13.722-5.417l12.667-26.25-16.528-11.833-22.389-38.75 40.542 31.931.458-7.319-30.667-23.611L37 78.972l54.694 42.778.222-6.833-45.5-36.611L26.5 38.889zm297.583 0-88.333 72.917a69.74 69.74 0 0 1 7.861 15c1.536 4.076 4.221 11.399 4.306 21.278.066 7.65-1.458 13.345-1.958 15.097-.765 2.681-1.969 6.057-4.75 11.292-2.891 5.44-7.666 13.225-15.375 21.875a2.854 2.854 0 0 1-.312-.542 2.947 2.947 0 0 1-.239-1.313l.03-3.729a380.054 380.054 0 0 1 6.604-37.083 60.683 60.683 0 0 0-3.111-7.819c-4.625-9.618-10.975-16.287-15.972-20.556a272.944 272.944 0 0 0-11.164 18.845c-6.713 12.454-10.999 22.745-15.225 32.967a504.3 504.3 0 0 0-7.111 18.188 143.513 143.513 0 0 1 6.806-11.778c4.763-7.409 8.186-11.235 9.278-12.431 6.183-6.77 9.65-8.063 10.833-8.458 2.105-.702 6.263-2.09 9.259.209 2.278 1.748 2.659 4.687 2.745 5.708l-.087 29.166-3.125 4.229a785.902 785.902 0 0 0-23.625 48.687 225.743 225.743 0 0 1 32.042-29.042c7.385-5.499 19.724-14.574 37.903-22.625a180.185 180.185 0 0 1 13.722-5.417l-12.667-26.25 16.528-11.833 22.389-38.75-40.542 31.931-.458-7.319 30.667-23.611 22.583-38.75-54.694 42.778-.222-6.833 45.25-36.444 20.164-39.584zM175.194 75.111a121.795 121.795 0 0 1-19.583 24.611 121.59 121.59 0 0 1-18.236 14.528A259.352 259.352 0 0 1 150.222 134c8.21 13.972 13.19 25.448 16.389 32.889a338.099 338.099 0 0 1 8.493 21.799 416.368 416.368 0 0 1 11.8-28.479c4.397-9.586 8.799-19.103 16.04-30.875a231.954 231.954 0 0 1 10.11-15.083 126.46 126.46 0 0 1-17.388-13.861 126.954 126.954 0 0 1-20.472-25.279z"></path><path style="fill:#fff" d="m85.167 277 72.583-93.875L127.333 277zm108-93.583L223.417 277h42z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-valkyrie'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var vigil = {
  id: 'vigil',
  name: 'Vigil',
  role: 'Defender',
  unit: 'SMB',
  ratings: {
    health: 1,
    speed: 3,
    difficulty: 3
  },
  meta: {
    gender: 'm',
    country: 'sk',
    season: 'Y2S4',
    height: 173,
    weight: 73
  },
  bio: {
    real_name: 'Chul Kyung Hwa',
    birthplace: '[REDACTED]'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path d="M280.694 136.639v4.889l16.556-6.861v-1.945z"></path><path style="fill:#bec9ca" d="M257.5 73H277v204h-19.5z"></path><path d="M257.5 142.444 277 137.5v5.5l-6 2.5a21.316 21.316 0 0 1-.444 4.444c-.929 4.461-3.065 7.439-5.166 10.304a43.083 43.083 0 0 1-7.889 8.196l-.001-26z"></path><path style="fill:#bec9ca" d="M234.438 63.417h19.5v204h-19.5z"></path><path d="m234.438 139.792 19.5-4.917v27.875a38.537 38.537 0 0 1-19.5 6.916v-29.874z"></path><path style="fill:#bec9ca" d="M211.375 79.472h19.5v204h-19.5z"></path><path d="m211.375 161.667 19.5-4.667v29.056a56.067 56.067 0 0 1-19.5-2.333v-22.056z"></path><path style="fill:#bec9ca" d="M188.312 69.521h19.5v204h-19.5z"></path><path d="m188.312 144.778 4.41 10.5 15.09-3.611v19.646c-1.898-.791-5.395-2.556-8.396-6.208a21.425 21.425 0 0 1-3.688-6.604l-7.417 1.583v-15.306z"></path><path style="fill:#bec9ca" d="M165.25 64.083h19.5v204h-19.5zM142.188 69h19.5v204h-19.5z"></path><path d="m142.188 151.528 15.396 3.806 4.104-9.361v15.056l-5.215-1.556a20.499 20.499 0 0 1-5.5 8.278 20.485 20.485 0 0 1-8.785 4.708v-20.931z"></path><path style="fill:#bec9ca" d="M119.125 73h19.5v204h-19.5z"></path><path d="m119.125 151.375 19.5 4.847v22.333a63.779 63.779 0 0 1-19.5 2.101v-29.281z"></path><path style="fill:#bec9ca" d="M96.062 74.271h19.5v204h-19.5z"></path><path d="m96.062 145.75 19.5 4.792V180.5a32.75 32.75 0 0 1-8.208-1.283 33.078 33.078 0 0 1-11.292-5.842V145.75z"></path><path style="fill:#bec9ca" d="M73 73h19.5v204H73z"></path><path d="m73 137.396 19.5 4.792v25.938a45.036 45.036 0 0 1-5.042-4.833c-2.468-2.767-5.563-6.237-7.128-11.522a23.494 23.494 0 0 1-.955-6.186L73 143.002v-5.606zm-3.639-.729v4.777L52.417 134.5v-1.944z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-vigil'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var wamai = {
  id: 'wamai',
  name: 'Wamai',
  role: 'Defender',
  unit: 'NIGHTHAVEN',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'ke',
    season: 'Y4S4',
    height: 187,
    weight: 83
  },
  bio: {
    real_name: 'NgÅ©gÄ© Muchoki Furaha',
    birthplace: 'Lamu, Kenya'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#2cc5d0" d="M249.802 277H277v-18.75c-.419.374-.968.837-1.639 1.333-.84.622-1.503 1.023-1.632 1.103-1.049.647-7.749 5.2-23.927 16.314zm15.031-126.5c-26.744-7.646-96.795-23.519-161.583 12.292-11.573 6.397-21.598 13.68-30.25 21.214-5.328 4.519-12.964 11.829-19.042 21.411-3.778 5.956-5.346 10.254-6.042 12.375 0 0-1.906 5.812-2.292 11.083-1 13.683 12.623 32.421 31.042 40.347 4.17 1.795 10.37 3.803 27.217 4.097 13.621.238 33.673-.655 58.172-6.374l13.694 16.097a129.97 129.97 0 0 0 23.083-2.208 129.97 129.97 0 0 0 15.291-3.833 205.609 205.609 0 0 0 50.153-24.722 162.96 162.96 0 0 0 10.688-8.369c5.157-4.395 9.169-7.814 13.368-12.964 2.755-3.38 6.935-8.59 9.917-16.278 1.056-2.722 4.287-11.75 3.458-21.417-1.814-21.155-22.07-33.685-24.708-35.264-1.921-1.348-3.993-2.716-12.166-7.487z"></path><path style="fill:#2cc5d0" d="M241.556 119.889c10.585 1.37 19.889 4.222 19.889 4.222a115.812 115.812 0 0 1 15.556 6.031V73H73v91.788c25.591-17.455 49.169-27.272 65.906-32.92 0 0 54.116-18.261 102.65-11.979z"></path><path style="fill:#fff" d="M158.611 267.722a114.318 114.318 0 0 1-13.736 3.986c-2.26.505-4.977 1.041-9.5 1.708-7.828 1.154-17.424 2.57-30 2.458-5.449-.048-9.511-.084-15.149-.946-5.635-.861-12.091-1.901-19.533-5.646-3.327-1.674-9.392-4.803-14.97-11.339-4.651-5.45-6.743-10.669-7.389-12.389-3.013-8.031-2.623-14.793-2.5-16.444.085-1.144.497-5.956 3.056-12.222 2.501-6.126 6.182-11.509 13.344-18.822 7.137-7.287 13.496-12.166 21.267-17.845a759.893 759.893 0 0 1 29.667-20.611l7.611 5.167c-18.162 17.703-31.354 31.633-36.611 38.056a57.67 57.67 0 0 0-5.944 8.722c-3.154 5.702-4.345 10.197-4.669 11.489-.556 2.216-1.23 4.904-1.219 8.483.016 5.187 1.461 9.048 2.222 11.028 3.853 10.017 11.309 15.454 13.528 17.028 3.946 2.799 7.396 4.137 10.694 5.417 1.61.624 6.879 2.593 16.291 3.974 3.085.453 15.997 2.22 33.764.193a149.875 149.875 0 0 0 9.776-1.445zM35.617 197.728a146.013 146.013 0 0 1 8.279-10.645c6.418-7.509 12.043-12.547 16.021-16.083 7.555-6.717 13.861-11.299 16.083-12.889 15.354-10.98 30.776-22.009 51.417-23.444a65.712 65.712 0 0 1 10.472.111 806.314 806.314 0 0 1-27.429 13.85c-11.082 5.329-16.03 7.388-25.626 12.664-7.497 4.122-13.451 7.8-18.444 11.097-4.482 2.96-9.123 6.043-14.833 10.71-4.415 3.609-8.073 7.023-9.722 8.568a213.24 213.24 0 0 0-6.218 6.061z"></path><path style="fill:#fff" d="M140.944 285.556c11.923.615 22.179.104 30.227-.677 8.143-.791 21.481-2.161 37.995-7.462 12.372-3.971 21.451-8.504 26.889-11.25a202.72 202.72 0 0 0 20.168-11.667c17.073-11.254 27.197-21.673 32.443-27.612 3.65-4.132 5.765-7.032 7.625-10.556 4.888-9.258 5.354-17.779 5.431-20.222.448-14.222-6.009-24.446-8.611-28.444-2.732-4.197-5.463-7.053-7.611-9.278 0 0-7.159-7.413-16.944-13.222-13.99-8.304-46.233-20.637-85.111-14.167a134.342 134.342 0 0 0-10.444 2.167c29.076 9.777 51.658 17.547 65.581 22.134 1.945.641 8.834 2.904 16.586 8.033 4.861 3.216 10.838 7.27 15.083 15 1.029 1.874 3.266 6.348 4.121 12.525 1.394 10.072-1.824 17.897-3.439 21.686-2.136 5.012-4.586 8.311-7.016 11.539-6.335 8.414-12.9 13.753-17 16.917-24.142 18.626-50.105 29.161-53.28 30.427-11.896 4.743-22.022 7.552-26.87 8.637-4.786 1.071-10.636 2.38-13.905 2.827-.537.074-1.846.239-3.584.665-1.656.406-2.291.703-3.778 1.111a31.34 31.34 0 0 1-4.556.889zm170.181-108.035c.089-2.169.108-5.36-.292-9.188-.562-5.377-1.443-13.04-6.245-21.009-3.195-5.303-6.828-8.587-8.171-9.741-3.126-2.687-5.835-4.143-9.5-6.083-7.077-3.747-12.988-5.669-14.75-6.222-5.578-1.753-13.909-3.732-24.375-3.944a82.799 82.799 0 0 1 18.819 4.944 83.328 83.328 0 0 1 13.278 6.667c3.593 2.223 8.506 5.263 13.617 10.491 8.578 8.775 12.312 18.191 14.383 23.564a79.32 79.32 0 0 1 3.236 10.521zM178.688 293.375c.727.096 1.791.229 3.078.361 2.848.291 10.359.938 20.512.07 6.009-.514 17.959-1.624 32.056-7.111 5.515-2.147 9.652-4.299 11.917-5.486 4.28-2.243 10.292-5.431 17.125-10.875a92.307 92.307 0 0 0 10.375-9.667c-5.988 3.81-14 8.541-23.792 13.333-6.237 3.052-15.742 7.663-27.897 11.557-10.03 3.213-24.75 6.864-43.374 7.818z"></path><path style="fill:#fff" d="m174.934 36.132-1.316.247-6.667 1.25-2.27.426-1.637 1.629-8.083 8.042-1.72 1.711-.392 2.394-.996 6.082-2.549 2.327-4.09 3.734 2.366 5.008 7.044 14.911-1.411 7.498-16.988 2.776H123.17l-2.208 2.266-14.722 15.111-3.131 3.214 1.351 4.279 2.878 9.115-5.341 13.944-.496 1.296v32.474l-15.5-10.365-7.167 15.75 10.75 40.583 63.139 39.764 22.677 21.448 23.35-21.823 62.722-39.611 9.861-42.472-6.778-14.194-15.25 10.972-.028-30.917v-1.349l-.47-1.264-5.304-14.27 2.866-9.225 1.323-4.259-3.111-3.197-14.597-15-2.208-2.269h-13.443l-16.804-3.018-1.411-7.15 6.899-15.107 2.262-4.952-4.008-3.685-2.537-2.332-.905-5.86-.368-2.382-1.687-1.722-8.042-8.208-1.704-1.739-2.4-.407-7.375-1.25-1.319-.224z"></path><path d="m261.167 176.417-49.042 35.208 26.708-28.042a28.267 28.267 0 0 0 2.944-7.638V145l-6.194-16.667 3.625-11.667-14.597-15h-10.944l-22.5-4.042-2.875-14.542 7.903-17.306-4.472-4.111-1.306-8.458L182.375 45 175 43.75 168.333 45l-8.083 8.042-1.417 8.653-4.472 4.083 8.083 17.111-2.833 15.056-22.778 3.722h-10.5l-14.722 15.111 3.667 11.611L109 144.778v30.944c.395 2.443 1.257 5.115 2.994 7.607.147.211.298.417.45.616l26.444 27.944-49.222-35.278-2.222 4 8.444 36.833 61.194 38.389 18.333 17 19-17.5 60.611-38.389 8.389-36.319-2.248-4.208zm-110.124 17.919c-.196.188-.758.725-1.487.704-.906-.026-1.566-.901-1.857-1.303-2.231-3.077-7.54-12.441-10.323-16.486a39.262 39.262 0 0 0-3.542-4.417c1.733-9.541 3.06-17.16 3.933-22.128.198-1.126.576-3.277.609-6.163.032-2.755-.282-4.828-.667-7.333-.661-4.307-1.265-5.613-1.708-9.833a58.231 58.231 0 0 1-.25-3.25l13.5 35.208c.184.598.466 1.553.763 2.737 1.036 4.119 1.336 7.328 1.457 8.591.507 5.317 2.142 21.215-.428 23.673zm55.103-4.878c-.768 1.349-1.906 2.468-2.646 3.833-.182.335-.56 1.062-1.375 1.521-.474.267-1.138.467-1.646.375-1.21-.22-2.281-2.238-2.104-4.979a163.73 163.73 0 0 1 .083-9.75c.254-6.647.418-10.914 1.708-16.333.622-2.611 1.498-5.046 3.25-9.917 1.931-5.368 3.447-8.936 4.792-12.208a431.21 431.21 0 0 0 6.917-18c-.838 8.943-1.534 13.459-2.056 15.915-.065.306-.243 1.123-.374 2.251-.41 3.533.092 6.224.306 7.417.655 3.652 1.991 12.097 3.917 23.375a65.992 65.992 0 0 0-5.958 8.417c-1.604 2.696-3.262 5.359-4.814 8.083z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-wamai'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var warden = {
  id: 'warden',
  name: 'Warden',
  role: 'Defender',
  unit: 'SECRET SERVICE',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Y4S2',
    height: 173,
    weight: 73
  },
  bio: {
    real_name: 'Collinn McKinley',
    birthplace: 'Louisville, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#fff" d="M73 73h204v204H73z"></path><path d="m277 73-3.073-.01a15059.785 15059.785 0 0 0 5.031-26.031L234.056 73H116.639L71.573 46.906a587.872 587.872 0 0 1 4.844 26.093H73v65l17.361 15.833L73 157.415V277h204V157.5l-17.083-3.667L277 138.083V73z"></path><path style="fill:#fff" d="m92.417 73.5 78.083 45.625-35.167 39.319-39.75-50.694zM175 116.667l38.694 34.055 42.195-34.805 8.59-48.084z"></path><path style="fill:#fff" d="m103.833 142.25 27.625 28.917L152.729 147l5.604 7.167-25.062 81.604zm90.271 2.938 19.563 17.368 40.187-33.723-44.562 100.375L190 151.528z"></path><path style="fill:#2d3b89" d="m174.222 123.75 16.5 14.583-8.25 12.084 21.111 101.916-5.277 11.778h-57.598l-2.541-10.903L167 151.667l-7.833-11.084z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-warden'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var ying = {
  id: 'ying',
  name: 'Ying',
  role: 'Attacker',
  unit: 'SDU',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 2
  },
  meta: {
    gender: 'f',
    country: 'hk',
    season: 'Y2S3',
    height: 160,
    weight: 52
  },
  bio: {
    real_name: 'Siu Mei Lin',
    birthplace: 'Central, Hong Kong'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#aa4825" d="M73 73h204v204H73z"></path><path d="M294.153 111.611c0-36.451-29.549-66-66-66s-66 29.549-66 66c0 14.763 4.849 28.392 13.038 39.386a53.942 53.942 0 0 0-3.566-.108 71.948 71.948 0 0 0-17.145 2.194c.337-2.332.52-4.714.52-7.139 0-27.338-22.162-49.5-49.5-49.5S56 118.606 56 145.944c0 26.743 21.211 48.519 47.725 49.455-5.537 12.239-6.309 23.398-6.336 29.205-.133 28.848 17.339 47.756 20.333 50.896 21.47 22.508 49.204 22.841 53.903 22.819 30.679-.142 49.81-19.277 53.375-22.986 4.277-4.45 20.679-22.622 20.861-50.729.035-5.455-.437-27.181-16.528-46.799-.062-.076-.126-.144-.188-.22 35.991-.532 65.008-29.856 65.008-65.974z"></path><circle style="fill:#fff" cx="105.562" cy="145.979" r="8.5"></circle><circle style="fill:#fff" cx="171.278" cy="224.556" r="14"></circle><circle style="fill:#fff" cx="227.076" cy="111.076" r="12"></circle><path style="fill:#fff" d="M285.458 126.75c-1.854-1.365-3.085-2.284-4.333-3.833a15.657 15.657 0 0 1-1.775-2.772c.514-2.883.797-5.833.802-8.832a50.968 50.968 0 0 0-2.787-16.652 42.89 42.89 0 0 1 3.029-3.854c.781-.885 2.277-2.505 5.078-4.89 3.017-2.568 6.035-4.735 10-7.25a161.373 161.373 0 0 1 14.833-8.333c-7.872 3.659-14.41 6.235-19.159 7.972 0 0-5.022 1.837-11.924 3.166-2.281.439-4.697.806-7.722.417-.23-.03-.435-.073-.655-.108a53.158 53.158 0 0 0-3.34-4.326l.745-.065a25.45 25.45 0 0 1 .389-4.333c.338-1.909 1.104-4.959 3.917-9.833 1.724-2.988 4.521-7.188 8.889-11.667-1.306 1.378-7.3 7.632-13.549 11.732-3.113 2.042-5.552 3.067-8.145 3.574a19.782 19.782 0 0 1-2.917.347l-.177.598a52.538 52.538 0 0 0-5.828-3.388c-1.095-7.159 1.005-18.002 1.005-18.002 1.333-6.876 1.999-10.314 3.417-15.667a195.203 195.203 0 0 1 4.083-13.444 371.403 371.403 0 0 1-2.833 7.611c-3.343 8.689-5.015 13.033-7.733 18.3-2.323 4.501-4.891 9.4-9.642 14.867a61.808 61.808 0 0 1-1.673 1.844 51.554 51.554 0 0 0-4.584-.663 30.78 30.78 0 0 1-1.035-1.07c-4.816-5.259-6.508-10.87-7.028-12.667-.878-3.033-1.409-6.644-1.722-8.778a92.921 92.921 0 0 1-.5-4 62.184 62.184 0 0 1-.667 12.958c-.512 3.261-.933 5.945-2.139 8.681-.543 1.232-1.726 3.56-4.201 6.089a52.059 52.059 0 0 0-18.665 8.678c-2.377-.474-4.922-1.26-6.829-2.572-.587-.404-2.387-1.735-4.403-3.653a41.88 41.88 0 0 1-2.431-2.514c.57.716 1.345 1.742 2.181 3.028 1.623 2.497 3.781 5.818 4.611 10.306.069.371.133.797.189 1.256-.29.301-.582.6-.865.907a41.157 41.157 0 0 1-1.741-.205c-1.419-.201-6.285-.968-16.75-6.042-1.465-.71-6.761-3.309-13.751-7.624a177.346 177.346 0 0 1-9.559-6.338 276.94 276.94 0 0 1 9.84 7.413c3.973 3.135 7.418 5.866 11.678 9.883 2.98 2.81 5.058 4.783 7.5 7.792a61.253 61.253 0 0 1 4.723 6.688 51.959 51.959 0 0 0-5.533 19.169 18.706 18.706 0 0 1-3.857 3.726c-3.6 2.58-7.64 3.48-8.157 3.59-1.273.272-3.686.646-5.926.91-.999.118-1.833.198-2.417.25.584.005 1.426.018 2.438.052.795.026 4.085.136 6.082.385.803.1 4.424.6 8.453 2.806a24.249 24.249 0 0 1 3.761 2.55c-.285.323-.578.647-.888.971-3.381 3.541-6.992 5.756-9.851 7.142l.201 3.449a76.56 76.56 0 0 1-.112-1.369c.043 1.617.072 3.902 0 6.639a148.676 148.676 0 0 1-.209 5.268c-2.82-.065-4.42-.118-5.66-.256-2.314-.258-4.46-.514-7.04-1.586-1.595-.663-2.776-1.396-3.897-2.093a36.6 36.6 0 0 1-1.73-1.15 41.24 41.24 0 0 0-.746-3.215c.073-.176.151-.359.239-.552 1.123-2.458 2.834-4.568 5.939-7.065 5.205-4.186 11.396-7.104 13.602-8.101a72.799 72.799 0 0 1-7.417 2.875c-5.176 1.685-8.569 2.139-10.702 2.312-2.309.188-4.081.123-6.009-.5-.182-.059-.343-.126-.514-.189-2.325-3.82-4.56-6.224-5.247-6.943-.723-.756-4.185-4.268-9.847-7.438a46.908 46.908 0 0 1-.054-6.396c.247-4.097.977-7.216 1.573-9.712.866-3.628 1.861-6.454 3.356-10.704a193.265 193.265 0 0 1 2.222-6 230.923 230.923 0 0 1-2.889 6.417c-1.93 4.117-2.895 6.176-4.321 8.716-4.698 8.368-8.515 11.583-9.504 12.389-.467.381-.892.704-1.266.978a40.42 40.42 0 0 0-3.451-.69 25.063 25.063 0 0 1-3.306-5.198c-1.868-3.96-2.245-7.517-2.667-11.5a58.883 58.883 0 0 1-.329-6.5 73.537 73.537 0 0 1-.468 6.583c-.623 5.354-1.071 8.927-3.12 12.709a21.675 21.675 0 0 1-2.816 4.011 43.57 43.57 0 0 0-13.559 4.67 42.77 42.77 0 0 0-4.286 2.68c-4.538.24-7.533-.869-8.865-1.462-2.329-1.038-4.853-2.818-5.932-3.579a50.005 50.005 0 0 1-5.238-4.251 38.406 38.406 0 0 1 4.027 4.707c2.747 3.79 6.185 8.535 5.794 14.599l-.011.128a37.552 37.552 0 0 0-1.406 2.122c-1.326 2.169-6.033 10.322-6.056 21.812v.046a61.112 61.112 0 0 1-6.072 3.021c-5.764 2.478-10.596 3.497-17.956 5.01-2.65.545-6.409 1.258-10.984 1.926 4.114-.466 7.542-.745 10.009-.918 5.325-.372 8.634-.593 13.15-.389 5.257.238 8.265.877 9.158 1.075 1.517.336 2.872.721 4.055 1.103 1.128 4.473 3.183 9.681 6.9 14.712.003.226.009.451.003.685-.087 3.533-1.219 6.118-1.604 6.937-.717 1.524-2.061 3.287-4.75 6.812-.693.909-1.275 1.65-1.667 2.146a28.796 28.796 0 0 1 4.417-3.896c1.738-1.241 4.386-3.133 7.785-3.889 1.543-.343 3.026-.4 4.404-.29 2.777 2.041 6.497 4.291 11.049 5.956a20.19 20.19 0 0 1 1.992 3.89c1.458 3.873 1.383 7.377 1.333 9-.041 1.337-.161 1.686-.708 8-.108 1.245-.193 2.271-.25 2.958a52.434 52.434 0 0 1 2.32-9.115c1.29-3.66 2.204-6.252 4.305-8.844a18.564 18.564 0 0 1 3.681-3.432c1.108.033 2.242.023 3.402-.04.674-.036 1.322-.108 1.975-.175a75.643 75.643 0 0 1 3.248 4.064 74.946 74.946 0 0 1 3.32 4.858c-3.623 6.976-6.025 14.748-6.78 22.993-2.064 2.363-3.994 4.532-7.762 6.344-2.553 1.228-5.406 2.031-6 2.194-2.976.822-5.718 1.197-8.438 1.569a101.11 101.11 0 0 1-2.896.354 57.864 57.864 0 0 1 6.164.087c2.459.166 7.432.5 11.719 2.032 1.612.576 4.69 1.887 8.079 4.858-6.822 5.498-12.922 9.133-17.604 11.551-6.84 3.532-15.771 7.116-20.356 8.956a347.362 347.362 0 0 1-13.335 5.038 337.57 337.57 0 0 1 10.833-3.333c5.953-1.723 11.165-3.232 17.889-4.611 7.743-1.589 13.084-2.684 20.333-2.556 2.867.051 5.447.286 7.696.588a66.318 66.318 0 0 0 1.827 3.396l-.912.141a25.11 25.11 0 0 1-.667 3.167c-.266.955-1.404 4.814-5.384 10.128-1.929 2.576-3.605 4.265-5.491 6.149a85.828 85.828 0 0 1-8.208 7.222 632.75 632.75 0 0 1 2.778-1.83c3.85-2.523 5.775-3.784 6.899-4.444 3.627-2.126 6.644-3.298 8.682-4.079 2.941-1.127 4.671-1.775 7.182-2.022a20.51 20.51 0 0 1 5.5.208l.11-.882a51.076 51.076 0 0 0 1.931 1.84c12.334 11.115 25.864 14.31 31.925 15.356.101-.319.627-1.882 1.909-2.217a2.084 2.084 0 0 1 1.221.055c1.614.631 1.684 4.395 1.654 12.181-.007 1.843-.02 3.924-.042 6.208.932-12.023 2.283-18.097 4.056-18.222.706-.05 1.479.845 2.319 2.685a67.78 67.78 0 0 0 5.59-.443c2.838 2.447 4.348 5.11 5.091 6.48 6.062 11.18 7.778 16.111 7.778 16.111 3.888 11.176 6.956 21.346 9.208 29.306A291.462 291.462 0 0 1 196.494 319c-.996-5.882-1.739-10.268-2.111-15.389-.363-5-.456-11.888.686-20.269a65.086 65.086 0 0 0 1.587-.668 70.952 70.952 0 0 1 3.94 4.446c2.245 2.757 4.034 5.378 6.862 10.05a268.959 268.959 0 0 1 8.567 15.268 471.473 471.473 0 0 1-5.031-10.549c-3.674-7.954-4.48-10.279-4.833-11.333-1.771-5.284-2.405-9.167-2.667-11.056-.014-.098-.023-.186-.036-.283a59.49 59.49 0 0 0 10.303-7.736 30.659 30.659 0 0 1 2.898.018c8.189.452 14.301 4.095 17.056 5.778 2.521 1.541 5.509 3.756 7.111 4.944 1.008.747 1.9 1.43 2.68 2.038a69.385 69.385 0 0 1-2.958-2.538c-2.383-2.165-6.309-5.779-10-11.389-2.44-3.709-4.105-6.239-4.778-10.167a19.751 19.751 0 0 1-.277-3.656 64.367 64.367 0 0 0 1.903-3.646c3.398-1.027 5.675-1.617 8.041-1.92 4.216-.54 7.212-.089 12.611.722a90.12 90.12 0 0 1 16.623 4.165 353.02 353.02 0 0 1-4.79-1.942c-7.301-3.024-10.951-4.536-14.029-6.339-3.215-1.884-6.838-4.048-10.304-8.161a31.745 31.745 0 0 1-2.673-3.681c.966-5.659 1.177-11.44.562-17.152a60.475 60.475 0 0 0-2.783-12.683 9.965 9.965 0 0 1 .894-1.428c4.394-6.006 7.581-8.514 7.581-8.514a206.82 206.82 0 0 1 7.885-5.926c.678 2.035 1.436 4.395 2.423 7.467.79 2.46 1.425 4.493 1.847 5.861a412.732 412.732 0 0 1-2.841-14.336c2.176-1.513 3.35-2.237 3.35-2.237a278.091 278.091 0 0 1 11.006-6.44c.904 1.68 1.723 3.224 2.443 4.596a542.356 542.356 0 0 1-2.224-4.716 287.418 287.418 0 0 1 7.974-4.256c-.423.189-3.696 1.647-8.294 3.566a521.85 521.85 0 0 1-2.498-5.469c-3.507-7.799-4.421-10.346-5.125-13.292a46.833 46.833 0 0 1-.858-4.596 53.737 53.737 0 0 0 8.647-6.401c4.142-.222 7.38.775 9.349 1.414 3.331 1.08 5.5 2.42 8.778 4.444a72.181 72.181 0 0 1 6.788 4.751 63.433 63.433 0 0 1-3.899-3.529c-1.5-1.477-3.631-3.594-5.861-6.673-1.753-2.42-3.152-4.353-4.139-6.994-.419-1.123-.972-2.985-1.151-5.45a52.532 52.532 0 0 0 1.847-3.324c.194-.103.374-.21.582-.31 2.08-.993 4.003-1.344 5.819-1.518 3.83-.367 8.103-.038 14.204 1.31a98.627 98.627 0 0 1 11.393 3.25 118.242 118.242 0 0 1-12.042-5.042c-3.76-1.828-6.416-3.373-9.074-5.33zm-114.708 7.188a56.763 56.763 0 0 1 10.076.267 52.758 52.758 0 0 0 1.496 2.847l-.475.282-.069 1.958a60.841 60.841 0 0 0 5.278-9.569c1.413-3.215 2.209-5.773 2.971-8.27a104.24 104.24 0 0 0 2.831-11.64 122.05 122.05 0 0 0-1.525 11.91c-.424 5.399-.694 8.844-.137 13.205.386 3.025 1.315 7.486 3.715 12.661-.311.557-.63 1.117-.967 1.689-2.331 3.963-5.798 9.184-10.796 14.867a61.899 61.899 0 0 0-5.024-.758c-4.623-4.035-6.88-8.057-7.999-10.539-1.386-3.074-2.048-6.021-2.833-9.577a72.366 72.366 0 0 1 2.903-.161c-.709-.008-1.73-.023-2.949-.049a84.223 84.223 0 0 1-1.43-8.594 56.437 56.437 0 0 1 4.934-.529zm27.971-9.391 8.25-4.969a329.49 329.49 0 0 1-3.916 10.033l-.515 1.258a32.096 32.096 0 0 1-3.819-6.322zm-59.242 41.807c.118-.294.416-.458.667-.552l2.748-.645c1.502-2.911 3.739-8.034 4.519-14.716 1.444-1.892 3.244-2.892 4.36-3.505 2.737-1.504 7.447-2.843 13.485-3.48-.095 1.4-.22 2.8-.425 4.127-.316 2.048-1.239 7.673-4.833 13.333a30.197 30.197 0 0 1-2.857 3.791 61.39 61.39 0 0 0-14.776 5.523 40.33 40.33 0 0 1-1.51-1.462c-.851-.869-1.642-1.759-1.378-2.414zm-2.055 3.226s.437-.105.957.031c.349.092 1.41.522 2.928 1.193a58.302 58.302 0 0 0-3.141 1.862c-.268.172-.533.351-.798.527l-.452-3.402c.105-.065.278-.156.506-.211zm-20.507-15.913 9.576 9.919c-2.093 2.533-4.007 4.11-4.578 4.567.488.58 3.049 3.654 4.501 6.555.689 1.376.958 2.374 1.083 3.25.106.739.104 1.362.083 1.792-3.08-.755-7.243-2.337-10.763-5.862a20.499 20.499 0 0 1-1.404-1.558 22.224 22.224 0 0 1-7.667 1.92c-4.636.3-8.111-.971-10.592-1.909-2.502-.946-7.64-2.953-12.044-7.863-3.531-3.936-5.285-8.282-6.165-11.857l.301-.122a338.885 338.885 0 0 1 12.694-4.778 148.1 148.1 0 0 1-13.868-1.267c-.005-.145-.011-.291-.014-.413.013-7.12 2.768-13.637 7.249-18.548.801.223 1.548.47 2.217.729a24.92 24.92 0 0 1-.703-2.256c4.828-4.541 11.259-7.373 18.289-7.508.173.411.354.824.511 1.229.141-.408.296-.821.446-1.232 2.577.041 5.032.446 7.34 1.152l-1.022 9.198 5.465-7.391c5.351 2.772 9.595 7.252 12.252 12.424l-1.897 2.036h2.85a27.18 27.18 0 0 1 2.052 8.363l-1.306.456 1.367.637c.007.204.02.408.022.613.048 4.817-1.332 8.989-3.149 12.381l-13.126-4.657zm92.142 82.945-2.726-.07 2.165 1.811c-3.267 9.382-10.011 17.13-18.695 21.701l-1.831-2.164.824 2.68a38.703 38.703 0 0 1-3.521 1.514l-8.72-16.916.335 19.003c-1.71.229-3.451.358-5.224.358a39.43 39.43 0 0 1-2.315-.074l-.24-1.176-.545 1.116c-14.404-1.134-26.602-10.087-32.354-22.623a184.052 184.052 0 0 1 16.038-9.938l-18.765 1.666a39.13 39.13 0 0 1-.818-7.971c0-6.758 1.72-13.113 4.745-18.655l17.589 6.794-12.718-13.765c7.149-8.191 17.659-13.374 29.385-13.374 2.775 0 5.481.295 8.092.846l-1.592 18.515 9.707-15.832a39.152 39.152 0 0 1 17.045 15.089l-8.78 8.021 11.68-2.268a38.88 38.88 0 0 1 2.847 14.629c0 3.851-.568 7.568-1.608 11.083zm49.524-63.987c1.417 2.53 2.7 4.871 3.849 6.999-4.192 1.746-9.434 3.854-14.63 5.741-.38-2.212-.747-4.441-1.098-6.698 0 0-1.453-9.34.463-17.667a14.95 14.95 0 0 1 .43-1.493c.289-.122.579-.244.865-.371.347.295.598.569.746.739 6.278 7.221 9.375 12.75 9.375 12.75zm-.114-51.986-1.636.069 1.292.979a32.086 32.086 0 0 1-15.607 18.065l-.893-1.002.289 1.312c-.974.477-1.975.909-3.002 1.287l-7.023-13.432.385 15.085c-1.445.2-2.919.311-4.419.311a32.06 32.06 0 0 1-7.147-.811l-.003.009c-3.134 9.033-3.788 14.323-3.788 14.323a47.455 47.455 0 0 0-.363 3.895 26.636 26.636 0 0 0 5.849-.374c7.861-1.398 13.45-6.12 18.264-10.188a69.528 69.528 0 0 0 3.472-3.139 54.763 54.763 0 0 0-11.851 16.398c.459-.047.912-.114 1.368-.172a59.823 59.823 0 0 1 4.9 6.885c2.771 4.543 4.188 8.238 6.194 13.472.326.849.631 1.674.933 2.511-3.102 1.091-6.132 2.074-8.847 2.818-3.292.902-7.329 1.786-12.336 1.282a28.965 28.965 0 0 1-1.703-.227 67.375 67.375 0 0 0-3.714-4.968c-.186.044-3.917.892-5.139-.833-1.147-1.619.572-4.574 1.611-6.361.66-1.135 1.138-1.644 2.472-3.333a120.37 120.37 0 0 0 4.016-5.388c-6.129 6.666-11.639 10.847-13.544 9.861-1.317-.682-1.778-1.667-1.778-1.667-.092-.197-.206-.5-.5-2.611a95.938 95.938 0 0 1-.163-1.225 62.074 62.074 0 0 0-6.896-3.952c-.415-3.083-1.018-10.007 1.225-22.962 1.022-5.899 2.131-10.146 3.5-15.333a286.608 286.608 0 0 1 3.395-11.832l4.383-2.64-3.662.348c.639-2.002 1.24-3.813 1.774-5.375a327.048 327.048 0 0 1-1.901 5.388l-11.279 1.071a32.04 32.04 0 0 1-.743-6.868A31.849 31.849 0 0 1 199.752 96l14.123 5.669-10.321-11.163c5.869-6.847 14.575-11.192 24.3-11.192 2.326 0 4.592.254 6.777.726l-1.492 15.142 8.062-12.95a32.13 32.13 0 0 1 14.094 12.617l-6.962 6.278 9.162-1.872a31.901 31.901 0 0 1 2.359 12.06c0 3.242-.487 6.373-1.385 9.324z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-ying'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var zero = {
  id: 'zero',
  name: 'Zero',
  role: 'Attacker',
  unit: 'ROS',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'm',
    country: 'us',
    season: 'Y5S3',
    height: 178,
    weight: 77
  },
  bio: {
    real_name: 'Samuel Leo Fisher',
    birthplace: 'Baltimore, U.S.A'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#6ca542" d="M267.085 277H85.167L73 265.667V73h204v195.896L267.085 277z"></path><path d="M73 73v39.417L153.265 73zm204 46.444L73 219.556v15.111l204-99.944v-15.279zm-204 34.25L240.458 73h28.5L73 169.056zM112.917 277l32.966-17.647 18.089-2.249 113.029-44.048L235.668 277H112.917z"></path><circle cx="111.628" cy="222.833" r="61.5"></circle><circle style="fill:#fff" cx="111.071" cy="223.453" r="55.25"></circle><path d="m216.444 279.139-59.531-42.856a47.093 47.093 0 0 0 1.975-13.515c0-25.855-20.813-46.815-46.486-46.815-15.592 0-29.381 7.739-37.814 19.602L2.18 174.25l63.788 46.466a48.156 48.156 0 0 0-.052 2.052c0 25.855 20.813 46.815 46.486 46.815 11.516 0 22.046-4.226 30.166-11.211l73.876 20.767z"></path><path style="fill:#6ca542" d="m204.833 273.417-57.951-36.035a39.99 39.99 0 0 0 2.846-14.84c0-22.16-17.965-40.125-40.125-40.125-14.326 0-26.891 7.514-33.99 18.81l-67.67-24.171L69.882 216.9a40.373 40.373 0 0 0-.403 5.642c0 22.16 17.965 40.125 40.125 40.125 11.545 0 21.944-4.883 29.265-12.688a4234.36 4234.36 0 0 0 65.964 23.438z"></path><ellipse cx="240.611" cy="224.042" rx="61.444" ry="61.819"></ellipse><ellipse style="fill:#fff" cx="241.833" cy="223.514" rx="55.5" ry="55.681"></ellipse><path d="m332.75 274.167-49.349-37.069a46.966 46.966 0 0 0 2.224-14.306c0-25.957-21.043-47-47-47-16.703 0-31.36 8.721-39.696 21.85l-45.99-9.088 38.838 30.622a47.539 47.539 0 0 0-.152 3.617c0 25.957 21.043 47 47 47 12.051 0 23.038-4.54 31.356-11.997l62.769 16.371z"></path><path style="fill:#6ca542" d="m325.896 271.042-52.316-34.444a40.095 40.095 0 0 0 2.587-14.195c0-22.199-17.996-40.194-40.194-40.194-15.51 0-28.959 8.791-35.661 21.657l-31.769-7.865 27.858 19.391a40.403 40.403 0 0 0-.622 7.012c0 22.199 17.996 40.194 40.194 40.194 11.333 0 21.563-4.697 28.87-12.243l61.053 20.687z"></path><circle cx="176.597" cy="109.042" r="61.5"></circle><ellipse style="fill:#fff" cx="176.597" cy="109.542" rx="56" ry="55.875"></ellipse><path d="M218.953 126.583c4.937-17.329-2.644-32.165-4.12-34.917-5.636-10.512-13.818-15.908-16.25-17.417-3.949-2.45-12.371-6.833-23.764-6.833-14.409 0-24.268 7.046-27.111 9.141-5.846 4.307-9.527 9.132-11.683 12.484C117.609 83.695 99.193 78.347 80.778 73L78 75.278l50.5 38.734c.05 3.195.637 19.651 14.083 32.738 2.175 2.116 14.115 13.321 32.236 13.167 8.652-.074 17.101-2.73 24.343-7.314l35.504 11.786 6.157 2.615a254.068 254.068 0 0 0 31.12 9.608l47.833 15.944-100.823-65.973z"></path><path style="fill:#6ca542" d="m312.806 189.278-102.654-60.654a39.946 39.946 0 0 0 2.543-14.054c0-22.114-17.927-40.042-40.042-40.042-14.876 0-27.847 8.118-34.751 20.159L80.194 75.25l52.827 33.62a40.274 40.274 0 0 0-.411 5.7c0 22.114 17.927 40.042 40.042 40.042 10.34 0 19.764-3.921 26.869-10.355 37.762 15.006 75.523 30.014 113.285 45.021z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-zero'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var zofia = {
  id: 'zofia',
  name: 'Zofia',
  role: 'Attacker',
  unit: 'GROM',
  ratings: {
    health: 2,
    speed: 2,
    difficulty: 1
  },
  meta: {
    gender: 'f',
    country: 'pl',
    season: 'Y2S4',
    height: 179,
    weight: 72
  },
  bio: {
    real_name: 'Zofia Bosak',
    birthplace: 'Wroclaw, Poland'
  },
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#419291" d="M73 73h204v204H73z"></path><path d="m161.111 277-2.667-21.333-5.833 17.111c-.635-2.455-1.562-6.015-2.708-10.314-2.754-10.33-3.33-12.02-3.792-13.297-1.257-3.474-2.881-7.886-6.155-13.007-2.413-3.775-4.739-6.399-6.512-8.381-3.945-4.412-7.386-7.242-8.111-7.833-1.307-1.065-2.595-2.03-9.64-6.654-5.492-3.605-7.071-4.568-9.388-6.096-5.978-3.941-10.221-7.253-13.917-10.139-9.747-7.61-17.92-15.246-23.764-21.056l1.094.01a94.694 94.694 0 0 1-5.406-6.24c-2.985-3.763-8.036-10.719-12.438-20.521-1.209-2.692-2.59-5.767-3.896-10.146-2.712-9.096-3.031-16.876-3.16-20.604-.079-2.27-.066-4.493-.049-7.625.024-4.335.132-7.934.229-10.458a35.763 35.763 0 0 0 5.472 4.028 86.906 86.906 0 0 1-11.486-16.819l1.576-3.75 3.993-4.375 22.361-23.889 11.75-13.222L95.889 20l-4.056 32.306a41.101 41.101 0 0 0-.667 6.556c-.008.409-.017.877 0 1.472.078 2.647.592 4.822 1.089 6.537 2.05 7.068 4.439 11.866 4.439 11.866C103.445 92.289 111.875 103 111.875 103c6.382 8.109 11.884 13.24 13.097 14.361 2.36 2.18 6.153 5.656 11.694 9.417a91.092 91.092 0 0 0 17.5 9.264 22.975 22.975 0 0 0 7.042-5.167c.556-.601 2.847-3.144 4.5-7.167 1.693-4.12 1.615-7.11 1.583-7.833-.045-1.048-.068-1.571-.331-2.085-1.314-2.569-6.053-2.516-10.502-2.415-1.545.035-5.954.206-12.731 1.835a84.394 84.394 0 0 0-7.103 2.04l79.708-76.125c-8.677 22.342-14.97 39.157-17.234 45.577a137.481 137.481 0 0 0-3.182 10.215c-.554 2.061-1.24 4.633-1.875 8.042-.927 4.977-1.479 7.938-1.247 11.937.16 2.764.391 6.141 2.33 9.875 1.638 3.154 3.681 4.997 4.208 5.458a17.731 17.731 0 0 0 4.375 2.812 128.786 128.786 0 0 0 8.236-4.486c9.553-5.663 15.886-11.085 17.389-12.389 1.748-1.516 5.85-5.171 10.542-10.458a115.303 115.303 0 0 0 8.625-10.979c1.822-2.64 4.417-6.43 7.111-11.826 1.222-2.448 2.72-5.476 4.097-9.674a61.096 61.096 0 0 0 2.708-12.618 610049.36 610049.36 0 0 0-5.542-42.236 2457.427 2457.427 0 0 1 53.875 69.188 21.597 21.597 0 0 1-1.188 4.125c-.696 1.742-1.521 3.137-3.258 5.599a107.509 107.509 0 0 1-5.419 7.037l4.503-3.101c.049 2.497.105 6.172.111 10.639.007 5.299.01 7.948-.139 10.194-.484 7.273-1.866 12.715-2.278 14.27-1.366 5.167-2.978 8.892-4.195 11.674-.741 1.694-2.892 6.474-6.478 12.25-3.346 5.39-6.419 9.193-8.161 11.333a119.211 119.211 0 0 1-3.812 4.458l.751-.053c-.956.918-2.294 2.197-3.902 3.714-2.025 1.911-5.215 4.92-8.3 7.686a242.98 242.98 0 0 1-11.875 9.972c-2.546 2.004-6.406 5.03-11.681 8.639-4.488 3.071-5.37 3.396-12.117 7.965-6.051 4.099-7.498 5.298-8.822 6.519-3.229 2.978-5.866 6.214-6.93 7.527a90.492 90.492 0 0 0-3.039 3.988s-2.575 3.552-4.711 7.074c-2.495 4.115-7.551 15.885-11.868 32.372l-5.833-17.778-4.44 23.334h-26.556z"></path><path style="fill:#fff" d="M165.167 277c-1.286-16.144-2.859-28.512-4.035-36.641-.73-5.048-1.669-9.763-3.549-19.193-.854-4.287-1.718-8.407-3.745-13.567a65.792 65.792 0 0 0-3.422-7.349 504.037 504.037 0 0 1 2.583 21.083c.815 8.06 1.321 13.198 1.42 20.333a166.043 166.043 0 0 1-.378 13.958 162.127 162.127 0 0 1-.833 8.583 86.566 86.566 0 0 0-3.141-15.101c-.583-1.924-2.41-7.71-6.011-14.774-2.262-4.437-4.956-9.637-9.944-15.333a61.721 61.721 0 0 0-6.569-6.458 121.189 121.189 0 0 0 22.208-31.334 109.817 109.817 0 0 1-12.583 10.75 109.925 109.925 0 0 1-18.75 11.042 211.416 211.416 0 0 1-31.028-19.5 213.01 213.01 0 0 0 16.778-2.542 214.824 214.824 0 0 0 43.222-13.181 174.041 174.041 0 0 1-16.556 2.056c-21.437 1.622-40.195-.965-55.028-4.528a73.233 73.233 0 0 1-10.264-11.806c-9.515-13.667-12.219-27.588-13.083-35.917a244.622 244.622 0 0 0 25.708 16.167c7.147 3.899 15.855 8.602 28.167 13 17.009 6.077 28.631 7.19 31.222 7.417 4.451.39 8.177.436 10.781.402a171.619 171.619 0 0 1-11.232-3.273c-4.751-1.562-20.813-7.072-40.224-19.202-5.55-3.468-14.904-9.373-25.219-18.749-8.994-8.174-13.941-14.644-16.373-18.035a105.818 105.818 0 0 1-4.428-6.698 270.198 270.198 0 0 1 27.473-33.944 79.816 79.816 0 0 0 2.417 12.5c2.347 8.452 5.492 14.358 8 19 5.428 10.046 10.999 16.833 14.25 20.75a141.85 141.85 0 0 0 14.542 15.096c5.921 5.301 14.28 12.675 26.985 18.654a95.401 95.401 0 0 0 8.861 3.639l-.944-.75c2.904-1.5 11.904-6.554 16.167-16.056 2.102-4.687 2.314-8.809 2.389-10.611.211-5.043-1.013-7.021-1.611-7.833a8.438 8.438 0 0 0-3.137-2.598c-1.674-.792-3.26-.823-5.247-.672-2.336.178-5.799.651-10.046 2.007L191 76.278c-4.223 10.887-6.016 20.112-6.854 26.503-1.103 8.413-.672 12.833.354 16.72 1.75 6.623 5.012 10.88 5.833 11.917 4.659 5.883 10.294 8.577 13.146 9.708a148.31 148.31 0 0 0 22.771-13.896c11.729-8.706 19.468-17.172 25.25-23.563 3.394-3.751 6.56-7.272 10.333-12.5 3.466-4.803 8.531-11.921 12.458-22.25a83.416 83.416 0 0 0 3.521-11.833 213.887 213.887 0 0 1 20.646 31.958 105.113 105.113 0 0 1-5.292 8.042c-4.003 5.516-10.065 12.739-22.125 22.542-19.832 16.121-38.283 24.914-45.625 28.208a207.326 207.326 0 0 1-22.639 8.611 150.099 150.099 0 0 0 22.75-3.778c3.202-.788 14.035-3.568 30.306-11 10.713-4.893 24.977-12.348 40.833-23.556a73.246 73.246 0 0 1-4.5 20.722c-5.166 13.735-13.345 22.828-18.5 27.708a166.962 166.962 0 0 1-70.945 1.347 213.378 213.378 0 0 0 59.333 15.612 277.888 277.888 0 0 1-30.722 20.222 105.218 105.218 0 0 1-21.664-13.848 104.622 104.622 0 0 1-9.503-8.93 124.85 124.85 0 0 0 22.389 31.333 62.045 62.045 0 0 0-6.333 6.667c-3.245 3.966-5.211 7.371-6.556 9.722-2.273 3.976-3.644 7.139-4.611 9.389-1.494 3.476-3.977 9.332-5.722 17.333a85.12 85.12 0 0 0-1.472 9.056 129.557 129.557 0 0 1-1.75-12.611c-.215-2.418-.764-9.348-.111-22.167a280.217 280.217 0 0 1 2.625-26.486c-.75 1.821-1.84 4.595-2.98 8.033-2.799 8.442-3.994 15.153-4.788 19.845-3.282 19.391-6.307 43.235-6.648 45.941l-19.041.001z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-zofia'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var recruit_blue = {
  id: 'recruit_blue',
  name: 'Recruit (Blue)',
  role: 'Recruit',
  unit: 'RECRUIT',
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#69686d" d="M73 73h204v204H73z"></path><path d="M277 243 107 73H73v38.333L238.667 277H277v-34z"></path><path d="M236.53 144.144a6.999 6.999 0 0 0 1.915-4.811V113.06a16.953 16.953 0 0 0-.962-6.465 18.154 18.154 0 0 0-1.977-3.872c-5.189-7.611-16.783-10.207-19.055-10.65-7.109-1.381-13.061-1.571-18.435-1.571-2.312 0-4.733.04-7.297.082-15.005.246-19.005.323-20.861.642-7.234 1.242-21.262 4.957-33.931 15.891-1.766 1.525-3.846 3.779-8.402 8.717-12.467 13.512-19.132 22.418-23.061 27.941-11.324 15.918-13.691 23.092-9.38 28.428 1.35 1.671 3.914 3.664 8.461 3.664.174 0 .345-.003.514-.008l6.931-.098c.006.407-.003.815.015 1.22.141 3.081.688 5.591 1.217 8.018l.106.486.098.452c.973 4.49 1.742 8.036 3.863 12.121 1.635 3.15 3.16 4.852 4.385 6.221.999 1.116 1.789 1.998 2.939 3.982 1.609 2.775 2.381 5.129 3.129 7.405 1.37 4.175 1.604 6.586 1.852 9.139.197 2.033.401 4.136 1.126 6.729 3.014 10.784 11.21 16.687 18.442 21.896 6.53 4.703 14.654 10.555 26.014 10.555.281 0 .565-.004.849-.011 9.436-.244 16.243-4.451 22.825-8.519 7.637-4.72 12.079-9.768 15.019-13.107 2.872-3.263 4.432-5.656 5.565-8.534 1.065-2.707 1.316-4.744 1.605-7.103.117-.953.25-2.034.461-3.362.003-.018.458-2.804 1.717-7.926.997-4.053 2.544-6.173 4.685-9.108 2.179-2.986 4.89-6.702 7.095-12.751 2.4-6.586 2.845-12.192 3.275-17.614a86.897 86.897 0 0 0-.497-18.379 6.997 6.997 0 0 0-4.66-5.684v-3.072l4.415-4.671z"></path><path style="fill:#337abb" d="M230.889 108.944s-.423-1.187-1.167-2.278c-3.838-5.629-14.611-7.722-14.611-7.722-8.347-1.622-14.953-1.514-24.278-1.361-12.26.201-18.39.301-19.792.542-5.116.878-18.401 3.814-30.542 14.292-1.465 1.265-3.588 3.565-7.833 8.167-11.924 12.924-18.511 21.643-22.5 27.25-11.527 16.204-10.359 19.08-9.639 19.972.769.952 2.203 1.098 3.361 1.056l7.861-.111a581.262 581.262 0 0 1 21.583-10.75c8.643-4.085 12.145-5.949 17.578-7.742 5.854-1.932 11.452-3.156 13.338-3.563a151.028 151.028 0 0 1 9.889-1.778c3.051-.42 5.546-.656 7.194-.792 14.959-1.227 22.519.741 24.875 1.417 3.023.867 5.134 1.8 5.069 2.042-.127.477-8.889-.982-12.278-1-1.535-.008-2.573.053-4.528.167a121.372 121.372 0 0 0-13.417 1.528c-6.808 1.182-12.76 2.909-17.287 4.438l61.342.174v-4.974a4.93 4.93 0 0 1 .458-2.04 4.943 4.943 0 0 1 1.25-1.653l4.625-4.889v-26.444a9.987 9.987 0 0 0-.551-3.948z"></path><path style="fill:#fff" d="m118.083 172.333 17.778-9.222a43.578 43.578 0 0 1 14.944-4.611h79.028a79.79 79.79 0 0 1 .457 16.896c-.417 5.262-.799 10.079-2.874 15.77-3.95 10.839-9.487 12.364-12 22.583-1.364 5.546-1.833 8.5-1.833 8.5-.722 4.548-.58 6.24-1.667 9-.78 1.983-1.88 3.716-4.306 6.472-2.86 3.25-6.693 7.605-13.444 11.778-6.235 3.854-11.78 7.281-19.326 7.476-9.443.244-16.337-4.721-22.591-9.226-6.635-4.779-13.438-9.679-15.791-18.1-1.375-4.918-.353-7.892-3.068-16.167-.861-2.622-1.787-5.393-3.724-8.733-3.062-5.282-4.743-5.248-7.167-9.917-1.749-3.369-2.34-6.256-3.333-10.833-.551-2.539-1.049-4.676-1.171-7.339a32.914 32.914 0 0 1 .088-4.327z"></path><path d="M201.983 101.882a66.502 66.502 0 0 0-11.816 3.618c-4.983 2.05-9.062 4.442-20.991 12.678-5.481 3.784-8.72 6.11-12.852 9.036-11.161 7.904-15.117 10.472-21.913 15.231-6.797 4.759-16.53 11.776-28.411 21.056a1345.29 1345.29 0 0 1 21.833-12.667c10.18-5.776 14.883-8.265 23.333-13.5 3.687-2.284 8.356-5.186 14.333-9.333 7.246-5.028 10.016-7.446 16.833-12.5a379.827 379.827 0 0 1 19.651-13.619zM222 162.667c1.304 10.445.124 18.407-1.417 21.167-1.221 2.187-2.803 3.801-2.803 3.801s-1.233 1.258-2.838 2.325c-5.038 3.349-14.284 5.05-20.943 5.374-1.404.068-3.403.11-5.778-.667 0 0-1.993-.652-3.778-1.889-4.875-3.379-6.338-10.152-6.556-11.222h-6.333c-1.597 3.667-6.529 13.876-14.556 14.556-1.256.106-2.334-.042-4.75-.611-4.405-1.038-10.763-2.886-18.472-6.389a11.283 11.283 0 0 1-3.444-2.333c-3.443-3.444-3.561-8.304-3.667-12.667-.061-2.531.112-6.399 1.422-11.023a1048.402 1048.402 0 0 0 23.355 5.579c17.342 3.935 20.538 4.201 23.667 4.222 6.419.043 13.033-1.526 26-4.667A482.296 482.296 0 0 0 222 162.667zm-10.111-54.535-2.547 6.398-1.239 3.112-3.343.216-6.872.445 5.298 4.399 2.577 2.14-.827 3.246-1.7 6.673 5.821-3.679 2.832-1.79 2.832 1.79 5.821 3.679-1.7-6.673-.827-3.246 2.577-2.14 5.298-4.399-6.872-.445-3.343-.216-1.239-3.112-2.547-6.398z"></path><path style="fill:#fff" d="m211.889 115.544 1.879 4.722 5.072.328-3.91 3.247 1.255 4.925-4.296-2.716-4.296 2.716 1.255-4.925-3.91-3.247 5.071-.328z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-recruit_blue'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var recruit_green = {
  id: 'recruit_green',
  name: 'Recruit (Green)',
  role: 'Recruit',
  unit: 'RECRUIT',
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#69686d" d="M73 73h204v204H73z"></path><path d="M277 243 107 73H73v38.333L238.667 277H277v-34z"></path><path d="M236.53 144.144a6.999 6.999 0 0 0 1.915-4.811V113.06a16.953 16.953 0 0 0-.962-6.465 18.154 18.154 0 0 0-1.977-3.872c-5.189-7.611-16.783-10.207-19.055-10.65-7.109-1.381-13.061-1.571-18.435-1.571-2.312 0-4.733.04-7.297.082-15.005.246-19.005.323-20.861.642-7.234 1.242-21.262 4.957-33.931 15.891-1.766 1.525-3.846 3.779-8.402 8.717-12.467 13.512-19.132 22.418-23.061 27.941-11.324 15.918-13.691 23.092-9.38 28.428 1.35 1.671 3.914 3.664 8.461 3.664.174 0 .345-.003.514-.008l6.931-.098c.006.407-.003.815.015 1.22.141 3.081.688 5.591 1.217 8.018l.106.486.098.452c.973 4.49 1.742 8.036 3.863 12.121 1.635 3.15 3.16 4.852 4.385 6.221.999 1.116 1.789 1.998 2.939 3.982 1.609 2.775 2.381 5.129 3.129 7.405 1.37 4.175 1.604 6.586 1.852 9.139.197 2.033.401 4.136 1.126 6.729 3.014 10.784 11.21 16.687 18.442 21.896 6.53 4.703 14.654 10.555 26.014 10.555.281 0 .565-.004.849-.011 9.436-.244 16.243-4.451 22.825-8.519 7.637-4.72 12.079-9.768 15.019-13.107 2.872-3.263 4.432-5.656 5.565-8.534 1.065-2.707 1.316-4.744 1.605-7.103.117-.953.25-2.034.461-3.362.003-.018.458-2.804 1.717-7.926.997-4.053 2.544-6.173 4.685-9.108 2.179-2.986 4.89-6.702 7.095-12.751 2.4-6.586 2.845-12.192 3.275-17.614a86.897 86.897 0 0 0-.497-18.379 6.997 6.997 0 0 0-4.66-5.684v-3.072l4.415-4.671z"></path><path style="fill:#8ac04a" d="M230.889 108.944s-.423-1.187-1.167-2.278c-3.838-5.629-14.611-7.722-14.611-7.722-8.347-1.622-14.953-1.514-24.278-1.361-12.26.201-18.39.301-19.792.542-5.116.878-18.401 3.814-30.542 14.292-1.465 1.265-3.588 3.565-7.833 8.167-11.924 12.924-18.511 21.643-22.5 27.25-11.527 16.204-10.359 19.08-9.639 19.972.769.952 2.203 1.098 3.361 1.056l7.861-.111a581.262 581.262 0 0 1 21.583-10.75c8.643-4.085 12.145-5.949 17.578-7.742 5.854-1.932 11.452-3.156 13.338-3.563a151.028 151.028 0 0 1 9.889-1.778c3.051-.42 5.546-.656 7.194-.792 14.959-1.227 22.519.741 24.875 1.417 3.023.867 5.134 1.8 5.069 2.042-.127.477-8.889-.982-12.278-1-1.535-.008-2.573.053-4.528.167a121.372 121.372 0 0 0-13.417 1.528c-6.808 1.182-12.76 2.909-17.287 4.438l61.342.174v-4.974a4.93 4.93 0 0 1 .458-2.04 4.943 4.943 0 0 1 1.25-1.653l4.625-4.889v-26.444a9.987 9.987 0 0 0-.551-3.948z"></path><path style="fill:#fff" d="m118.083 172.333 17.778-9.222a43.578 43.578 0 0 1 14.944-4.611h79.028a79.79 79.79 0 0 1 .457 16.896c-.417 5.262-.799 10.079-2.874 15.77-3.95 10.839-9.487 12.364-12 22.583-1.364 5.546-1.833 8.5-1.833 8.5-.722 4.548-.58 6.24-1.667 9-.78 1.983-1.88 3.716-4.306 6.472-2.86 3.25-6.693 7.605-13.444 11.778-6.235 3.854-11.78 7.281-19.326 7.476-9.443.244-16.337-4.721-22.591-9.226-6.635-4.779-13.438-9.679-15.791-18.1-1.375-4.918-.353-7.892-3.068-16.167-.861-2.622-1.787-5.393-3.724-8.733-3.062-5.282-4.743-5.248-7.167-9.917-1.749-3.369-2.34-6.256-3.333-10.833-.551-2.539-1.049-4.676-1.171-7.339a32.914 32.914 0 0 1 .088-4.327z"></path><path d="M201.983 101.882a66.502 66.502 0 0 0-11.816 3.618c-4.983 2.05-9.062 4.442-20.991 12.678-5.481 3.784-8.72 6.11-12.852 9.036-11.161 7.904-15.117 10.472-21.913 15.231-6.797 4.759-16.53 11.776-28.411 21.056a1345.29 1345.29 0 0 1 21.833-12.667c10.18-5.776 14.883-8.265 23.333-13.5 3.687-2.284 8.356-5.186 14.333-9.333 7.246-5.028 10.016-7.446 16.833-12.5a379.827 379.827 0 0 1 19.651-13.619zM222 162.667c1.304 10.445.124 18.407-1.417 21.167-1.221 2.187-2.803 3.801-2.803 3.801s-1.233 1.258-2.838 2.325c-5.038 3.349-14.284 5.05-20.943 5.374-1.404.068-3.403.11-5.778-.667 0 0-1.993-.652-3.778-1.889-4.875-3.379-6.338-10.152-6.556-11.222h-6.333c-1.597 3.667-6.529 13.876-14.556 14.556-1.256.106-2.334-.042-4.75-.611-4.405-1.038-10.763-2.886-18.472-6.389a11.283 11.283 0 0 1-3.444-2.333c-3.443-3.444-3.561-8.304-3.667-12.667-.061-2.531.112-6.399 1.422-11.023a1048.402 1048.402 0 0 0 23.355 5.579c17.342 3.935 20.538 4.201 23.667 4.222 6.419.043 13.033-1.526 26-4.667A482.296 482.296 0 0 0 222 162.667zm-10.111-54.535-2.547 6.398-1.239 3.112-3.343.216-6.872.445 5.298 4.399 2.577 2.14-.827 3.246-1.7 6.673 5.821-3.679 2.832-1.79 2.832 1.79 5.821 3.679-1.7-6.673-.827-3.246 2.577-2.14 5.298-4.399-6.872-.445-3.343-.216-1.239-3.112-2.547-6.398z"></path><path style="fill:#fff" d="m211.889 115.544 1.879 4.722 5.072.328-3.91 3.247 1.255 4.925-4.296-2.716-4.296 2.716 1.255-4.925-3.91-3.247 5.071-.328z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-recruit_green'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var recruit_orange = {
  id: 'recruit_orange',
  name: 'Recruit (Orange)',
  role: 'Recruit',
  unit: 'RECRUIT',
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#69686d" d="M73 73h204v204H73z"></path><path d="M277 243 107 73H73v38.333L238.667 277H277v-34z"></path><path d="M236.53 144.144a6.999 6.999 0 0 0 1.915-4.811V113.06a16.953 16.953 0 0 0-.962-6.465 18.154 18.154 0 0 0-1.977-3.872c-5.189-7.611-16.783-10.207-19.055-10.65-7.109-1.381-13.061-1.571-18.435-1.571-2.312 0-4.733.04-7.297.082-15.005.246-19.005.323-20.861.642-7.234 1.242-21.262 4.957-33.931 15.891-1.766 1.525-3.846 3.779-8.402 8.717-12.467 13.512-19.132 22.418-23.061 27.941-11.324 15.918-13.691 23.092-9.38 28.428 1.35 1.671 3.914 3.664 8.461 3.664.174 0 .345-.003.514-.008l6.931-.098c.006.407-.003.815.015 1.22.141 3.081.688 5.591 1.217 8.018l.106.486.098.452c.973 4.49 1.742 8.036 3.863 12.121 1.635 3.15 3.16 4.852 4.385 6.221.999 1.116 1.789 1.998 2.939 3.982 1.609 2.775 2.381 5.129 3.129 7.405 1.37 4.175 1.604 6.586 1.852 9.139.197 2.033.401 4.136 1.126 6.729 3.014 10.784 11.21 16.687 18.442 21.896 6.53 4.703 14.654 10.555 26.014 10.555.281 0 .565-.004.849-.011 9.436-.244 16.243-4.451 22.825-8.519 7.637-4.72 12.079-9.768 15.019-13.107 2.872-3.263 4.432-5.656 5.565-8.534 1.065-2.707 1.316-4.744 1.605-7.103.117-.953.25-2.034.461-3.362.003-.018.458-2.804 1.717-7.926.997-4.053 2.544-6.173 4.685-9.108 2.179-2.986 4.89-6.702 7.095-12.751 2.4-6.586 2.845-12.192 3.275-17.614a86.897 86.897 0 0 0-.497-18.379 6.997 6.997 0 0 0-4.66-5.684v-3.072l4.415-4.671z"></path><path style="fill:#f35f2c" d="M230.889 108.944s-.423-1.187-1.167-2.278c-3.838-5.629-14.611-7.722-14.611-7.722-8.347-1.622-14.953-1.514-24.278-1.361-12.26.201-18.39.301-19.792.542-5.116.878-18.401 3.814-30.542 14.292-1.465 1.265-3.588 3.565-7.833 8.167-11.924 12.924-18.511 21.643-22.5 27.25-11.527 16.204-10.359 19.08-9.639 19.972.769.952 2.203 1.098 3.361 1.056l7.861-.111a581.262 581.262 0 0 1 21.583-10.75c8.643-4.085 12.145-5.949 17.578-7.742 5.854-1.932 11.452-3.156 13.338-3.563a151.028 151.028 0 0 1 9.889-1.778c3.051-.42 5.546-.656 7.194-.792 14.959-1.227 22.519.741 24.875 1.417 3.023.867 5.134 1.8 5.069 2.042-.127.477-8.889-.982-12.278-1-1.535-.008-2.573.053-4.528.167a121.372 121.372 0 0 0-13.417 1.528c-6.808 1.182-12.76 2.909-17.287 4.438l61.342.174v-4.974a4.93 4.93 0 0 1 .458-2.04 4.943 4.943 0 0 1 1.25-1.653l4.625-4.889v-26.444a9.987 9.987 0 0 0-.551-3.948z"></path><path style="fill:#fff" d="m118.083 172.333 17.778-9.222a43.578 43.578 0 0 1 14.944-4.611h79.028a79.79 79.79 0 0 1 .457 16.896c-.417 5.262-.799 10.079-2.874 15.77-3.95 10.839-9.487 12.364-12 22.583-1.364 5.546-1.833 8.5-1.833 8.5-.722 4.548-.58 6.24-1.667 9-.78 1.983-1.88 3.716-4.306 6.472-2.86 3.25-6.693 7.605-13.444 11.778-6.235 3.854-11.78 7.281-19.326 7.476-9.443.244-16.337-4.721-22.591-9.226-6.635-4.779-13.438-9.679-15.791-18.1-1.375-4.918-.353-7.892-3.068-16.167-.861-2.622-1.787-5.393-3.724-8.733-3.062-5.282-4.743-5.248-7.167-9.917-1.749-3.369-2.34-6.256-3.333-10.833-.551-2.539-1.049-4.676-1.171-7.339a32.914 32.914 0 0 1 .088-4.327z"></path><path d="M201.983 101.882a66.502 66.502 0 0 0-11.816 3.618c-4.983 2.05-9.062 4.442-20.991 12.678-5.481 3.784-8.72 6.11-12.852 9.036-11.161 7.904-15.117 10.472-21.913 15.231-6.797 4.759-16.53 11.776-28.411 21.056a1345.29 1345.29 0 0 1 21.833-12.667c10.18-5.776 14.883-8.265 23.333-13.5 3.687-2.284 8.356-5.186 14.333-9.333 7.246-5.028 10.016-7.446 16.833-12.5a379.827 379.827 0 0 1 19.651-13.619zM222 162.667c1.304 10.445.124 18.407-1.417 21.167-1.221 2.187-2.803 3.801-2.803 3.801s-1.233 1.258-2.838 2.325c-5.038 3.349-14.284 5.05-20.943 5.374-1.404.068-3.403.11-5.778-.667 0 0-1.993-.652-3.778-1.889-4.875-3.379-6.338-10.152-6.556-11.222h-6.333c-1.597 3.667-6.529 13.876-14.556 14.556-1.256.106-2.334-.042-4.75-.611-4.405-1.038-10.763-2.886-18.472-6.389a11.283 11.283 0 0 1-3.444-2.333c-3.443-3.444-3.561-8.304-3.667-12.667-.061-2.531.112-6.399 1.422-11.023a1048.402 1048.402 0 0 0 23.355 5.579c17.342 3.935 20.538 4.201 23.667 4.222 6.419.043 13.033-1.526 26-4.667A482.296 482.296 0 0 0 222 162.667zm-10.111-54.535-2.547 6.398-1.239 3.112-3.343.216-6.872.445 5.298 4.399 2.577 2.14-.827 3.246-1.7 6.673 5.821-3.679 2.832-1.79 2.832 1.79 5.821 3.679-1.7-6.673-.827-3.246 2.577-2.14 5.298-4.399-6.872-.445-3.343-.216-1.239-3.112-2.547-6.398z"></path><path style="fill:#fff" d="m211.889 115.544 1.879 4.722 5.072.328-3.91 3.247 1.255 4.925-4.296-2.716-4.296 2.716 1.255-4.925-3.91-3.247 5.071-.328z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-recruit_orange'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var recruit_red = {
  id: 'recruit_red',
  name: 'Recruit (Red)',
  role: 'Recruit',
  unit: 'RECRUIT',
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#69686d" d="M73 73h204v204H73z"></path><path d="M277 243 107 73H73v38.333L238.667 277H277v-34z"></path><path d="M236.53 144.144a6.999 6.999 0 0 0 1.915-4.811V113.06a16.953 16.953 0 0 0-.962-6.465 18.154 18.154 0 0 0-1.977-3.872c-5.189-7.611-16.783-10.207-19.055-10.65-7.109-1.381-13.061-1.571-18.435-1.571-2.312 0-4.733.04-7.297.082-15.005.246-19.005.323-20.861.642-7.234 1.242-21.262 4.957-33.931 15.891-1.766 1.525-3.846 3.779-8.402 8.717-12.467 13.512-19.132 22.418-23.061 27.941-11.324 15.918-13.691 23.092-9.38 28.428 1.35 1.671 3.914 3.664 8.461 3.664.174 0 .345-.003.514-.008l6.931-.098c.006.407-.003.815.015 1.22.141 3.081.688 5.591 1.217 8.018l.106.486.098.452c.973 4.49 1.742 8.036 3.863 12.121 1.635 3.15 3.16 4.852 4.385 6.221.999 1.116 1.789 1.998 2.939 3.982 1.609 2.775 2.381 5.129 3.129 7.405 1.37 4.175 1.604 6.586 1.852 9.139.197 2.033.401 4.136 1.126 6.729 3.014 10.784 11.21 16.687 18.442 21.896 6.53 4.703 14.654 10.555 26.014 10.555.281 0 .565-.004.849-.011 9.436-.244 16.243-4.451 22.825-8.519 7.637-4.72 12.079-9.768 15.019-13.107 2.872-3.263 4.432-5.656 5.565-8.534 1.065-2.707 1.316-4.744 1.605-7.103.117-.953.25-2.034.461-3.362.003-.018.458-2.804 1.717-7.926.997-4.053 2.544-6.173 4.685-9.108 2.179-2.986 4.89-6.702 7.095-12.751 2.4-6.586 2.845-12.192 3.275-17.614a86.897 86.897 0 0 0-.497-18.379 6.997 6.997 0 0 0-4.66-5.684v-3.072l4.415-4.671z"></path><path style="fill:#cd2434" d="M230.889 108.944s-.423-1.187-1.167-2.278c-3.838-5.629-14.611-7.722-14.611-7.722-8.347-1.622-14.953-1.514-24.278-1.361-12.26.201-18.39.301-19.792.542-5.116.878-18.401 3.814-30.542 14.292-1.465 1.265-3.588 3.565-7.833 8.167-11.924 12.924-18.511 21.643-22.5 27.25-11.527 16.204-10.359 19.08-9.639 19.972.769.952 2.203 1.098 3.361 1.056l7.861-.111a581.262 581.262 0 0 1 21.583-10.75c8.643-4.085 12.145-5.949 17.578-7.742 5.854-1.932 11.452-3.156 13.338-3.563a151.028 151.028 0 0 1 9.889-1.778c3.051-.42 5.546-.656 7.194-.792 14.959-1.227 22.519.741 24.875 1.417 3.023.867 5.134 1.8 5.069 2.042-.127.477-8.889-.982-12.278-1-1.535-.008-2.573.053-4.528.167a121.372 121.372 0 0 0-13.417 1.528c-6.808 1.182-12.76 2.909-17.287 4.438l61.342.174v-4.974a4.93 4.93 0 0 1 .458-2.04 4.943 4.943 0 0 1 1.25-1.653l4.625-4.889v-26.444a9.987 9.987 0 0 0-.551-3.948z"></path><path style="fill:#fff" d="m118.083 172.333 17.778-9.222a43.578 43.578 0 0 1 14.944-4.611h79.028a79.79 79.79 0 0 1 .457 16.896c-.417 5.262-.799 10.079-2.874 15.77-3.95 10.839-9.487 12.364-12 22.583-1.364 5.546-1.833 8.5-1.833 8.5-.722 4.548-.58 6.24-1.667 9-.78 1.983-1.88 3.716-4.306 6.472-2.86 3.25-6.693 7.605-13.444 11.778-6.235 3.854-11.78 7.281-19.326 7.476-9.443.244-16.337-4.721-22.591-9.226-6.635-4.779-13.438-9.679-15.791-18.1-1.375-4.918-.353-7.892-3.068-16.167-.861-2.622-1.787-5.393-3.724-8.733-3.062-5.282-4.743-5.248-7.167-9.917-1.749-3.369-2.34-6.256-3.333-10.833-.551-2.539-1.049-4.676-1.171-7.339a32.914 32.914 0 0 1 .088-4.327z"></path><path d="M201.983 101.882a66.502 66.502 0 0 0-11.816 3.618c-4.983 2.05-9.062 4.442-20.991 12.678-5.481 3.784-8.72 6.11-12.852 9.036-11.161 7.904-15.117 10.472-21.913 15.231-6.797 4.759-16.53 11.776-28.411 21.056a1345.29 1345.29 0 0 1 21.833-12.667c10.18-5.776 14.883-8.265 23.333-13.5 3.687-2.284 8.356-5.186 14.333-9.333 7.246-5.028 10.016-7.446 16.833-12.5a379.827 379.827 0 0 1 19.651-13.619zM222 162.667c1.304 10.445.124 18.407-1.417 21.167-1.221 2.187-2.803 3.801-2.803 3.801s-1.233 1.258-2.838 2.325c-5.038 3.349-14.284 5.05-20.943 5.374-1.404.068-3.403.11-5.778-.667 0 0-1.993-.652-3.778-1.889-4.875-3.379-6.338-10.152-6.556-11.222h-6.333c-1.597 3.667-6.529 13.876-14.556 14.556-1.256.106-2.334-.042-4.75-.611-4.405-1.038-10.763-2.886-18.472-6.389a11.283 11.283 0 0 1-3.444-2.333c-3.443-3.444-3.561-8.304-3.667-12.667-.061-2.531.112-6.399 1.422-11.023a1048.402 1048.402 0 0 0 23.355 5.579c17.342 3.935 20.538 4.201 23.667 4.222 6.419.043 13.033-1.526 26-4.667A482.296 482.296 0 0 0 222 162.667zm-10.111-54.535-2.547 6.398-1.239 3.112-3.343.216-6.872.445 5.298 4.399 2.577 2.14-.827 3.246-1.7 6.673 5.821-3.679 2.832-1.79 2.832 1.79 5.821 3.679-1.7-6.673-.827-3.246 2.577-2.14 5.298-4.399-6.872-.445-3.343-.216-1.239-3.112-2.547-6.398z"></path><path style="fill:#fff" d="m211.889 115.544 1.879 4.722 5.072.328-3.91 3.247 1.255 4.925-4.296-2.716-4.296 2.716 1.255-4.925-3.91-3.247 5.071-.328z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-recruit_red'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var recruit_yellow = {
  id: 'recruit_yellow',
  name: 'Recruit (Yellow)',
  role: 'Recruit',
  unit: 'RECRUIT',
  svg: {
    contents: '<switch><g><path style="opacity:.4" d="M45 45h260v260H45z"></path><path style="fill:#69686d" d="M73 73h204v204H73z"></path><path d="M277 243 107 73H73v38.333L238.667 277H277v-34z"></path><path d="M236.53 144.144a6.999 6.999 0 0 0 1.915-4.811V113.06a16.953 16.953 0 0 0-.962-6.465 18.154 18.154 0 0 0-1.977-3.872c-5.189-7.611-16.783-10.207-19.055-10.65-7.109-1.381-13.061-1.571-18.435-1.571-2.312 0-4.733.04-7.297.082-15.005.246-19.005.323-20.861.642-7.234 1.242-21.262 4.957-33.931 15.891-1.766 1.525-3.846 3.779-8.402 8.717-12.467 13.512-19.132 22.418-23.061 27.941-11.324 15.918-13.691 23.092-9.38 28.428 1.35 1.671 3.914 3.664 8.461 3.664.174 0 .345-.003.514-.008l6.931-.098c.006.407-.003.815.015 1.22.141 3.081.688 5.591 1.217 8.018l.106.486.098.452c.973 4.49 1.742 8.036 3.863 12.121 1.635 3.15 3.16 4.852 4.385 6.221.999 1.116 1.789 1.998 2.939 3.982 1.609 2.775 2.381 5.129 3.129 7.405 1.37 4.175 1.604 6.586 1.852 9.139.197 2.033.401 4.136 1.126 6.729 3.014 10.784 11.21 16.687 18.442 21.896 6.53 4.703 14.654 10.555 26.014 10.555.281 0 .565-.004.849-.011 9.436-.244 16.243-4.451 22.825-8.519 7.637-4.72 12.079-9.768 15.019-13.107 2.872-3.263 4.432-5.656 5.565-8.534 1.065-2.707 1.316-4.744 1.605-7.103.117-.953.25-2.034.461-3.362.003-.018.458-2.804 1.717-7.926.997-4.053 2.544-6.173 4.685-9.108 2.179-2.986 4.89-6.702 7.095-12.751 2.4-6.586 2.845-12.192 3.275-17.614a86.897 86.897 0 0 0-.497-18.379 6.997 6.997 0 0 0-4.66-5.684v-3.072l4.415-4.671z"></path><path style="fill:#fcc531" d="M230.889 108.944s-.423-1.187-1.167-2.278c-3.838-5.629-14.611-7.722-14.611-7.722-8.347-1.622-14.953-1.514-24.278-1.361-12.26.201-18.39.301-19.792.542-5.116.878-18.401 3.814-30.542 14.292-1.465 1.265-3.588 3.565-7.833 8.167-11.924 12.924-18.511 21.643-22.5 27.25-11.527 16.204-10.359 19.08-9.639 19.972.769.952 2.203 1.098 3.361 1.056l7.861-.111a581.262 581.262 0 0 1 21.583-10.75c8.643-4.085 12.145-5.949 17.578-7.742 5.854-1.932 11.452-3.156 13.338-3.563a151.028 151.028 0 0 1 9.889-1.778c3.051-.42 5.546-.656 7.194-.792 14.959-1.227 22.519.741 24.875 1.417 3.023.867 5.134 1.8 5.069 2.042-.127.477-8.889-.982-12.278-1-1.535-.008-2.573.053-4.528.167a121.372 121.372 0 0 0-13.417 1.528c-6.808 1.182-12.76 2.909-17.287 4.438l61.342.174v-4.974a4.93 4.93 0 0 1 .458-2.04 4.943 4.943 0 0 1 1.25-1.653l4.625-4.889v-26.444a9.987 9.987 0 0 0-.551-3.948z"></path><path style="fill:#fff" d="m118.083 172.333 17.778-9.222a43.578 43.578 0 0 1 14.944-4.611h79.028a79.79 79.79 0 0 1 .457 16.896c-.417 5.262-.799 10.079-2.874 15.77-3.95 10.839-9.487 12.364-12 22.583-1.364 5.546-1.833 8.5-1.833 8.5-.722 4.548-.58 6.24-1.667 9-.78 1.983-1.88 3.716-4.306 6.472-2.86 3.25-6.693 7.605-13.444 11.778-6.235 3.854-11.78 7.281-19.326 7.476-9.443.244-16.337-4.721-22.591-9.226-6.635-4.779-13.438-9.679-15.791-18.1-1.375-4.918-.353-7.892-3.068-16.167-.861-2.622-1.787-5.393-3.724-8.733-3.062-5.282-4.743-5.248-7.167-9.917-1.749-3.369-2.34-6.256-3.333-10.833-.551-2.539-1.049-4.676-1.171-7.339a32.914 32.914 0 0 1 .088-4.327z"></path><path d="M201.983 101.882a66.502 66.502 0 0 0-11.816 3.618c-4.983 2.05-9.062 4.442-20.991 12.678-5.481 3.784-8.72 6.11-12.852 9.036-11.161 7.904-15.117 10.472-21.913 15.231-6.797 4.759-16.53 11.776-28.411 21.056a1345.29 1345.29 0 0 1 21.833-12.667c10.18-5.776 14.883-8.265 23.333-13.5 3.687-2.284 8.356-5.186 14.333-9.333 7.246-5.028 10.016-7.446 16.833-12.5a379.827 379.827 0 0 1 19.651-13.619zM222 162.667c1.304 10.445.124 18.407-1.417 21.167-1.221 2.187-2.803 3.801-2.803 3.801s-1.233 1.258-2.838 2.325c-5.038 3.349-14.284 5.05-20.943 5.374-1.404.068-3.403.11-5.778-.667 0 0-1.993-.652-3.778-1.889-4.875-3.379-6.338-10.152-6.556-11.222h-6.333c-1.597 3.667-6.529 13.876-14.556 14.556-1.256.106-2.334-.042-4.75-.611-4.405-1.038-10.763-2.886-18.472-6.389a11.283 11.283 0 0 1-3.444-2.333c-3.443-3.444-3.561-8.304-3.667-12.667-.061-2.531.112-6.399 1.422-11.023a1048.402 1048.402 0 0 0 23.355 5.579c17.342 3.935 20.538 4.201 23.667 4.222 6.419.043 13.033-1.526 26-4.667A482.296 482.296 0 0 0 222 162.667zm-10.111-54.535-2.547 6.398-1.239 3.112-3.343.216-6.872.445 5.298 4.399 2.577 2.14-.827 3.246-1.7 6.673 5.821-3.679 2.832-1.79 2.832 1.79 5.821 3.679-1.7-6.673-.827-3.246 2.577-2.14 5.298-4.399-6.872-.445-3.343-.216-1.239-3.112-2.547-6.398z"></path><path style="fill:#fff" d="m211.889 115.544 1.879 4.722 5.072.328-3.91 3.247 1.255 4.925-4.296-2.716-4.296 2.716 1.255-4.925-3.91-3.247 5.071-.328z"></path></g></switch>',
    attributes: {
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 350 350',
      style: 'enable-background:new 0 0 350 350',
      space: 'preserve',
      class: 'r6operators r6operators-recruit_yellow'
    }
  },
  toSVG: function toSVG(userAttr) {
    return getSVGIcon(this, userAttr);
  }
};

var ops = /*#__PURE__*/Object.freeze({
  __proto__: null,
  ace: ace,
  alibi: alibi,
  amaru: amaru,
  aruni: aruni,
  ash: ash,
  bandit: bandit,
  blackbeard: blackbeard,
  blitz: blitz,
  buck: buck,
  capitao: capitao,
  castle: castle,
  caveira: caveira,
  clash: clash,
  doc: doc,
  dokkaebi: dokkaebi,
  echo: echo,
  ela: ela,
  finka: finka,
  flores: flores,
  frost: frost,
  fuze: fuze,
  glaz: glaz,
  goyo: goyo,
  gridlock: gridlock,
  hibana: hibana,
  iana: iana,
  iq: iq,
  jackal: jackal,
  jager: jager,
  kaid: kaid,
  kali: kali,
  kapkan: kapkan,
  lesion: lesion,
  lion: lion,
  maestro: maestro,
  maverick: maverick,
  melusi: melusi,
  mira: mira,
  montagne: montagne,
  mozzie: mozzie,
  mute: mute,
  nokk: nokk,
  nomad: nomad,
  oryx: oryx,
  osa: osa,
  pulse: pulse,
  rook: rook,
  sledge: sledge,
  smoke: smoke,
  tachanka: tachanka,
  thatcher: thatcher,
  thermite: thermite,
  thorn: thorn,
  thunderbird: thunderbird,
  twitch: twitch,
  valkyrie: valkyrie,
  vigil: vigil,
  wamai: wamai,
  warden: warden,
  ying: ying,
  zero: zero,
  zofia: zofia,
  recruit_blue: recruit_blue,
  recruit_green: recruit_green,
  recruit_orange: recruit_orange,
  recruit_red: recruit_red,
  recruit_yellow: recruit_yellow
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var index = _objectSpread({}, ops);


//# sourceMappingURL=index.mjs.map


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,